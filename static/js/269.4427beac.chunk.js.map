{"version":3,"file":"static/js/269.4427beac.chunk.js","mappings":"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","sources":["pages/NoBoardPage.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js"],"sourcesContent":["import { Box, Typography } from '@mui/material';\nimport { container, text } from 'styles';\n\nexport const NoBoardPage = () => {\n  return (\n    <Box sx={container.board}>\n      <Box sx={container.noBoardInner}>\n        <Typography component=\"p\" sx={text.noBoard}>\n          Before starting your project, it is essential&nbsp;\n          <Typography component=\"span\" sx={text.accent}>\n            to create a board\n          </Typography>\n          &nbsp;to visualize and track all the necessary tasks and milestones.\n          This board serves as a powerful tool to organize the workflow and\n          ensure effective collaboration among team members.\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}"],"names":["NoBoardPage","_jsx","Box","sx","container","children","_jsxs","Typography","component","text","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","align","concat","capitalize","noWrap","gutterBottom","paragraph","_ref","theme","_extends","margin","font","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","_props$align","className","_props$gutterBottom","_props$noWrap","_props$paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx","componentName","globalStatePrefix","arguments","length","undefined","result","forEach"],"sourceRoot":""}