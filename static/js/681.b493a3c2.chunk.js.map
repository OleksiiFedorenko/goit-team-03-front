{"version":3,"file":"static/js/681.b493a3c2.chunk.js","mappings":"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","sources":["components/ThemePanel/Theme.styled.js","components/ThemePanel/ThemePanel.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/UserProfile/User.styled.js","components/UserProfile/UserProfile.jsx","components/TopBar/TopBar.styled.js","components/TopBar/TopBar.jsx","components/Logo/Logo.styled.js","components/Logo/Logo.jsx","components/BoardList/BoardList.styled.js","components/BoardList/BoardList.jsx","components/HelpBanner/HelpBanner.styled.js","components/HelpBanner/HelpBanner.jsx","store/boards/operations.js","components/HelpBanner/NeedHelpForm.styled.jsx","components/LogOut/LogOut.styled.js","components/HelpBanner/NeedHelpForm.jsx","components/LogOut/LogOut.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","components/TasksLayout/TasksLayout.jsx","pages/TasksPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonThemes = styled.button`\n  margin-right: 14px;\n  width: 64px;\n  color: #ffffff80;\n  font-size: 14px;\n  background-color: inherit;\n  border: none;\n`;\n\nexport const ThemesPanelWrapper = styled.div`\n  position: absolute;\n  top: 0px;\n  rigth: 0px;\n  width: 98px;\n  height: 105px;\n  background-color: #151515;\n  color: #ffffff50;\n  border-radius: 10%;\n  border: 1px solid #bedbb0;\n  z-index: 1;\n`;\nexport const ThemeOptions = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  padding: 18px;\n`;\nexport const ThemeOption = styled.div`\n  cursor: pointer;\n  font-size: 14px;\n  color: ${props => (props.active ? `#bedbb0` : '#ffffff50')};\n`;\n","import React, { useState } from 'react';\nimport {\n  ThemesPanelWrapper,\n  ThemeOptions,\n  ThemeOption,\n  ButtonThemes,\n} from './Theme.styled';\n\nexport const ThemePanel = () => {\n  const [isPanelOpen, setPanelOpen] = useState(false);\n  const [activeTheme, setActiveTheme] = useState('Dark');\n\n  const themes = ['Dark', 'White', 'Violet'];\n\n  const handleTogglePanel = () => {\n    setPanelOpen(prev => !prev);\n  };\n\n  const handleThemeSelection = theme => {\n    setActiveTheme(theme);\n    setPanelOpen(false);\n  };\n\n  return (\n    <div>\n      <ButtonThemes onClick={handleTogglePanel}>Theme</ButtonThemes>\n      {isPanelOpen && (\n        <ThemesPanelWrapper>\n          <ThemeOptions>\n            {themes.map(theme => (\n              <ThemeOption\n                key={theme}\n                onClick={() => handleThemeSelection(theme)}\n                active={theme === activeTheme}\n              >\n                {theme}\n              </ThemeOption>\n            ))}\n          </ThemeOptions>\n        </ThemesPanelWrapper>\n      )}\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\n// export const Overlay = styled.div`\n//   position: fixed;\n//   top: 0;\n//   left: 0;\n//   width: 100vw;\n//   height: 100vh;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   background-color: rgba(0, 0, 0, 0.3);\n//   z-index: 1200;\n// `;\n// export const ModalEl = styled.div`\n//   position: relative;\n//   padding: 24px 24px 24px 24px;\n//   border-radius: 8px;\n//   border: 1px solid rgba(190, 219, 176, 0.5);\n//   background: var(--modal-bg-color);\n//   color: var(--first-text-color);\n\n//   @media (min-width: 768px) {\n//     max-width: 400px;\n//   }\n// `;\n\nexport const BtnClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 24px;\n  height: 24px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Box, Modal } from '@mui/material';\nimport { BtnClose } from './Modal.styled';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  borderRadius: '8px',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ModalWindow = ({ isOpenModal, onCloseModal, children }) => {\n  return (\n    <Modal open={isOpenModal} onClose={onCloseModal}>\n      <Box sx={style}>\n        <BtnClose onClick={onCloseModal}>X</BtnClose>\n        {children}\n      </Box>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  isOpenModal: PropTypes.bool.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ModalWindow;\n","import styled from '@emotion/styled';\n\nexport const UserWrapper = styled.div``;\n\nexport const UserOptions = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  align-items: center;\n`;\n\nexport const UserName = styled.p`\n  color: #ffffff;\n  font-size: 14px;\n  margin-right: 8px;\n`;\n\nexport const UserAvatar = styled.img``;\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { UserWrapper, UserOptions, UserName, UserAvatar } from './User.styled';\nimport defaultAvatar from '../../images/user-default-avatar.png';\n\nexport const UserProfile = ({ name, avatar }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <UserWrapper>\n      <UserOptions type=\"button\" onClick={handleOpenModal}>\n        <UserName>{name}</UserName>\n        {avatar ? (\n          <UserAvatar src={avatar} alt={name} />\n        ) : (\n          <UserAvatar\n            src={defaultAvatar}\n            alt=\"Default Avatar\"\n            onClick={handleOpenModal}\n            height={32}\n            width={32}\n          />\n        )}\n      </UserOptions>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal} />\n      )}\n    </UserWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const TopBarWrapper = styled.div`\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  background-color: #161616;\n  color: #ffffff;\n\n  height: 32px;\n  padding: 18px 24px 18px 24px;\n`;\n","import React from 'react';\nimport { ThemePanel } from 'components/ThemePanel';\nimport { UserProfile } from 'components/UserProfile';\nimport { TopBarWrapper } from './TopBar.styled';\n\nexport const TopBar = ({ name, avatar }) => {\n  return (\n    <TopBarWrapper>\n      <ThemePanel />\n      <UserProfile name={name} avatar={avatar} />\n    </TopBarWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  padding: 24px 0px 0px 24px;\n  align-items: center;\n  text-decoration: none;\n  margin-bottom: 60px;\n`;\n\nexport const LogoImg = styled.img`\n  margin-right: 8px;\n`;\n\nexport const LogoText = styled.h2`\n  color: #ffffff;\n  font-size: 16px;\n`;\n","import { LogoWrapper, LogoImg, LogoText } from './Logo.styled';\nimport logoImg from '../../images/logo-img.png';\n\nexport const Logo = () => {\n  return (\n    <LogoWrapper>\n      <LogoImg src={logoImg} alt=\"Site logo\" height={32} width={32} />\n      <LogoText>TaskPro</LogoText>\n    </LogoWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BoardsContainer = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const BoardsTitle = styled.p`\n  font-size: 12px;\n  padding-left: 24px;\n  margin-bottom: 8px;\n  color: #ffffff;\n  opacity: 50%;\n`;\n\nexport const CreateBoardWrapper = styled.div`\n  margin-bottom: 40px;\n  width: 210px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 24px 0px 24px 0px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid #ffffff10;\n  border-right: 0px;\n  border-left: 0px;\n`;\n\nexport const CreateBoardTitle = styled.p`\n  font-size: 14px;\n  margin-right: 96px;\n  line-height: 20px;\n`;\n\nexport const CreateBoardButton = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: #bedbb0;\n  border-radius: 10%;\n  border: 0px none;\n`;\n\nexport const BoardsWrapper = styled.div``;\n\nexport const BoardsList = styled.ul`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const BoardsItem = styled.li`\n  width: 100%;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  width: 100%;\n  color: #ffffff;\n  background-color: ${props => (props.active ? '#1F1F1F' : 'transparent')};\n`;\n\nexport const BoardInfo = styled.div`\n  padding: 20px 24px 20px 24px;\n`;\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport {\n  BoardsContainer,\n  BoardsTitle,\n  CreateBoardWrapper,\n  CreateBoardTitle,\n  CreateBoardButton,\n  BoardsWrapper,\n  BoardsList,\n  BoardsItem,\n  StyledLink,\n  BoardInfo,\n} from './BoardList.styled';\n\nexport const BoardList = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [activeLink, setActiveLink] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <BoardsContainer>\n      <BoardsTitle>My boards</BoardsTitle>\n      <CreateBoardWrapper>\n        <CreateBoardTitle>\n          Create a <br />\n          new board\n        </CreateBoardTitle>\n        <CreateBoardButton\n          type=\"button\"\n          onClick={handleOpenModal}\n        ></CreateBoardButton>\n        {showModal && (\n          <Modal isOpenModal={showModal} onCloseModal={handleCloseModal} />\n        )}\n      </CreateBoardWrapper>\n      <BoardsWrapper>\n        <BoardsList>\n          <BoardsItem>\n            <StyledLink\n              to={'1'}\n              active={activeLink === '1' ? 'true' : undefined}\n              onClick={() => setActiveLink('1')}\n            >\n              <BoardInfo>Project office</BoardInfo>\n            </StyledLink>\n          </BoardsItem>\n          <BoardsItem>\n            <StyledLink\n              to={'2'}\n              active={activeLink === '2' ? 'true' : undefined}\n              onClick={() => setActiveLink('2')}\n            >\n              <BoardInfo>Neon Light Project</BoardInfo>\n            </StyledLink>\n          </BoardsItem>\n        </BoardsList>\n      </BoardsWrapper>\n    </BoardsContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const TaskProHelperWrapper = styled.div`\n  background-color: #1f1f1f;\n  width: 192px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 20px;\n  margin-bottom: 24px;\n`;\n\nexport const TaskProHelperImg = styled.img`\n  margin-bottom: 14px;\n`;\n\nexport const TaskProHelperText = styled.p`\n  margin-bottom: 18px;\n  font-size: 14px;\n  letter-spacing: 2px;\n`;\n\nexport const TaskProHelperTextLink = styled.a`\n  color: #bedbb0;\n`;\n\nexport const TaskProHelperButton = styled.button`\n  padding: 0px;\n  border: none;\n  background-color: inherit;\n  color: #ffffff;\n`;\n\nexport const TaskProHelperButtonText = styled.p`\n  font-size: 12px;\n`;\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport TaskProImg from '../../images/taskPro-img.png';\nimport {\n  TaskProHelperWrapper,\n  TaskProHelperImg,\n  TaskProHelperText,\n  TaskProHelperTextLink,\n  TaskProHelperButton,\n  TaskProHelperButtonText,\n} from './HelpBanner.styled';\n\nexport const HelpBanner = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <TaskProHelperWrapper>\n      <TaskProHelperImg\n        src={TaskProImg}\n        alt=\"TaskProHelperImg\"\n        width={54}\n        height={78}\n      ></TaskProHelperImg>\n      <TaskProHelperText>\n        If you need help with\n        <TaskProHelperTextLink>TaskPro</TaskProHelperTextLink>, check out our\n        support resources or reach out to our customer support team.\n      </TaskProHelperText>\n      <TaskProHelperButton type=\"button\" onClick={handleOpenModal}>\n        <TaskProHelperButtonText>Need help?</TaskProHelperButtonText>\n      </TaskProHelperButton>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal} />\n      )}\n    </TaskProHelperWrapper>\n  );\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport Notiflix from 'notiflix';\n\nexport const needHelp = createAsyncThunk('help', async (user, thunkAPI) => {\n    try {\n      const response = await axios.post('/api/help/email', {\n        replyEmail: user.email,\n        comment: user.text,\n      });\n      Notiflix.Notify.success('Your Email Send, we will contact you!');\n      return response.data;\n    } catch (e) {\n      Notiflix.Notify.failure('Something going wrong!');\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  });","import styled from '@emotion/styled';\nimport { Field as FormicField, Form as FormicForm } from 'formik';\n\nexport const Title = styled.h2`\n    margin: 0 0 24px 0;\n    font-size: 18px;\n    font-weight: 500;\n`;\n\nexport const Form = styled(FormicForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const Field = styled(FormicField)`\n    max-width: 100%;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #ffff;\n    background-color: transparent; \n    outline: none;\n    &:focus {\n      opacity: 1;\n    }\n`;\n\nexport const Textarea = styled(FormicField)`\n    max-width: 100%;\n    height: 120px;\n    margin-bottom: 40px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    border-radius: 8px;\n    border: 1px solid #BEDBB0;\n    opacity: 0.4000000059604645;\n    color: #ffff;\n    background-color: transparent;\n    outline: none;\n    &:focus {\n      opacity: 1;\n    }\n`;","import styled from '@emotion/styled';\n\nexport const LogOutWrapper = styled.div`\n  padding: 0px 24px 24px 24px;\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  font-size: 16px;\n  background-color: inherit;\n  color: #ffffff;\n`;\n","import { useDispatch } from \"react-redux\";\nimport { needHelp } from 'store/boards/operations';\nimport { Formik, ErrorMessage } from 'formik';\nimport { Title, Field, Form, Textarea } from './NeedHelpForm.styled';\nimport * as Yup from 'yup';\nimport Notiflix from \"notiflix\";\n\nconst helpSchema = Yup.object().shape({\n    email: Yup.string()\n      .matches(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        {\n          message: 'Invalid Email',\n          excludeEmptyString: true,\n        }\n      )\n      .required('Please, enter your email'),\n    text: Yup.string()\n      .required('Please, enter your comment'),\n  });\n\nexport const NeedHelpForm = ({onClose}) => {\n    const dispatch = useDispatch();\n\n    function handleSubmit(value) {\n       const { email, text } = value;\n      dispatch(needHelp({ email, text }))\n      Notiflix.Notify.info('Thank you for your request, we will answer you as soon as possible.')\n        onClose()\n      }\n    return (\n        <>\n        <Title>Need Help</Title>\n        <Formik\n          initialValues={{ email: '', text: '' }}\n          validationSchema={helpSchema}\n          onSubmit={(value, { resetForm }) => {\n            handleSubmit(value);\n            resetForm();\n          }}>\n            <Form>\n            <Field type=\"email\" name=\"email\" placeholder=\"Email address\" />\n            <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n              <Textarea type=\"text\" name=\"text\" placeholder=\"Comment\" component=\"textarea\" />\n              <ErrorMessage\n                name=\"text\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 14,\n                }}\n              />\n            </Form>\n        </Formik>\n        </>\n    )\n\n}","import { LogOutWrapper, LogOutButton } from './LogOut.styled';\nimport { logout } from 'store/auth/operations';\n\nexport const LogOut = ({ dispatch }) => {\n  return (\n    <LogOutWrapper>\n      <LogOutButton onClick={() => dispatch(logout())}>Log out</LogOutButton>\n    </LogOutWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SideBarWrapper = styled.div`\n  width: 260px;\n  padding-bottom: 24px;\n\n  background-color: #121212;\n  color: #ffffff;\n`;\n","import React from 'react';\nimport { Logo } from 'components/Logo';\nimport { BoardList } from 'components/BoardList';\nimport { HelpBanner } from 'components/HelpBanner';\nimport { LogOut } from 'components/LogOut';\nimport { SideBarWrapper } from './SideBar.styled';\n\nexport const SideBar = ({ dispatch }) => {\n  return (\n    <SideBarWrapper>\n      <Logo />\n      <BoardList />\n      <HelpBanner />\n      <LogOut dispatch={dispatch} />\n    </SideBarWrapper>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { selectUser } from 'store/auth/selectors';\nimport { TopBar } from 'components/TopBar';\nimport { SideBar } from 'components/SideBar';\n\nexport const TasksLayout = () => {\n  const dispatch = useDispatch();\n  const { name, avatar } = useSelector(selectUser);\n  return (\n    <div style={{ display: 'flex' }}>\n      <SideBar dispatch={dispatch} />\n      <div style={{ display: 'flex', flexDirection: 'column', flexGrow: '1' }}>\n        <TopBar name={name} avatar={avatar} />\n        <main style={{ outline: '1px solid black' }}>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </main>\n      </div>\n    </div>\n  );\n};\n","import { TasksLayout } from 'components/TasksLayout';\n\nconst TasksPage = () => {\n  return <TasksLayout />;\n};\n\nexport default TasksPage;\n"],"names":["ButtonThemes","styled","ThemesPanelWrapper","ThemeOptions","ThemeOption","props","active","ThemePanel","useState","isPanelOpen","setPanelOpen","activeTheme","setActiveTheme","onClick","prev","map","theme","handleThemeSelection","BtnClose","style","position","top","left","transform","width","bgcolor","border","borderRadius","boxShadow","p","isOpenModal","onCloseModal","children","Modal","open","onClose","Box","sx","UserWrapper","UserOptions","UserName","UserAvatar","UserProfile","name","avatar","showModal","setShowModal","handleOpenModal","type","src","alt","height","TopBarWrapper","TopBar","LogoWrapper","LogoImg","LogoText","Logo","BoardsContainer","BoardsTitle","CreateBoardWrapper","CreateBoardTitle","CreateBoardButton","BoardsWrapper","BoardsList","BoardsItem","StyledLink","Link","BoardInfo","BoardList","activeLink","setActiveLink","to","undefined","TaskProHelperWrapper","TaskProHelperImg","TaskProHelperText","TaskProHelperTextLink","TaskProHelperButton","TaskProHelperButtonText","HelpBanner","createAsyncThunk","user","thunkAPI","axios","replyEmail","email","comment","text","response","Notiflix","data","rejectWithValue","message","FormicForm","FormicField","LogOutWrapper","Yup","shape","matches","excludeEmptyString","required","LogOutButton","LogOut","dispatch","logout","SideBarWrapper","SideBar","TasksLayout","useDispatch","useSelector","selectUser","display","flexDirection","flexGrow","outline","Suspense","fallback"],"sourceRoot":""}