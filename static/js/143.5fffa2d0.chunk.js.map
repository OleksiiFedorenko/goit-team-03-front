{"version":3,"file":"static/js/143.5fffa2d0.chunk.js","mappings":"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","sources":["components/FormsUI/TextField/TextField.jsx","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","helpers/priorityColorSwitcher.js","components/FormsUI/RadioButtons/PriorityRadioBtn.jsx","components/Filter/CustomControlLabel.jsx","store/filters/selectors.js","components/Filter/FilterBar.jsx","components/Filter/FilterBtn.jsx","components/Scroll/Scroll.jsx","components/DragAndDrop/StrictModeDroppable.jsx","components/Column/IconBtn.jsx","components/Calendar/Calendar.jsx","helpers/formatDate.js","helpers/getDeadlineInfo.js","helpers/determineRemainDays.js","components/AddCardForm/AddCardForm.jsx","components/Column/AlertIcon.jsx","components/Column/Task.jsx","components/DragAndDrop/ColumnInnerList.jsx","components/DragAndDrop/BoardInnerList.jsx","components/AddColumn/EditColumnModal.jsx","components/Column/ColumnHeader.jsx","components/Column/TaskList.jsx","components/DragAndDrop/DNDColumn.jsx","pages/BoardPage.jsx","helpers/handleDragEnd.js"],"sourcesContent":["import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n//import { useTheme } from '@mui/material';\n\nconst TextFieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n  //const theme = useTheme();\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n\n  return <TextField {...configTextfield} />;\n};\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addColumn } from 'store/boards/operations';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, FormControl, Typography } from '@mui/material';\nimport { container } from 'styles';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal }) => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n\n  const parentBoard = boardId;\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log({ ...values, parentBoard });\n    dispatch(addColumn({ ...values, parentBoard }));\n    resetForm();\n    onCloseModal();\n  };\n  return (\n    <Box sx={container.addColumnContainer}>\n      <Typography variant=\"h2\" mb={3}>\n        Add column\n      </Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <Form onSubmit={handleSubmit}>\n            <FormControl fullWidth>\n              <Textfield name=\"title\" label=\"Title\" sx={{ mb: 3 }} />\n            </FormControl>\n            <SubmitButton>{'Add'}</SubmitButton>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default AddColumnModal;\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Icon } from 'components/Icons';\nimport AddColumnModal from './AddColumnModal';\nimport { Button, Typography, Box } from '@mui/material';\nimport { button, icon } from 'styles';\n\nconst AddColumnButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <>\n      <Button\n        sx={button.addColumnBtn}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleOpenModal}\n      >\n        <Box sx={button.boxIconPlusAnother}>\n          <Icon id={'plus'} sx={icon.plusAddAnotherColumn} />\n        </Box>\n        <Typography variant=\"h3\" component=\"span\">\n          Add another column\n        </Typography>\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <AddColumnModal\n          onCloseModal={handleCloseModal}\n          title=\"New board\"\n          type=\"Submit\"\n        />\n      </Modal>\n    </>\n  );\n};\nexport default AddColumnButton;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'high':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","import React from 'react';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\n\nconst PrIcon = styled('span')(({ btncolor }) => ({\n  borderRadius: '50%',\n  width: 14,\n  height: 14,\n  backgroundColor: btncolor || '#BEDBB0',\n}));\n\nconst PrCheckedIcon = styled(PrIcon)(({ btncolor }) => ({\n  backgroundColor: 'transparent',\n  border: `1px solid ${btncolor || '#BEDBB0'}`,\n  position: 'relative',\n  '&:before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'block',\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: btncolor || '#BEDBB0',\n    content: '\"\"',\n  },\n}));\n\nconst PriorityRadioBtn = props => {\n  const btncolor = priorityColorSwitcher(props.priority);\n\n  return (\n    <Radio\n      disableRipple\n      icon={<PrIcon btncolor={btncolor} />}\n      checkedIcon={<PrCheckedIcon btncolor={btncolor} />}\n      {...props}\n    />\n  );\n};\nexport default PriorityRadioBtn;\n","import { FormControlLabel, useRadioGroup } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\n\nconst StyledFormControlLabel = styled(props => <FormControlLabel {...props} />)(\n  ({ _, checked }) => {\n    const userTheme = useSelector(selectTheme);\n    const colorChecked = userTheme === 'dark' ? '#FFF' : '#161616';\n    return {\n      '.MuiFormControlLabel-label': checked && {\n        // Change color here\n        color: colorChecked,\n      },\n    };\n  }\n);\n\nexport const CustomControlLabel = props => {\n  // MUI UseRadio Group\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n};\n","export const selectPrioFilter = state => state.filters.prio;\n","import { useEffect, useState } from 'react';\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Typography,\n} from '@mui/material';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport { CustomControlLabel } from './CustomControlLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPrioFilter } from 'store/filters/filtersSlice';\nimport { selectPrioFilter } from 'store/filters/selectors';\n\nconst ctrlLabelStyles = {\n  color: 'text.filterRadio',\n  fontFamily: 'Poppins',\n  fontSize: 12,\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  letterSpacing: -0.24,\n};\n\nexport const FilterBar = () => {\n  const currentPrio = useSelector(selectPrioFilter);\n  const [filter, setFilter] = useState(currentPrio);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPrioFilter(filter));\n  }, [dispatch, filter]);\n\n  return (\n    <Container\n      sx={{\n        width: 300,\n        height: 234,\n        p: 0,\n      }}\n    >\n      <Typography\n        sx={{\n          borderBottom: 1,\n          borderColor: 'rgba(255, 255, 255, 0.50)',\n          paddingBottom: 1.75,\n          marginBottom: 1.75,\n        }}\n        variant=\"h2\"\n        component=\"h2\"\n      >\n        Filters\n      </Typography>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: 14,\n        }}\n      >\n        <FormControl>\n          <FormLabel\n            sx={{\n              color: 'text.primary',\n              fontWeight: 500,\n              fontStyle: 'normal',\n              letterSpacing: '-0.28px',\n              '&.Mui-focused': {\n                color: 'text.primary',\n              },\n            }}\n          >\n            Label color\n          </FormLabel>\n          <RadioGroup\n            value={filter}\n            onChange={e => {\n              setFilter(e.target.value);\n            }}\n          >\n            <CustomControlLabel\n              label=\"Without priority\"\n              value=\"without\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"without\" />}\n            />\n            <CustomControlLabel\n              label=\"Low\"\n              value=\"low\"\n              sx={{ ...ctrlLabelStyles }}\n              control={<PriorityRadioBtn priority=\"low\" />}\n            />\n            <CustomControlLabel\n              label=\"Medium\"\n              value=\"medium\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"medium\" />}\n            />\n            <CustomControlLabel\n              label=\"High\"\n              value=\"high\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"high\" />}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          variant=\"text\"\n          sx={{\n            ...ctrlLabelStyles,\n            textDecorationLine: 'underline',\n            textTransform: 'none',\n            height: 18,\n          }}\n          style={\n            filter === 'all'\n              ? { pointerEvents: 'none', textDecoration: 'none' }\n              : null\n          }\n          onClick={() => {\n            setFilter('all');\n          }}\n          type=\"button\"\n        >\n          <Typography>{filter === 'all' ? 'Shown all' : 'Show all'}</Typography>\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { FilterBar } from './FilterBar';\nimport { Box, Button, SvgIcon, Typography } from '@mui/material';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nexport const FilterBtn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          position: 'absolute',\n          top: {\n            zeroUp: '74px',\n            tablet: '88px',\n            desktop: '82px',\n          },\n          right: {\n            zeroUp: '20px',\n            tablet: '32px',\n            desktop: '24px',\n          },\n        }}\n      >\n        <Button\n          sx={{\n            textTransform: 'none',\n            display: 'flex',\n            gap: '8px',\n            alignItems: 'center',\n          }}\n          type=\"button\"\n          onClick={handleOpenModal}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: '8px',\n              transition: 'all 250ms linear',\n              cursor: 'pointer',\n              '&:hover': {\n                transform: 'scale(1.1)',\n              },\n            }}\n          >\n            <SvgIcon\n              sx={{\n                width: '14px',\n                height: '14px',\n                color: 'text.primary',\n              }}\n            >\n              <Icon id={'filter'} sx={icon.filter} />\n            </SvgIcon>\n          </Box>\n          <Typography\n            sx={{\n              color: 'text.primary',\n            }}\n          >\n            Filters\n          </Typography>\n        </Button>\n      </Box>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <FilterBar />\n      </Modal>\n    </>\n  );\n};\n","import React, { useRef, useEffect } from 'react';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport './scroll.css';\n\nconst Scrollbar = ({ children, width=\"100%\", height=\"100%\" }) => {\n    const scrollRef = useRef(null);\n    useEffect(() => {\n      const scrollbarRef = scrollRef.current;\n      if (scrollbarRef) {\n        const scrollElement = scrollbarRef.current;\n        if (scrollElement && typeof scrollElement.destroy === 'function') {\n          return () => {\n            scrollElement.destroy();\n          };\n        }\n      }\n    }, []);\n\n    return (\n      <OverlayScrollbarsComponent\n        ref={scrollRef}\n        style={{width, height}}\n      >\n          {children}\n      </OverlayScrollbarsComponent>\n    );\n};\n  \nexport default Scrollbar;\n\n\n\n\n\n\n\n\n\n\n","import { useEffect, useState } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nexport const StrictModeDroppable = ({ children, ...props }) => {\n  // console.log('StrictModeDroppable PROPS: ', props);\n  // console.log('StrictModeDroppable CHILDREN: ', children);\n  // console.log(typeof children);\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    const animation = requestAnimationFrame(() => setEnabled(true));\n\n    return () => {\n      cancelAnimationFrame(animation);\n      setEnabled(false);\n    };\n  }, []);\n\n  if (!enabled) {\n    return null;\n  }\n  return <Droppable {...props}>{children}</Droppable>;\n};\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nconst IconBtnRoot = styled(ButtonBase)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n\n  '& .MuiTouchRipple-root': {\n    display: 'none',\n  },\n}));\n\nconst IconBtn = ({ onClick, iconId }) => {\n  return (\n    <IconBtnRoot onClick={onClick}>\n      <Icon id={iconId} sx={icon.taskItem} />\n    </IconBtnRoot>\n  );\n};\n\nexport default IconBtn;\n","import PropTypes from 'prop-types';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport { Icon } from 'components/Icons';\n\nexport const Calendar = ({ parentState, initial }) => {\n  dayjs().format();\n\n  const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n  const currentDate = new Date();\n\n  const isPastDate = date => {\n    return date < currentDate;\n  };\n\n  const isToday = date => {\n    return (\n      date.$D === currentDate.getDate() &&\n      date.$M === currentDate.getMonth() &&\n      date.$y === currentDate.getFullYear()\n    );\n  };\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker\n          views={['month', 'day']}\n          value={dateDeadline}\n          desktopModeMediaQuery=\"\"\n          showDaysOutsideCurrentMonth\n          fixedWeekNumber={5}\n          onChange={newValue => {\n            setDateDeadline(newValue);\n            parentState(newValue);\n          }}\n          // renderInput={params => <TextField {...params} />}\n          shouldDisableDate={date => isPastDate(date) && !isToday(date)}\n          slots={{\n            openPickerIcon: () => <Icon id=\"dropdown\" />,\n            textField: TextField,\n          }}\n          dayOfWeekFormatter={day => day.slice(0, 2)}\n          slotProps={{\n            desktopPaper: {\n              sx: {\n                borderRadius: '8px',\n                color: 'text.primary',\n                backgroundColor: 'background.calendar',\n                '& .MuiPickersCalendarHeader-labelContainer': {\n                  position: 'absolute',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                  whiteSpace: 'nowrap',\n                },\n                '& .MuiPickersCalendarHeader-label': {\n                  fontSize: '16px',\n                  fontWeight: '500',\n                  letterSpacing: '0.32px',\n                },\n                '& .MuiSvgIcon-root': {\n                  fill: 'text.primary',\n                },\n\n                '& .MuiTypography-root': {\n                  color: 'text.additional',\n                  height: '24px',\n                  marginTop: '14px',\n                  fontSize: '14px',\n                },\n                '& .MuiDayCalendar-weekContainer': {\n                  justifyContent: 'space-between',\n                },\n\n                '& .MuiButtonBase-root': {\n                  color: 'text.primary',\n                  margin: 0,\n                  padding: 0,\n                  fontSize: '14px',\n                  fontStyle: 'normal',\n                  fontWeight: '400',\n                  lineHeight: '18px',\n                },\n                '& .MuiPickersArrowSwitcher-root': {\n                  width: '100%',\n                  justifyContent: 'space-between',\n                },\n                '& .MuiPickersCalendarHeader-switchViewButton': {\n                  display: 'none',\n                },\n                '& .MuiPickersCalendarHeader-root': {\n                  padding: '0',\n                  alignItems: 'baseline',\n                  margin: '0',\n                  borderBottomWidth: '2px',\n                  borderBottomStyle: 'solid',\n                  borderColor: 'divider.card',\n                },\n\n                '& .MuiPickersArrowSwitcher-button': {\n                  height: '21px',\n                },\n\n                '& .MuiDateCalendar-root': {\n                  width: '233px',\n                  height: '254px',\n                  padding: '18px',\n                  boxSizing: 'border-box',\n                  background: 'background.side',\n                },\n\n                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                  height: '24px',\n                  width: '24px',\n                  minWidth: '24px',\n                  maxWidth: '24px',\n                },\n              },\n            },\n            day: {\n              sx: {\n                height: '24px',\n                width: '24px',\n                minWidth: '24px',\n                maxWidth: '24px',\n                fontSize: '14px',\n\n                '&.MuiPickersDay-root.Mui-selected': {\n                  backgroundColor: 'primary.main',\n                  color: 'text.hover',\n                },\n                '&.MuiPickersDay-root:hover': {\n                  backgroundColor: 'primary.main',\n                  color: 'text.additional',\n                },\n                '&.Mui-selected:hover': {\n                  backgroundColor: 'primary.main',\n                  color: 'text.hover',\n                },\n                '&.MuiPickersDay-today': {\n                  borderWidth: 1,\n                  borderColor: 'primary.main',\n                  color: 'text.primary',\n                },\n              },\n            },\n            textField: {\n              variant: 'outlined',\n              sx: {\n                '& input': { display: 'none' },\n                '& fieldset': { border: 'none' },\n              },\n            },\n          }}\n        />\n      </LocalizationProvider>\n    </>\n  );\n};\n\nCalendar.propTypes = {\n  parentState: PropTypes.func.isRequired,\n  initial: PropTypes.string,\n};\n","import moment from 'moment';\n\nexport const formatDate = param => {\n  const formatDeadline = moment(param).format('DD-MM-YYYY');\n  return formatDeadline;\n};\n","import moment from 'moment';\nimport { determineRemainDays } from './determineRemainDays';\n\nexport const getDeadlineInfo = date => {\n  let deadlineInfo = 'Today, ' + moment().format('MMMM D');\n\n  if (date) {\n    deadlineInfo =\n      determineRemainDays(date.$d) + ', ' + moment(date.$d).format('MMMM D');\n    return deadlineInfo;\n  } else {\n    deadlineInfo = 'Today, ' + moment().format('MMMM D');\n  }\n\n  return deadlineInfo;\n};\n","import moment from 'moment';\n\nexport const determineRemainDays = date => {\n  const d = moment(date);\n  const today = moment().endOf('day');\n  const tomorrow = moment().add(1, 'day').endOf('day');\n  if (d < today) return 'Today';\n  if (d < tomorrow) return 'Tomorrow';\n  return 'in ' + d.fromNow(true);\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Container } from '@mui/material';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport { Calendar } from 'components/Calendar';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport {\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  Box,\n} from '@mui/material';\n\nimport { formatDate } from 'helpers/formatDate';\nimport { getDeadlineInfo } from 'helpers/getDeadlineInfo';\nimport { container } from 'styles';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  deadline: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  deadline: Yup.mixed(),\n  // deadline: Yup.date().required(), - ця перевірка блокувала відправку форми\n});\n\nconst AddCardForm = ({\n  parentColumn,\n  onCloseModal,\n  formTitle,\n  buttonTitle,\n  taskOperation,\n  taskId,\n  initData,\n}) => {\n  const dispatch = useDispatch();\n  const [deadline, setDeadline] = useState(Date.now());\n  const [priority, setPriority] = useState('without');\n\n  const setDateValue = value => {\n    setDeadline(value);\n  };\n\n  const handleChangePriority = event => {\n    setPriority(event.target.value);\n  };\n\n  const handleSubmit = values => {\n    // changing the deadline to the needed format\n    // const formattedDate = values.deadline.split('-').reverse().join('-');\n    dispatch(\n      taskOperation({\n        ...values,\n        parentColumn,\n        priority,\n        taskId,\n        deadline: formatDate(deadline.$d),\n        // deadline: formattedDate,\n      })\n    );\n    //setSubmitting(false);\n    // resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Container sx={container.cardForm}>\n      <Formik\n        initialValues={initData ? initData : initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Typography variant=\"h2\" component=\"h2\" mb={3}>\n            {formTitle}\n          </Typography>\n          <Textfield\n            name=\"title\"\n            label=\"Title\"\n            sx={{\n              marginBottom: '14px',\n            }}\n          />\n          <Textfield\n            name=\"description\"\n            label=\"Description\"\n            multiline={true}\n            rows={6}\n            sx={{\n              marginBottom: '24px',\n            }}\n          />\n\n          <FormControl>\n            <FormLabel\n              id=\"priority-radios\"\n              sx={{\n                fontSize: 12,\n                lineHeight: 1.5,\n                letterSpacing: '-0.02em',\n                color: 'GrayText',\n              }}\n            >\n              Label color\n            </FormLabel>\n            <RadioGroup\n              sx={{\n                marginBottom: '14px',\n              }}\n              row\n              defaultValue=\"low\"\n              aria-labelledby=\"priority-radios\"\n              name=\"priority\"\n              value={priority}\n              onChange={handleChangePriority}\n            >\n              <FormControlLabel\n                value=\"low\"\n                control={<PriorityRadioBtn priority=\"low\" />}\n              />\n              <FormControlLabel\n                value=\"medium\"\n                control={\n                  <PriorityRadioBtn priority=\"medium\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"high\"\n                control={\n                  <PriorityRadioBtn priority=\"high\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"without\"\n                control={\n                  <PriorityRadioBtn priority=\"without\" sx={{ ml: '-14px' }} />\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          <Box mb={5}>\n            <Typography variant=\"body2\" component=\"h4\" mb={0.5}>\n              Deadline\n            </Typography>\n\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <Box>{getDeadlineInfo(deadline)}</Box>\n              <Calendar parentState={setDateValue} />\n            </Box>\n          </Box>\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            sx={form.button}\n            type=\"submit\"\n          >\n            <Box sx={button.boxIconPlus}>\n              <Icon id={'plus'} sx={icon.plusAdd} />\n            </Box>\n            Add\n          </Button> */}\n          <SubmitButton>{buttonTitle}</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default AddCardForm;\n","import React from 'react';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nconst AlertIcon = () => {\n  const iconStyles = {\n    svgAlert: {\n      ...icon.alert,\n      filter: 'drop-shadow(0px 2px 4px currentColor)',\n    },\n  };\n  return <Icon id=\"alert\" sx={iconStyles.svgAlert} />;\n};\nexport default AlertIcon;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateTask, deleteTask } from 'store/boards/operations';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport IconBtn from './IconBtn';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\nimport { Card, Typography, Stack, Box } from '@mui/material';\nimport { card } from 'styles';\nimport DeleteConfirmModal from 'components/DeleteConfirmModal/DeleteConfirmModal';\n\nimport { Draggable } from 'react-beautiful-dnd';\nimport Alerticon from './AlertIcon';\nimport { formatDate } from 'helpers/formatDate';\n\nconst Task = ({ name, description, priority, deadline, taskId, index }) => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [ShowDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n    setShowDeleteConfirmModal(false);\n  };\n\n  const handleDeleteTask = () => {\n    // if (window.confirm(`Do you really want to delete task ${name}?`)) {\n    dispatch(deleteTask(taskId));\n    setShowDeleteConfirmModal(false);\n    // }\n  };\n\n  const openDeleteConfirmModal = () => {\n    setShowDeleteConfirmModal(true);\n  };\n\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyles = {\n    textTransform: 'capitalize',\n    '&::before': {\n      ...card.priorityCircle,\n      bgcolor: priorityColor,\n    },\n  };\n  const handleIconClick = () => {};\n  const isDeadline = () => {\n    return deadline === formatDate(new Date());\n  };\n\n  return (\n    <Draggable draggableId={taskId} index={index}>\n      {(provided, snapshot) => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isdragging={`${snapshot.isDragging}`} // lowercase & 'true' or 'false' string (bool triggers a warning)\n        >\n          <Card\n            sx={{\n              ...card.task,\n              position: 'relative',\n              '&::before': {\n                content: '\"\"',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '4px',\n                height: '100%',\n                background: priorityColor,\n              },\n            }}\n          >\n            <Box>\n              <Box sx={card.taskMainBox}>\n                <Typography variant=\"h5\" component=\"h3\" mb={1}>\n                  {name}\n                </Typography>\n                <Typography variant=\"body2\" sx={card.taskDescription}>\n                  {description}\n                </Typography>\n              </Box>\n\n              {/* components below devider       */}\n\n              <Box>\n                <Stack direction=\"row\">\n                  {/* priority container      */}\n                  <Stack\n                    justifyContent=\"flex-end\"\n                    alignItems=\"flex-start\"\n                    spacing={0}\n                    sx={{ marginRight: '14px' }}\n                  >\n                    <Box>\n                      <Typography variant=\"caption\" color=\"text.sideSecond\">\n                        Priority\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"h6\" sx={priorityStyles}>\n                        {priority}\n                      </Typography>\n                    </Box>\n                  </Stack>\n\n                  {/* deadline container     */}\n                  <Stack\n                    flexGrow={1}\n                    justifyContent=\"flex-end\"\n                    alignItems=\"flex-start\"\n                    spacing={0}\n                  >\n                    <Box>\n                      <Typography variant=\"caption\" color=\"text.sideSecond\">\n                        Deadline\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"h6\" color=\"text.primary\">\n                        {deadline}\n                      </Typography>\n                    </Box>\n                  </Stack>\n\n                  {/* icons container     */}\n\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"flex-end\"\n                    spacing={1}\n                  >\n                    {isDeadline() && <Alerticon />}\n                    <Box>\n                      <IconBtn onClick={handleIconClick} iconId=\"move\" />\n                    </Box>\n\n                    <Box>\n                      <IconBtn onClick={openModalHandler} iconId=\"pencil\" />\n                    </Box>\n\n                    <Box>\n                      <IconBtn\n                        onClick={openDeleteConfirmModal}\n                        iconId=\"trash\"\n                      />\n                    </Box>\n                  </Stack>\n                </Stack>\n              </Box>\n            </Box>\n            <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n              <AddCardForm\n                onCloseModal={closeModalHandler}\n                taskId={taskId}\n                formTitle={'Edit card'}\n                buttonTitle={'Edit'}\n                taskOperation={updateTask}\n                initData={{ title: name, description, priority, deadline }}\n              />\n            </Modal>\n          </Card>\n\n          <DeleteConfirmModal\n            isOpenModal={ShowDeleteConfirmModal}\n            onCloseModal={closeModalHandler}\n            onConfirm={handleDeleteTask}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n};\nexport default Task;\n","import Task from 'components/Column/Task';\nimport { Component } from 'react';\n\nclass ColumnInnerList extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks === this.props.tasks) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    return this.props.tasks.map((task, index) => {\n      // if (!task) return null;\n      const { _id, title, description, priority, deadline } = task;\n      return (\n        <Task\n          key={_id}\n          taskId={_id}\n          name={title}\n          description={description}\n          priority={priority}\n          deadline={deadline}\n          index={index}\n        />\n      );\n    });\n  }\n}\n\nexport { ColumnInnerList };\n","import React from 'react';\nimport { DNDColumn } from '.';\n\nclass BoardInnerList extends React.PureComponent {\n  render() {\n    const { column, tasksArr, index } = this.props;\n    // console.log('BoardInnerList PROPS: ', this.props);\n    // const tasks = column.taskIds.map(taskId => taskMap[taskId]);\n    const tasks = column.taskOrder.map(taskId => {\n      const task = tasksArr.find(({ _id }) => taskId === _id);\n      return task;\n    });\n    return <DNDColumn column={column} tasks={tasks} index={index} />;\n  }\n}\n\nexport { BoardInnerList };\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { updateColumn } from 'store/boards/operations';\nimport { Box, FormControl, Typography, Button, TextField } from '@mui/material';\nimport { Icon } from 'components/Icons';\nimport { container, button, form, icon } from 'styles';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, onCloseModal }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(updateColumn({ ...values, columnId }));\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Box sx={container.addColumnContainer}>\n      <Typography variant=\"h2\" mb={3}>\n        Edit column\n      </Typography>\n\n      <Formik\n        initialValues={{ title }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <Form onSubmit={handleSubmit}>\n            <FormControl fullWidth>\n              <TextField\n                label=\"Title\"\n                variant=\"outlined\"\n                type=\"text\"\n                id=\"text\"\n                name=\"title\"\n                sx={{ mb: 3 }}\n                value={values.title}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                name=\"Text\"\n                component=\"div\"\n                style={{ color: 'red', fontSize: 12 }}\n              />\n            </FormControl>\n\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              sx={form.button}\n              type=\"submit\"\n            >\n              <Box sx={button.boxIconPlus}>\n                <Icon id={'plus'} sx={icon.plusAdd} />\n              </Box>\n              Add\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default EditColumnModal;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from 'store/boards/operations';\n\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from 'components/AddColumn/EditColumnModal';\nimport IconBtn from './IconBtn';\nimport { Card, Stack, Typography } from '@mui/material';\nimport { card } from 'styles';\nimport DeleteConfirmModal from 'components/DeleteConfirmModal/DeleteConfirmModal';\n\nconst ColumnHeader = ({ title, columnId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const [ShowDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setShowDeleteConfirmModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    // if (window.confirm(`Do you really want to delete column ${title}?`)) {\n    dispatch(deleteColumn(columnId));\n    setShowDeleteConfirmModal(false);\n    // }\n  };\n\n  const openDeleteConfirmModal = () => {\n    setShowDeleteConfirmModal(true);\n  };\n\n  return (\n    <>\n      <Card sx={card.header}>\n        <Stack sx={card.headerContainer}>\n          <Typography component=\"h2\" variant=\"h3\">\n            {title}\n          </Typography>\n          <Stack direction=\"row\" spacing={1}>\n            <IconBtn onClick={handleOpenModal} iconId=\"pencil\" />\n            <IconBtn onClick={openDeleteConfirmModal} iconId=\"trash\" />\n          </Stack>\n        </Stack>\n\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <EditColumnModal\n            onCloseModal={handleCloseModal}\n            columnId={columnId}\n            title={title}\n            type=\"Submit\"\n          />\n        </Modal>\n      </Card>\n\n      <DeleteConfirmModal\n        isOpenModal={ShowDeleteConfirmModal}\n        onCloseModal={handleCloseModal}\n        onConfirm={handleDeleteColumn}\n      />\n    </>\n  );\n};\nexport default ColumnHeader;\n","import { Stack, Box } from '@mui/material';\n// import Task from './Task';\nimport { useSelector } from 'react-redux';\nimport { selectPrioFilter } from 'store/filters/selectors';\nimport { ColumnInnerList } from 'components/DragAndDrop';\nimport { container } from 'styles';\n\nconst TaskList = ({ cards, placeholder }) => {\n  const prio = useSelector(selectPrioFilter);\n\n  // console.log('cards: ', cards);\n  const filteredCards =\n    prio === 'all'\n      ? cards\n      : cards.filter(card => {\n          return card?.priority === prio;\n        });\n\n  return (\n    <Box sx={container.taskListScroll}>\n      <Stack sx={container.taskList}>\n        <ColumnInnerList placeholder={placeholder} tasks={filteredCards} />\n        {placeholder}\n      </Stack>\n    </Box>\n  );\n};\nexport default TaskList;\n","import { Box, Button, Stack, SvgIcon } from '@mui/material';\nimport ColumnHeader from 'components/Column/ColumnHeader';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { container, button, card } from 'styles';\nimport { StrictModeDroppable } from './StrictModeDroppable';\nimport TaskList from 'components/Column/TaskList';\nimport sprite from 'components/Icons/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm/AddCardForm';\nimport { useState } from 'react';\nimport { addTask } from 'store/boards/operations';\n\nexport const DNDColumn = ({ column, tasks, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Draggable draggableId={column._id} index={index}>\n      {provided => (\n        <div {...provided.draggableProps} ref={provided.innerRef}>\n          <Stack sx={card.column}>\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader title={column.title} columnId={column._id} />\n            </div>\n            <StrictModeDroppable droppableId={column._id} type=\"task\">\n              {(provided, snapshot) => (\n                <>\n                  {/* Adding Box for scrolls and for styling */}\n                  <Box\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    isdraggingover={`${snapshot.isDraggingOver}`}\n                    sx={container.dndContainerColumn}\n                  >\n                    {/* <div\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                      isdraggingover={`${snapshot.isDraggingOver}`}\n                      style={{ minHeight: 20, maxHeight: 470 }}\n                    > */}\n                    <TaskList\n                      cards={tasks}\n                      placeholder={provided.placeholder}\n                    />\n                    {/* </div> */}\n                  </Box>\n                  <Button\n                    variant=\"contained\"\n                    sx={button.addCard}\n                    // startIcon={<AddBoxIcon />}\n                    onClick={openModalHandler}\n                  >\n                    <Box sx={button.addCardIconBox}>\n                      <SvgIcon sx={button.addCardIcon}>\n                        <svg stroke=\"currentColor\">\n                          <use href={sprite + '#icon-plus'} />\n                        </svg>\n                      </SvgIcon>\n                    </Box>\n                    Add another card\n                  </Button>\n                  <Modal\n                    isOpenModal={showModal}\n                    onCloseModal={closeModalHandler}\n                  >\n                    <AddCardForm\n                      onCloseModal={closeModalHandler}\n                      parentColumn={column._id}\n                      formTitle={'Add card'}\n                      buttonTitle={'Add'}\n                      taskOperation={addTask}\n                    />\n                  </Modal>\n                </>\n              )}\n            </StrictModeDroppable>\n          </Stack>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n","import { useSelector } from 'react-redux';\n// import Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport {\n  selectBoard,\n  selectColumns,\n  selectError,\n} from 'store/boards/selectors';\n\nimport { Box, Typography } from '@mui/material';\nimport { container, text } from 'styles';\nimport { FilterBtn } from 'components/Filter';\nimport Scrollbar from 'components/Scroll/Scroll';\n\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BoardInnerList, StrictModeDroppable } from 'components/DragAndDrop';\nimport { useDispatch } from 'react-redux';\nimport { handleDragEnd } from 'helpers';\nimport { selectPrioFilter } from 'store/filters/selectors';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst BoardPage = () => {\n  const board = useSelector(selectBoard);\n  const columns = useSelector(selectColumns);\n  const error = useSelector(selectError);\n\n  if (error) {\n    toast.error(error, {\n      position: 'bottom-right',\n    });\n  }\n\n  // console.log('BOARD: ', board);\n  // console.log('COLUMNS: ', columns);\n\n  const filter = useSelector(selectPrioFilter);\n\n  const dispatch = useDispatch();\n\n  const onDragEnd = result => {\n    if (filter !== 'all') {\n      toast.error(\n        'Please, skip priority filters to drag elements to another position.'\n      );\n      return;\n    }\n\n    handleDragEnd({ result, board, columns, dispatch });\n  };\n\n  // if (board._id === '' || columns[0]._id === '') {\n  //   return <div>Loading...</div>;\n  // } // ----- triggers bug on empty board\n\n  return (\n    <>\n      <Scrollbar>\n        <Box sx={container.board}>\n          <Box sx={container.boardInner}>\n            <Box sx={container.boardTopBar}>\n              <Typography component=\"h2\" variant=\"h3\" sx={text.boardTitle}>\n                {board.title}\n              </Typography>\n\n              {/* <FilterBtn /> */}\n            </Box>\n\n            <Box sx={container.columns}>\n              <Box>\n                {/* ---------------------------------------------------------------- */}\n                <DragDropContext\n                  onDragStart={() => {}}\n                  onDragUpdate={() => {}}\n                  onDragEnd={onDragEnd}\n                >\n                  <StrictModeDroppable\n                    droppableId={'all-columns'}\n                    direction=\"horizontal\"\n                    type=\"column\"\n                  >\n                    {provided => (\n                      <Box\n                        // style={{ outline: '1px dashed teal', display: 'flex' }}\n                        sx={container.columnsInner}\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                      >\n                        {board.columnOrder.map((columnId, index) => {\n                          const column = columns.find(\n                            item => item._id === columnId\n                          );\n\n                          // console.log('COLUMN: ', column);\n\n                          // todo ///////////////////\n                          // if (!column) return null;\n                          return (\n                            <BoardInnerList\n                              key={column._id}\n                              column={column}\n                              tasksArr={column.tasks}\n                              index={index}\n                            />\n                          );\n                        })}\n\n                        {provided.placeholder}\n                      </Box>\n                    )}\n                  </StrictModeDroppable>\n                </DragDropContext>\n                {/* ---------------------------------------------------------------- */}\n              </Box>\n              <AddColumnButton />\n            </Box>\n            <ToastContainer autoClose={3000} />\n          </Box>\n        </Box>\n      </Scrollbar>\n      <FilterBtn />\n    </>\n  );\n};\n\nexport default BoardPage;\n","import {\n  updateColumnOrder,\n  updateComplexDND,\n  updateSingleTaskOrder,\n} from 'store/boards/boardSlice';\nimport {\n  updateColumnOrderAsync,\n  updateComplexDNDAsync,\n  updateSingleTaskOrderAsync,\n} from 'store/boards/operations';\n\nexport const handleDragEnd = ({ result, board, columns, dispatch }) => {\n  const { destination, source, draggableId, type } = result;\n\n  if (!destination) return;\n\n  if (\n    destination.droppableId === source.droppableId &&\n    destination.index === source.index\n  )\n    return;\n\n  // Dragging columns:\n  if (type === 'column') {\n    const newColumnOrder = Array.from(board.columnOrder);\n    newColumnOrder.splice(source.index, 1);\n    newColumnOrder.splice(destination.index, 0, draggableId);\n\n    // TODO: ---------- on Redux :::\n    dispatch(updateColumnOrder({ boardId: board._id, newColumnOrder }));\n\n    dispatch(updateColumnOrderAsync({ boardId: board._id, newColumnOrder }));\n    //!   To imitate server response error:\n    // dispatch(updateColumnOrderAsync({ boardId: '123456', newColumnOrder }));\n    return;\n  }\n\n  // Dragging tasks:\n\n  // Start column:\n  const start = columns.find(column => column._id === source.droppableId);\n\n  // Finish column:\n  const finish = columns.find(column => column._id === destination.droppableId);\n\n  if (start === finish) {\n    const newTaskOrder = Array.from(start.taskOrder);\n    newTaskOrder.splice(source.index, 1);\n    newTaskOrder.splice(destination.index, 0, draggableId);\n\n    // TODO: ---------- on Redux :::\n    dispatch(updateSingleTaskOrder({ columnId: start._id, newTaskOrder }));\n\n    dispatch(\n      updateSingleTaskOrderAsync({\n        taskId: draggableId,\n        columnId: start._id,\n        newTaskOrder,\n      })\n    );\n    //!   To imitate server response error:\n    // dispatch(\n    //   updateSingleTaskOrderAsync({\n    //     taskId: '12345657',\n    //     columnId: start._id,\n    //     newTaskOrder,\n    //   })\n    // );\n    return;\n  }\n\n  // Moving from one column to another:\n\n  const draggableTask = start.tasks.find(task => task._id === draggableId);\n  const newDraggableTask = {\n    ...draggableTask,\n    parentColumn: finish._id,\n  };\n\n  const startTaskOrder = Array.from(start.taskOrder);\n  startTaskOrder.splice(source.index, 1);\n\n  const startTasksArr = Array.from(start.tasks);\n  const draggableTaskIndex = startTasksArr.findIndex(\n    item => item._id === draggableId\n  );\n  startTasksArr.splice(draggableTaskIndex, 1);\n\n  const newStart = {\n    ...start,\n    taskOrder: startTaskOrder,\n    tasks: startTasksArr,\n  };\n  // console.log('NEW START COLUMN: ', newStart);\n\n  const finishTaskOrder = Array.from(finish.taskOrder);\n  finishTaskOrder.splice(destination.index, 0, draggableId);\n\n  const finishTasksArr = Array.from(finish.tasks);\n  finishTasksArr.push(newDraggableTask);\n\n  const newFinish = {\n    ...finish,\n    taskOrder: finishTaskOrder,\n    tasks: finishTasksArr,\n  };\n  // console.log('NEW FINISH COLUMN: ', newFinish);\n\n  // TODO: ---------- on Redux :::\n  dispatch(\n    updateComplexDND({\n      // updatedTask: newDraggableTask,\n      updatedStartColumn: newStart,\n      updatedFinishColumn: newFinish,\n    })\n  );\n\n  dispatch(\n    updateComplexDNDAsync({\n      taskId: draggableId,\n      finishId: finish._id,\n      startTaskOrder,\n      finishTaskOrder,\n    })\n  );\n  //!   To imitate server response error:\n  //   dispatch(\n  //     updateComplexDNDAsync({\n  //       taskId: '12345678',\n  //       finishId: finish._id,\n  //       startTaskOrder,\n  //       finishTaskOrder,\n  //     })\n  //   );\n  return;\n};\n"],"names":["_ref","name","otherProps","_objectWithoutProperties","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","configTextfield","_objectSpread","fullWidth","variant","touched","error","helperText","_jsx","TextField","validationSchema","Yup","shape","title","required","initialValues","onCloseModal","boardId","useParams","dispatch","useDispatch","parentBoard","_jsxs","Box","sx","container","children","Typography","mb","Formik","onSubmit","values","_ref2","resetForm","console","log","addColumn","_ref3","handleChange","handleSubmit","Form","FormControl","Textfield","label","SubmitButton","_useState","useState","_useState2","showModal","setShowModal","handleCloseModal","_Fragment","Button","button","color","onClick","Icon","id","icon","component","Modal","isOpenModal","AddColumnModal","type","priority","priorityColor","PrIcon","styled","borderRadius","width","height","backgroundColor","btncolor","PrCheckedIcon","border","concat","position","top","left","transform","display","content","props","priorityColorSwitcher","Radio","disableRipple","checkedIcon","StyledFormControlLabel","FormControlLabel","_","checked","userTheme","useSelector","selectTheme","CustomControlLabel","radioGroup","useRadioGroup","value","selectPrioFilter","state","filters","prio","ctrlLabelStyles","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","letterSpacing","FilterBar","currentPrio","filter","setFilter","useEffect","setPrioFilter","Container","p","borderBottom","borderColor","paddingBottom","marginBottom","style","justifyContent","marginTop","FormLabel","RadioGroup","onChange","e","target","control","PriorityRadioBtn","textDecorationLine","textTransform","pointerEvents","textDecoration","FilterBtn","zeroUp","tablet","desktop","right","gap","alignItems","transition","cursor","SvgIcon","_ref$width","_ref$height","scrollRef","useRef","scrollbarRef","current","scrollElement","destroy","OverlayScrollbarsComponent","ref","StrictModeDroppable","enabled","setEnabled","animation","requestAnimationFrame","cancelAnimationFrame","Droppable","IconBtnRoot","ButtonBase","theme","padding","margin","iconId","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","currentDate","Date","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","desktopModeMediaQuery","showDaysOutsideCurrentMonth","fixedWeekNumber","newValue","shouldDisableDate","date","isPastDate","$D","getDate","$M","getMonth","$y","getFullYear","isToday","slots","openPickerIcon","textField","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","whiteSpace","fill","borderBottomWidth","borderBottomStyle","boxSizing","background","minWidth","maxWidth","borderWidth","formatDate","param","moment","getDeadlineInfo","d","today","endOf","tomorrow","add","fromNow","determineRemainDays","$d","description","deadline","parentColumn","formTitle","buttonTitle","taskOperation","taskId","initData","now","setDeadline","_useState3","_useState4","setPriority","multiline","rows","row","defaultValue","event","ml","iconStyles","svgAlert","index","ShowDeleteConfirmModal","setShowDeleteConfirmModal","openModalHandler","closeModalHandler","handleDeleteTask","deleteTask","openDeleteConfirmModal","priorityStyles","card","bgcolor","handleIconClick","Draggable","draggableId","provided","snapshot","draggableProps","dragHandleProps","innerRef","isdragging","isDragging","Card","Stack","direction","spacing","marginRight","flexGrow","Alerticon","IconBtn","AddCardForm","updateTask","DeleteConfirmModal","onConfirm","ColumnInnerList","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","nextProps","tasks","this","map","task","_id","Task","Component","BoardInnerList","_React$PureComponent","_this$props","column","tasksArr","taskOrder","find","DNDColumn","React","columnId","updateColumn","ErrorMessage","form","EditColumnModal","deleteColumn","cards","placeholder","filteredCards","ColumnHeader","droppableId","droppableProps","isdraggingover","isDraggingOver","TaskList","stroke","href","sprite","addTask","board","selectBoard","columns","selectColumns","selectError","toast","Scrollbar","text","DragDropContext","onDragStart","onDragUpdate","onDragEnd","result","destination","source","newColumnOrder","Array","from","columnOrder","splice","updateColumnOrder","updateColumnOrderAsync","start","finish","newTaskOrder","updateSingleTaskOrder","updateSingleTaskOrderAsync","draggableTask","newDraggableTask","startTaskOrder","startTasksArr","draggableTaskIndex","findIndex","item","newStart","finishTaskOrder","finishTasksArr","push","newFinish","updateComplexDND","updatedStartColumn","updatedFinishColumn","updateComplexDNDAsync","finishId","handleDragEnd","AddColumnButton","ToastContainer","autoClose"],"sourceRoot":""}