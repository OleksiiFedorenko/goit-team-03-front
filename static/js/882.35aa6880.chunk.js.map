{"version":3,"file":"static/js/882.35aa6880.chunk.js","mappings":"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","sources":["components/Icons/sprite.svg","components/DeleteConfirmModal/DeleteConfirmModal.jsx","components/FormsUI/SubmitButton/PlusIcon.jsx","components/FormsUI/SubmitButton/SubmitButton.jsx","components/Icons/Icon.jsx","components/Modal/Modal.jsx","components/Logo/Logo.jsx","helpers/getBgPreviews.js","components/BoardForm/BoardForm.jsx","store/nav/selectors.js","components/BoardsNavList/BoardNavList.jsx","components/BoardNav/BoardNav.jsx","components/HelpBanner/NeedHelpForm.jsx","components/HelpBanner/HelpBanner.jsx","components/LogOut/LogOut.jsx","components/SideBar/SideBar.jsx","components/BurgerMenu/BurgerMenu.jsx","components/ThemePanel/ThemePanel.jsx","components/EditProfile/EditProfile.jsx","components/UserProfile/UserProfile.jsx","components/TopBar/TopBar.jsx","components/TasksLayout/TasksLayout.jsx","pages/TasksPage.jsx","store/boards/selectors.js"],"sourcesContent":["var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-puzzle-piece\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 4.8 4.8C24-.933 32.933 8 24.533 11.2l4.8 4.8-4.8 4.8c-3.2-8.4-12.133.533-3.733 3.733l-4.8 4.8-4.8-4.8C8 32.933-.933 24 7.467 20.8l-4.8-4.8 4.8-4.8c3.2 8.4 12.133-.533 3.733-3.733l4.8-4.8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-project\",\n    viewBox: \"0 0 28 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeWidth: 1.92,\n    d: \"M7.005 5.024a2.493 2.493 0 0 1 1.859-1.859 5.31 5.31 0 0 1 2.431 0 2.493 2.493 0 0 1 1.859 1.859 5.31 5.31 0 0 1 0 2.431 2.493 2.493 0 0 1-1.859 1.859 5.31 5.31 0 0 1-2.431 0 2.493 2.493 0 0 1-1.859-1.859 5.31 5.31 0 0 1 0-2.431zM7.005 15.584a2.495 2.495 0 0 1 1.859-1.859 5.31 5.31 0 0 1 2.431 0 2.493 2.493 0 0 1 1.859 1.859 5.31 5.31 0 0 1 0 2.431 2.495 2.495 0 0 1-1.859 1.859 5.31 5.31 0 0 1-2.431 0 2.493 2.493 0 0 1-1.859-1.859 5.31 5.31 0 0 1 0-2.431zM17.565 5.024a2.493 2.493 0 0 1 1.859-1.859 5.31 5.31 0 0 1 2.431 0 2.495 2.495 0 0 1 1.859 1.859 5.31 5.31 0 0 1 0 2.431 2.493 2.493 0 0 1-1.859 1.859 5.31 5.31 0 0 1-2.431 0 2.495 2.495 0 0 1-1.859-1.859 5.31 5.31 0 0 1 0-2.431zM17.565 15.584a2.495 2.495 0 0 1 1.859-1.859 5.31 5.31 0 0 1 2.431 0 2.495 2.495 0 0 1 1.859 1.859 5.31 5.31 0 0 1 0 2.431 2.495 2.495 0 0 1-1.859 1.859 5.31 5.31 0 0 1-2.431 0 2.495 2.495 0 0 1-1.859-1.859 5.31 5.31 0 0 1 0-2.431z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-star\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 2.683 6.975c.376.978.564 1.466.856 1.878.259.364.577.683.942.942.411.292.9.48 1.878.856l6.975 2.683-6.975 2.683c-.978.376-1.466.564-1.878.856a3.993 3.993 0 0 0-.942.942c-.292.411-.48.9-.856 1.878L16 29.335l-2.683-6.975c-.376-.978-.564-1.466-.856-1.878a4.012 4.012 0 0 0-.942-.942c-.411-.292-.9-.48-1.878-.856l-6.975-2.683 6.975-2.683c.978-.376 1.466-.564 1.878-.856.364-.259.683-.578.942-.942.292-.411.48-.9.856-1.878L16 2.667z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-loading\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M4.454 22.666a6.364 6.364 0 0 1 1.944-8.453l.003-.003a6.37 6.37 0 0 1 7.312.126l4.576 3.327a6.37 6.37 0 0 0 7.312.126l.003-.003a6.36 6.36 0 0 0 1.943-8.453m-4.878 18.213a6.365 6.365 0 0 1-8.453-1.944l-.003-.003a6.37 6.37 0 0 1 .126-7.312l3.327-4.576a6.37 6.37 0 0 0 .126-7.312l-.006-.003a6.363 6.363 0 0 0-8.453-1.942m16.094 2.118c5.207 5.207 5.207 13.648 0 18.855s-13.648 5.207-18.855 0c-5.207-5.207-5.207-13.648 0-18.855s13.648-5.207 18.855 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-lightning\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M18.999 2.667h-7.674c-.239 0-.359 0-.465.036a.672.672 0 0 0-.249.154c-.08.078-.133.185-.24.399l-5.6 11.2c-.256.511-.383.767-.353.974a.669.669 0 0 0 .277.449c.172.12.458.12 1.029.12h8.274l-4 13.333 16.258-16.86c.548-.569.823-.853.839-1.097a.665.665 0 0 0-.235-.553c-.186-.157-.581-.157-1.372-.157h-9.49l3-8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-hexagon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M14.964 3.242c.378-.21.567-.315.767-.356.177-.036.36-.036.537 0 .2.041.389.146.767.356l9.867 5.482c.399.222.599.333.744.491.129.14.226.305.285.485.067.204.067.432.067.889v10.823c0 .457 0 .685-.067.889-.06.18-.157.346-.285.485-.145.158-.345.269-.744.491l-9.867 5.482c-.378.21-.567.315-.767.356-.177.036-.36.036-.537 0-.2-.041-.389-.146-.767-.356l-9.867-5.482c-.399-.222-.599-.333-.744-.491a1.34 1.34 0 0 1-.286-.485C4 22.097 4 21.869 4 21.412V10.589c0-.457 0-.685.067-.889.06-.18.157-.346.286-.485.145-.158.345-.269.744-.491l9.867-5.481z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-container\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M27.333 9.704 16 16m0 0L4.667 9.704M16 16v12.667m12-7.256V10.588c0-.457 0-.685-.067-.889a1.343 1.343 0 0 0-.285-.485c-.145-.158-.345-.269-.744-.491l-9.867-5.481c-.378-.21-.567-.315-.767-.356a1.349 1.349 0 0 0-.537 0c-.2.041-.389.146-.767.356L5.099 8.723c-.399.222-.599.333-.744.491a1.34 1.34 0 0 0-.286.485c-.067.204-.067.432-.067.889v10.823c0 .457 0 .685.067.889.06.18.157.346.286.485.145.158.345.269.744.491l9.867 5.482c.378.21.567.315.767.356.177.036.36.036.537 0 .2-.041.389-.146.767-.356l9.867-5.482c.399-.222.599-.333.744-.491.129-.14.226-.305.285-.485.067-.204.067-.432.067-.889z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-colors\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M16 27.296a8 8 0 1 0 7.44-13.683m-14.88.001a8 8 0 1 0 9.546 4.773M24 10.667a8 8 0 1 1-16 0 8 8 0 0 1 16 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M12 4h8M4 8h24M6.667 8l.801 12.018c.149 2.231.223 3.347.588 4.243a6 6 0 0 0 3.672 3.435c.919.304 2.037.304 4.273.304 2.236 0 3.354 0 4.273-.304a6 6 0 0 0 3.672-3.435c.365-.896.439-2.012.588-4.243L25.335 8\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.286,\n    d: \"M16 6.667v18.667M6.667 16h18.667\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"m3.333 28.667 7.399-2.846c.473-.182.71-.273.931-.392.197-.106.384-.227.56-.364.199-.154.378-.333.736-.692l15.04-15.04A3.77 3.77 0 1 0 22.666 4L7.626 19.04c-.359.359-.538.538-.692.736a3.948 3.948 0 0 0-.364.56c-.119.221-.21.458-.392.931l-2.846 7.399zm0 0 2.744-7.135c.196-.511.295-.766.463-.883a.665.665 0 0 1 .505-.107c.201.038.395.232.782.619l3.012 3.012c.387.387.58.58.619.782a.665.665 0 0 1-.107.505c-.117.168-.372.267-.883.463l-7.135 2.744z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-help-circle\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.88,\n    d: \"M16 29.333c7.364 0 13.333-5.97 13.333-13.333S23.364 2.667 16 2.667 2.667 8.637 2.667 16c0 7.364 5.97 13.333 13.333 13.333z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.88,\n    d: \"M12.12 12a4.003 4.003 0 0 1 6.834-1.249c.608.722.941 1.637.94 2.582 0 2.667-4 4-4 4M16 22.667h.02\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-filter\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 3,\n    d: \"M29.334 4H2.667l10.667 12.613v8.72L18.667 28V16.613L29.334 4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.311,\n    d: \"M1.333 16S6.666 5.333 16 5.333 30.667 16 30.667 16 25.334 26.667 16 26.667 1.333 16 1.333 16z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.311,\n    d: \"M16 20a4 4 0 1 0 0-8 4 4 0 0 0 0 8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye-off\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 1.5,\n    d: \"M10.128 5.214c0.651-0.152 1.296-0.221 1.86-0.214 1.758 0 3.309 0.559 4.658 1.393 1.119 0.692 2.089 1.567 2.894 2.448 0.644 0.705 1.175 1.405 1.585 2.001 0.327 0.475 0.57 0.874 0.733 1.155-0.546 0.953-1.16 1.821-1.778 2.542-0.359 0.419-0.311 1.051 0.108 1.41s1.051 0.311 1.41-0.108c0.818-0.954 1.611-2.112 2.283-3.37 0.148-0.279 0.163-0.618 0.013-0.919 0 0-0.396-0.789-1.12-1.843-0.451-0.656-1.038-1.432-1.757-2.218-0.894-0.979-2.004-1.987-3.319-2.8-1.595-0.985-3.506-1.691-5.686-1.691-0.734-0.009-1.54 0.079-2.34 0.266-0.538 0.126-0.872 0.664-0.746 1.202s0.664 0.872 1.202 0.746zM10.027 11.442l2.531 2.531c-0.182 0.061-0.372 0.094-0.563 0.101-0.513 0.018-1.030-0.159-1.434-0.536s-0.617-0.88-0.635-1.393c-0.008-0.238 0.025-0.476 0.101-0.704zM5.983 7.397l2.553 2.553c-0.434 0.691-0.636 1.484-0.608 2.266 0.036 1.022 0.463 2.033 1.271 2.785s1.846 1.107 2.868 1.071c0.692-0.024 1.379-0.228 1.984-0.608l2.322 2.322c-1.378 0.799-2.895 1.196-4.384 1.214-1.734 0-3.285-0.559-4.634-1.393-1.119-0.692-2.089-1.567-2.894-2.448-0.644-0.705-1.175-1.405-1.585-2.001-0.326-0.475-0.57-0.873-0.732-1.154 1.050-1.822 2.376-3.379 3.841-4.607zM0.293 1.707l4.271 4.271c-1.731 1.479-3.269 3.358-4.445 5.549-0.148 0.279-0.164 0.619-0.013 0.92 0 0 0.396 0.789 1.12 1.843 0.451 0.656 1.038 1.432 1.757 2.218 0.894 0.979 2.004 1.987 3.319 2.8 1.595 0.986 3.506 1.692 5.71 1.692 1.993-0.024 4.019-0.601 5.815-1.759l4.466 4.466c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414l-8.876-8.876c-0.002-0.002-0.005-0.005-0.007-0.007l-4.209-4.21c-0.008-0.007-0.016-0.016-0.024-0.024l-8.884-8.883c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-move\",\n    viewBox: \"0 0 30 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.447,\n    d: \"M4.188 9.725a12.544 12.544 0 0 1 10.87-6.275c6.931 0 12.549 5.618 12.549 12.549s-5.618 12.549-12.549 12.549c-4.645 0-8.7-2.523-10.87-6.274\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.447,\n    d: \"m15.059 21.019 5.02-5.02-5.02-5.02M2.51 16h17.569\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-x-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M24 8 8 24M8 8l16 16\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-login\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 1.5,\n    d: \"M11.867 10.08c.413-4.8 2.88-6.76 8.28-6.76h.173c5.96 0 8.347 2.387 8.347 8.347v8.693c0 5.96-2.387 8.347-8.347 8.347h-.173c-5.36 0-7.827-1.933-8.267-6.653M2.667 16H19.84\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 1.5,\n    d: \"M16.867 11.533 21.334 16l-4.467 4.467\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-burger-menu\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.5,\n    d: \"M4 16h24M4 8h24M4 24h24\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-alert\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3,\n    d: \"M12.472 28c0.94 0.83 2.176 1.334 3.528 1.334s2.588-0.504 3.528-1.334M24 10.666c0-4.418-3.582-8-8-8s-8 3.582-8 8v0c0 4.12-1.040 6.942-2.2 8.808-0.98 1.574-1.47 2.36-1.452 2.58 0.020 0.244 0.072 0.336 0.268 0.48 0.176 0.132 0.974 0.132 2.568 0.132h17.63c1.596 0 2.394 0 2.57-0.13 0.196-0.146 0.248-0.24 0.268-0.48 0.018-0.22-0.472-1.008-1.452-2.582-1.16-1.866-2.2-4.688-2.2-8.808z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-dropdown\",\n    viewBox: \"0 0 30 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.3684,\n    d: \"M7.579 12.211l7.579 7.579 7.579-7.579\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-chevron-down\",\n    viewBox: \"0 0 30 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.8235,\n    d: \"M7.529 12.235l7.529 7.529 7.529-7.529\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.ad1d47f201764422d22dc207ddf327ed.svg\";\nexport { ForwardRef as ReactComponent };","import PropTypes from 'prop-types';\nimport { Box, Modal, Button, Typography } from '@mui/material';\nimport { container } from 'styles';\n\nconst DeleteConfirmModal = ({ isOpenModal, onCloseModal, onConfirm }) => {\n  return (\n    <Modal open={isOpenModal} onClose={onCloseModal}>\n      <Box sx={container.modal}>\n        <Box>\n          <Typography variant=\"body1\">\n            Are you sure you want to delete this item?\n          </Typography>\n          <Typography variant=\"body2\">\n            All your columns/tasks in this item will be deleted too.\n          </Typography>\n          <Box sx={{ display: 'flex', justifyContent: 'center', gap: '10px' }}>\n            <Button onClick={onCloseModal}>No</Button>\n            <Button onClick={onConfirm}>Yes</Button>\n          </Box>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nDeleteConfirmModal.propTypes = {\n  isOpenModal: PropTypes.bool.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n};\n\nexport default DeleteConfirmModal;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nconst StyledPlusIconContainer = styled('div')(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  background: theme.palette.background.boxPlus,\n  width: '28px',\n  height: '28px',\n  borderRadius: '4px',\n}));\n\nconst PlusIcon = () => {\n  return (\n    <StyledPlusIconContainer>\n      <Icon id=\"plus\" sx={icon.plusAdd} />\n    </StyledPlusIconContainer>\n  );\n};\nexport default PlusIcon;\n","import React from 'react';\nimport { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\nimport { styled } from '@mui/system';\nimport PlusIcon from './PlusIcon';\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  boxShadow: 'none',\n  textTransform: 'none',\n  paddingTop: '11px',\n  paddingBottom: '11px',\n  '&:hover': {\n    boxShadow: 'none',\n  },\n}));\n\nconst TestButton = ({ children, ...otherProps }) => {\n  const { submitForm } = useFormikContext();\n\n  const handleSubmit = () => {\n    submitForm();\n  };\n\n  return (\n    <StyledButton\n      variant=\"contained\"\n      color=\"primary\"\n      fullWidth\n      onClick={handleSubmit}\n      startIcon={<PlusIcon />}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TestButton;\n","import React from 'react';\nimport Icons from './sprite.svg';\nimport { SvgIcon } from '@mui/material';\n\nexport const Icon = ({ id, sx }) => {\n  return (\n    <SvgIcon component=\"svg\" sx={sx} className=\"icon\">\n      <use href={Icons + '#icon-' + id}></use>\n    </SvgIcon>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Box, Modal } from '@mui/material';\nimport { Icon } from 'components/Icons';\nimport { button, container, icon } from 'styles';\n\nconst ModalWindow = ({ isOpenModal, onCloseModal, children }) => {\n  return (\n    <Modal open={isOpenModal} onClose={onCloseModal}>\n      <Box sx={container.modal}>\n        <Box onClick={onCloseModal} sx={button.closeBtn}>\n          <Icon id={'x-close'} sx={icon.close} />\n        </Box>\n        {children}\n      </Box>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  isOpenModal: PropTypes.bool.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ModalWindow;\n","import { useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\n\nimport { TiFlash } from 'react-icons/ti';\nimport { Box, Typography } from '@mui/material';\nimport { logo } from 'styles';\n\nexport const Logo = () => {\n  const userTheme = useSelector(selectTheme);\n\n  let logoColor = '#5255BC';\n  if (userTheme === 'light' || userTheme === 'dark') logoColor = '#FFF';\n\n  return (\n    <Box sx={logo.container}>\n      <Box sx={logo.iconWrapper}>\n        <Box sx={logo.iconSize}>\n          <TiFlash color={logoColor} size={'100%'} />\n        </Box>\n      </Box>\n      <Typography component=\"h1\" sx={logo.text}>\n        Task Pro\n      </Typography>\n    </Box>\n  );\n};\n","import bg1 from 'images/bgPreviews/bg1.png';\nimport bg2 from 'images/bgPreviews/bg2.png';\nimport bg3 from 'images/bgPreviews/bg3.png';\nimport bg4 from 'images/bgPreviews/bg4.png';\nimport bg5 from 'images/bgPreviews/bg5.png';\nimport bg6 from 'images/bgPreviews/bg6.png';\nimport bg7 from 'images/bgPreviews/bg7.png';\nimport bg8 from 'images/bgPreviews/bg8.png';\nimport bg9 from 'images/bgPreviews/bg9.png';\nimport bg10 from 'images/bgPreviews/bg10.png';\nimport bg11 from 'images/bgPreviews/bg11.png';\nimport bg12 from 'images/bgPreviews/bg12.png';\nimport bg13 from 'images/bgPreviews/bg13.png';\nimport bg14 from 'images/bgPreviews/bg14.png';\nimport bg15 from 'images/bgPreviews/bg15.png';\nimport bg16 from 'images/bgPreviews/bg16.png';\n\nexport const previews = [\n  bg1,\n  bg2,\n  bg3,\n  bg4,\n  bg5,\n  bg6,\n  bg7,\n  bg8,\n  bg9,\n  bg10,\n  bg11,\n  bg12,\n  bg13,\n  bg14,\n  bg15,\n  bg16,\n];\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Icon } from 'components/Icons';\nimport { button, container, form, input, text } from 'styles';\nimport { previews } from 'helpers/getBgPreviews';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport { iconLabel } from 'styles/icon';\n\nconst iconNames = [\n  'project',\n  'star',\n  'loading',\n  'puzzle-piece',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string()\n    .required('Is Required')\n    .min(3, 'The title must contain at least 3 characters'),\n\n  icon: Yup.string().required('Is Required'),\n\n  background: Yup.string(),\n});\n\nconst initialValues = {\n  title: '',\n  icon: iconNames[0],\n  background: '0',\n};\n\nconst BoardForm = ({\n  onCloseModal,\n  initData,\n  title,\n  type,\n  boardOperation,\n  id,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    const submitvalues = !id ? values : { ...values, id };\n    dispatch(boardOperation(submitvalues));\n\n    setSubmitting(false);\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Box sx={container.addColumnContainer}>\n      <Formik\n        initialValues={initData ? initData : initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n        validationOnBlur={true}\n      >\n        {({ handleChange, values }) => (\n          <Form>\n            <Typography variant=\"h2\" mb={'24px'}>\n              {title}\n            </Typography>\n            <FormLabel>\n              <TextField\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                value={values.title}\n                onChange={handleChange}\n                sx={input.boardForm}\n              />\n              <ErrorMessage\n                name=\"title\"\n                component=\"div\"\n                style={form.errorMessage}\n              />\n            </FormLabel>\n            <FormControl>\n              <FormLabel sx={form.label}>\n                <Typography variant=\"h3\" sx={text.label}>\n                  Icons\n                </Typography>\n                <Box role=\"group\" sx={container.iconBox}>\n                  {iconNames.map((icon, index) => (\n                    <Box key={index} sx={container.boardIcon}>\n                      <Field\n                        type=\"radio\"\n                        id={index}\n                        name=\"icon\"\n                        value={icon}\n                        checked={values.icon === icon}\n                      />\n                      <FormLabel htmlFor={index} sx={iconLabel}>\n                        <Icon id={icon} sx={button.boardEdit}></Icon>\n                      </FormLabel>\n                    </Box>\n                  ))}\n                </Box>\n                <ErrorMessage name=\"icon\" component=\"div\" />\n              </FormLabel>\n\n              <FormLabel sx={form.label} style={{ marginBottom: '40px' }}>\n                <Typography variant=\"h3\" sx={text.label}>\n                  Background\n                </Typography>\n                <Box sx={container.imageWrap}>\n                  {previews.map((preview, index) => (\n                    <Box key={index} sx={container.boardBg}>\n                      <Field\n                        type=\"radio\"\n                        id={`back${index}`}\n                        name=\"background\"\n                        value={index}\n                        checked={Number(values.background) === index}\n                      />\n                      <FormLabel\n                        htmlFor={`back${index}`}\n                        sx={form.bgLabel}\n                        style={{ backgroundImage: `url(${preview})` }}\n                      />\n                    </Box>\n                  ))}\n                </Box>\n                <ErrorMessage name=\"background\" component=\"div\" />\n              </FormLabel>\n            </FormControl>\n            <SubmitButton>{type}</SubmitButton>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nBoardForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  initData: PropTypes.object,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  boardOperation: PropTypes.func.isRequired,\n  id: PropTypes.string,\n};\n\nexport default BoardForm;\n","export const selectNavIndex = state => state.nav.navIndex;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useParams, useNavigate } from 'react-router-dom';\nimport Modal from 'components/Modal/Modal';\nimport BoardForm from 'components/BoardForm/BoardForm';\nimport { Icon } from 'components/Icons';\nimport DeleteConfirmModal from 'components/DeleteConfirmModal/DeleteConfirmModal';\n\nimport {\n  getBoardById,\n  updateBoard,\n  deleteBoard,\n} from 'store/boards/operations';\n\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Box,\n} from '@mui/material';\nimport { button, icon } from 'styles';\n\nimport { selectBoard, selectBoards } from 'store/boards/selectors';\nimport { selectNavIndex } from 'store/nav/selectors';\nimport { setNavIndex } from 'store/nav/navSlice';\n\nexport const BoardNavList = () => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const { boardId } = useParams();\n  const board = useSelector(selectBoard);\n  const [ShowDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n  const navigate = useNavigate();\n  const boards = useSelector(selectBoards);\n  const navIndex = useSelector(selectNavIndex);\n\n  useEffect(() => {\n    if (!boards.length) {\n      navigate('/home');\n    } else {\n      navigate(boards[navIndex]._id);\n    }\n  }, [boards, navIndex, navigate]);\n\n  useEffect(() => {\n    if (boardId) dispatch(getBoardById(boardId));\n  }, [dispatch, boardId]);\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setShowDeleteConfirmModal(false);\n  };\n\n  const handleDeleteBoard = () => {\n    dispatch(deleteBoard(board._id));\n    setShowDeleteConfirmModal(false);\n    dispatch(setNavIndex(0));\n  };\n\n  const openDeleteConfirmModal = () => {\n    setShowDeleteConfirmModal(true);\n  };\n\n  return (\n    <>\n      <List sx={button.boardListGroup}>\n        {boards.map((board, index) => {\n          return (\n            <ListItem key={board._id} disablePadding>\n              <ListItemButton\n                component={NavLink}\n                to={board._id}\n                sx={button.boardListItem}\n                onClick={() => {\n                  dispatch(setNavIndex(index));\n                }}\n              >\n                <Icon id={board.icon} sx={icon.board} />\n                <ListItemText primary={board.title} disableTypography />\n                {board._id === boardId && (\n                  <>\n                    <Box\n                      onClick={handleOpenModal}\n                      color=\"inherit\"\n                      size=\"small\"\n                      sx={{ mr: '8px', display: 'flex' }}\n                    >\n                      <Icon id={'pencil'} sx={icon.boardItem} />\n                    </Box>\n                    <Box\n                      onClick={openDeleteConfirmModal}\n                      size=\"small\"\n                      color=\"inherit\"\n                      sx={{ mr: '20px', display: 'flex' }}\n                    >\n                      <Icon id={'trash'} sx={icon.boardItem} />\n                    </Box>\n                  </>\n                )}\n              </ListItemButton>\n            </ListItem>\n          );\n        })}\n      </List>\n\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <BoardForm\n          onCloseModal={handleCloseModal}\n          title=\"Edit board\"\n          type=\"Edit\"\n          boardOperation={updateBoard}\n          id={board._id}\n          initData={{\n            title: board.title,\n            icon: board.icon,\n            background: board.background,\n          }}\n        />\n      </Modal>\n\n      <DeleteConfirmModal\n        isOpenModal={ShowDeleteConfirmModal}\n        onCloseModal={handleCloseModal}\n        onConfirm={handleDeleteBoard}\n      />\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport Modal from 'components/Modal/Modal';\nimport BoardForm from 'components/BoardForm/BoardForm';\nimport { BoardNavList } from 'components/BoardsNavList';\nimport { Icon } from 'components/Icons';\nimport { addBoard } from 'store/boards/operations';\n\nimport { Box, Typography, Button } from '@mui/material';\nimport { container, text, button, icon } from 'styles';\n\nexport const BoardNav = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Box sx={container.boardNav}>\n      <Typography component=\"h2\" variant=\"h4\" sx={text.boardNavTitle}>\n        My boards\n      </Typography>\n\n      <Box sx={button.createBoardWrapper}>\n        <Button\n          onClick={handleOpenModal}\n          variant=\"text\"\n          sx={button.createBoard}\n        >\n          Create a<br />\n          new board\n          <Box className=\"createBoardBox\" sx={button.createBoardBox}>\n            <Icon id={'plus'} sx={icon.createNewBoard} />\n          </Box>\n        </Button>\n      </Box>\n      <Box sx={container.boardNavList}>\n        <BoardNavList />\n      </Box>\n\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <BoardForm\n          onCloseModal={handleCloseModal}\n          title=\"New board\"\n          type=\"Create\"\n          boardOperation={addBoard}\n        />\n      </Modal>\n    </Box>\n  );\n};\n","import { useDispatch } from \"react-redux\";\nimport { needHelp } from 'store/boards/operations';\nimport { Formik, ErrorMessage } from 'formik';\n\nimport * as Yup from 'yup';\nimport Notiflix from \"notiflix\";\nimport { Typography, TextField, Button, FormControl, Box } from \"@mui/material\";\nimport {container} from 'styles';\n\nconst helpSchema = Yup.object().shape({\n    email: Yup.string()\n      .matches(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        {\n          message: 'Invalid Email',\n          excludeEmptyString: true,\n        }\n      )\n      .required('Please, enter your email'),\n    text: Yup.string()\n      .required('Please, enter your comment'),\n  });\n\nexport const NeedHelpForm = ({onCloseModal}) => {\n    const dispatch = useDispatch();\n\n     function handleSubmit(values, { resetForm }) {\n        const { email, text } = values;\n         dispatch(needHelp({ email, text }));\n         Notiflix.Notify.info('Thank you for your request, we will answer you as soon as possible.');\n         resetForm();\n         onCloseModal();\n    }\n\n    return (   \n      <Box sx={container.helpFormContainer}>\n      <Typography variant=\"h2\" mb={3}>\n        Need help\n      </Typography>\n      <Formik\n        initialValues={{ email: '', text: '' }}\n        validationSchema={helpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <form onSubmit={handleSubmit}>\n            <FormControl fullWidth>\n              <TextField\n                name=\"email\"\n                label=\"Email address\"\n                variant=\"outlined\"\n                sx={{mb: 1.75}}\n                value={values.email}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 12,\n                  marginTop: -10,\n                  marginBottom: 4,\n                }}\n              />\n              <TextField\n                name=\"text\"\n                label=\"Comment\"\n                variant=\"outlined\"\n                multiline\n                rows={6}\n                sx={{mb: 3}}\n                value={values.text}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                name=\"text\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 12,\n                  marginTop: -20,\n                  marginBottom: 4,\n                }}\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n                sx={{ \n                  height: 49,\n                  textTransform: 'none',\n                 }}\n                type=\"submit\"\n                disabled={isSubmitting}\n              >\n                Send\n              </Button>\n            </FormControl>\n          </form>\n        )}\n      </Formik>\n    </Box>     \n    )\n}\n\n\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport TaskProImg from '../../images/taskPro-img.png';\nimport { NeedHelpForm } from './NeedHelpForm';\nimport { Box, Typography, Button, SvgIcon } from '@mui/material';\nimport { text, container, button } from 'styles';\nimport sprite from 'components/Icons/sprite.svg';\n\nexport const HelpBanner = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n  \n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <Box sx={container.helpBannerContainer}>\n      <Box\n        component=\"img\"\n        src={TaskProImg}\n        alt=\"TaskProHelperImg\"\n        sx={{\n          width: 54,\n          height: 78,\n          marginTop: '14px', \n          marginLeft: '14px', \n          marginBottom: '14px'}}\n      />\n      <Typography component=\"p\" variant='body3' sx={text.helpBannerText}>\n        If you need help with&nbsp;<br/>\n        <Typography component=\"span\" variant='body3' sx={text.accent}>TaskPro</Typography>, check out our\n        support resources or reach out to our customer support team.\n      </Typography>\n      <Button variant=\"text\" sx={button.helpBannerBtn} onClick={handleOpenModal}>\n        <SvgIcon sx={text.helpBannerIcon}>\n              <svg width=\"20px\" height=\"20px\" stroke=\"currentColor\" fill=\"none\">\n                <use href={sprite + '#icon-help-circle'} />\n              </svg>\n        </SvgIcon>\n        <Typography component=\"span\" variant='h7' sx={text.helpBannerButton}>Need help?</Typography>\n      </Button>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <NeedHelpForm \n            onCloseModal={handleCloseModal}\n            title=\"Need help\"\n            type=\"submit\"   \n          />\n        </Modal>  \n      )}\n    </Box>\n  );\n};\n","import { logout } from 'store/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nimport { Icon } from 'components/Icons';\nimport { Button } from '@mui/material';\nimport { button, icon } from 'styles';\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Button\n      onClick={() => dispatch(logout())}\n      variant=\"text\"\n      sx={button.logOut}\n    >\n      <Icon id={'login'} sx={icon.LogOut} />\n      Log out\n    </Button>\n  );\n};\n","import { Logo } from 'components/Logo';\nimport { BoardNav } from 'components/BoardNav';\nimport { HelpBanner } from 'components/HelpBanner';\nimport { LogOut } from 'components/LogOut';\n\nimport { Box } from '@mui/material';\n\nexport const SideBar = ({ contStyles }) => {\n  return (\n    <Box sx={contStyles}>\n      <Box>\n        <Logo />\n        <BoardNav />\n      </Box>\n      <Box>\n        <HelpBanner />\n        <LogOut />\n      </Box>\n    </Box>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { SideBar } from 'components/SideBar';\nimport { Icon } from 'components/Icons';\n\nimport { Box, Button, Drawer } from '@mui/material';\nimport { button, container, icon } from 'styles';\n\nexport const BurgerMenu = () => {\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const handleWindowResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (windowWidth >= 1440) {\n      setMenuVisible(false);\n    }\n  }, [windowWidth]);\n\n  return (\n    windowWidth <= 1440 && (\n      <Box sx={{ mr: 'auto' }}>\n        <Button onClick={toggleMenu} sx={button.burgerMenu}>\n          <Icon id={'burger-menu'} sx={icon.burgerMenu} />\n        </Button>\n        <Drawer anchor=\"left\" open={menuVisible} onClose={toggleMenu}>\n          <SideBar contStyles={container.sideBar} />\n        </Drawer>\n      </Box>\n    )\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\nimport { updateTheme } from 'store/auth/operations';\nimport { Icon } from 'components/Icons';\n\nimport { Box, Button, Menu, MenuItem, SvgIcon } from '@mui/material';\nimport { button, icon } from 'styles';\n\nexport const ThemePanel = () => {\n  const dispatch = useDispatch();\n  const userTheme = useSelector(selectTheme);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClick = theme => {\n    dispatch(updateTheme(theme));\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box>\n      <Button\n        variant=\"text\"\n        sx={button.theme}\n        id=\"theme-button\"\n        aria-controls={open ? 'theme-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleOpen}\n      >\n        Theme\n        <SvgIcon  sx={{\n          width: '16px',\n          height: '16px',\n          ml: '4px',\n          color: 'text.primary'}}>\n            <Icon id={'chevron-down'} sx={icon.themeFilter}/>\n        </SvgIcon>\n      </Button>\n      <Menu\n        sx={button.themeMenu}\n        id=\"theme-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClick}\n        MenuListProps={{\n          'aria-labelledby': 'theme-button',\n        }}\n      >\n        <MenuItem\n          sx={button.themeItem}\n          selected={userTheme === 'light'}\n          onClick={() => {\n            handleClick('light');\n          }}\n        >\n          Light\n        </MenuItem>\n        <MenuItem\n          sx={button.themeItem}\n          selected={userTheme === 'dark'}\n          onClick={() => {\n            handleClick('dark');\n          }}\n        >\n          Dark\n        </MenuItem>\n        <MenuItem\n          sx={button.themeItem}\n          selected={userTheme === 'violet'}\n          onClick={() => {\n            handleClick('violet');\n          }}\n        >\n          Violet\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from 'store/auth/selectors';\nimport { updateProfile } from 'store/auth/operations';\nimport { Icon } from 'components/Icons';\nimport defaultAvatarViolet from '../../images/default-avatar-violet.png';\nimport defaultAvatarLight from '../../images/default-avatar-light.png';\nimport defaultAvatarDark from '../../images/default-avatar-dark.png';\n\nimport { icon, form, container, button } from 'styles';\nimport {\n  Box,\n  FormLabel,\n  Typography,\n  Input,\n  TextField,\n  Button,\n} from '@mui/material';\n\nconst UserSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Name must be at most 32 characters'),\n  email: Yup.string().email('Invalid email'),\n  password: Yup.string()\n    .trim()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must be at most 64 characters'),\n});\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\nexport const EditProfile = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const { theme } = useSelector(selectUser);\n  const [password, setPassword] = useState('password');\n  const [currentImage, setCurrentImage] = useState(user.avatarURL);\n  const [avatarURL, setAvatarURL] = useState('');\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, email, password } = values;\n    const formData = new FormData();\n    if (avatarURL) {\n      formData.append('avatarURL', avatarURL);\n    }\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('password', password);\n\n    dispatch(updateProfile(formData));\n    resetForm();\n    onCloseModal();\n  };\n\n  let avatar = avatarURL;\n  if (!avatar) {\n    switch (theme) {\n      case 'light':\n        avatar = defaultAvatarLight;\n        break;\n      case 'dark':\n        avatar = defaultAvatarDark;\n        break;\n      default:\n        avatar = defaultAvatarViolet;\n        break;\n    }\n  }\n\n  const handleClickShowPassword = () => setPassword(show => !show);\n  function handleFileChange(event) {\n    const file = event;\n    if (!file) {\n      return;\n    }\n    setAvatarURL(file);\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      setCurrentImage(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  }\n  return (\n    <Box sx={container.editUserWrapper}>\n      <Typography variant={'h2'} mb={'24px'}>\n        Edit profile\n      </Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={UserSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Box sx={form.editUserForm}>\n            <FormLabel htmlFor=\"avatarURL\" sx={form.editUserLabel}>\n              <Box sx={container.editUserImgWrapper}>\n                <Box\n                  component=\"img\"\n                  src={currentImage || avatar}\n                  alt=\"User picture\"\n                />\n                <Box aria-label=\"add\" sx={container.editUserPlusWrapper}>\n                  <Icon id={'plus'} sx={icon.addProfileImg} />\n                </Box>\n              </Box>\n            </FormLabel>\n            <Input\n              id=\"avatarURL\"\n              type=\"file\"\n              name=\"avatarURL\"\n              accept=\"image/*,.png,.jpg,.gif,.web\"\n              onChange={event => {\n                handleFileChange(event.currentTarget.files[0]);\n              }}\n              sx={{ display: 'none' }}\n            />\n            <FormLabel sx={{ mb: '14px' }}>\n              <ErrorMessage\n                name=\"name\"\n                component=\"div\"\n                style={form.errorMessageEditUser}\n              />\n              <Field\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                as={TextField}\n                variant=\"outlined\"\n                placeholder={user.name}\n                sx={form.editUserFielld}\n              />\n            </FormLabel>\n\n            <FormLabel sx={{ mb: '14px' }}>\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={form.errorMessageEditUser}\n              />\n              <Field\n                autoComplete=\"off\"\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                as={TextField}\n                variant=\"outlined\"\n                placeholder={user.email}\n                sx={form.editUserFielld}\n              />\n            </FormLabel>\n\n            <FormLabel sx={{ mb: '24px' }}>\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                style={form.errorMessageEditUser}\n              />\n              <Field\n                autoComplete=\"off\"\n                type={password ? 'password' : 'text'}\n                id=\"password\"\n                name=\"password\"\n                as={TextField}\n                variant=\"outlined\"\n                placeholder=\"Enter your password\"\n                sx={form.editUserFielld}\n              />\n              <Button\n                type=\"button\"\n                onClick={handleClickShowPassword}\n                sx={button.editUserEye}\n              >\n                {password ? (\n                  <Box>\n                    <Icon id={'eye'} sx={icon.eye} />\n                  </Box>\n                ) : (\n                  <Box>\n                    <Icon id={'eye-off'} sx={icon.eye} />\n                  </Box>\n                )}\n              </Button>\n            </FormLabel>\n\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              sx={{\n                height: 49,\n                textTransform: 'none',\n              }}\n              type=\"submit\"\n            >\n              Send\n            </Button>\n          </Box>\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'store/auth/selectors';\n\nimport Modal from 'components/Modal/Modal';\nimport defaultAvatarViolet from '../../images/default-avatar-violet.png';\nimport defaultAvatarLight from '../../images/default-avatar-light.png';\nimport defaultAvatarDark from '../../images/default-avatar-dark.png';\nimport { EditProfile } from '../EditProfile';\n\nimport { Button, Box } from '@mui/material';\nimport { button } from 'styles';\n\nexport const UserProfile = () => {\n  const [showModal, setShowModal] = useState(false);\n  const { name, avatarURL, theme } = useSelector(selectUser);\n\n  let avatar = avatarURL;\n  if (!avatar) {\n    switch (theme) {\n      case 'light':\n        avatar = defaultAvatarLight;\n        break;\n      case 'dark':\n        avatar = defaultAvatarDark;\n        break;\n      default:\n        avatar = defaultAvatarViolet;\n        break;\n    }\n  }\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"text\" sx={button.profile} onClick={handleOpenModal}>\n        {name}\n        <Box\n          component=\"img\"\n          sx={button.profileImg}\n          src={avatar}\n          alt=\"User avatar\"\n        />\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <EditProfile onCloseModal={handleCloseModal} type=\"Submit\" />\n      </Modal>\n    </>\n  );\n};\n","import { BurgerMenu } from 'components/BurgerMenu';\nimport { ThemePanel } from 'components/ThemePanel';\nimport { UserProfile } from 'components/UserProfile';\n\nimport { Box } from '@mui/material';\nimport { container } from 'styles';\n\nexport const TopBar = () => {\n  return (\n    <Box sx={container.topBar}>\n      <BurgerMenu />\n      <ThemePanel />\n      <UserProfile />\n    </Box>\n  );\n};\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { TopBar } from 'components/TopBar';\nimport { SideBar } from 'components/SideBar';\nimport { Container, Box } from '@mui/material';\nimport { container } from 'styles';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const TasksLayout = () => {\n  return (\n    <Container sx={container.layout}>\n      <header>\n        <TopBar />\n      </header>\n      <Box\n        component=\"main\"\n        style={{ position: 'relative' }}\n        sx={container.main}\n      >\n        <SideBar contStyles={container.sideBarDesktop} />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Box>\n    </Container>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TasksLayout } from 'components/TasksLayout';\nimport { getAllBoards } from 'store/boards/operations';\n\nconst TasksPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllBoards());\n  }, [dispatch]);\n  \n  return <TasksLayout />;\n};\n\nexport default TasksPage;\n","export const selectIsLoading = state => state.boards.isLoading;\nexport const selectError = state => state.boards.error;\nexport const selectBoards = state => state.boards.boards;\nexport const selectBoard = state => state.boards.board;\nexport const selectColumns = state => state.boards.columns;"],"names":["_ref","isOpenModal","onCloseModal","onConfirm","_jsx","Modal","open","onClose","children","Box","sx","container","_jsxs","Typography","variant","display","justifyContent","gap","Button","onClick","StyledPlusIconContainer","styled","alignItems","background","theme","palette","boxPlus","width","height","borderRadius","Icon","id","icon","StyledButton","boxShadow","textTransform","paddingTop","paddingBottom","_ref2","submitForm","_objectWithoutProperties","_excluded","useFormikContext","color","fullWidth","startIcon","PlusIcon","SvgIcon","component","className","href","Icons","button","Logo","userTheme","useSelector","selectTheme","logoColor","logo","TiFlash","size","previews","iconNames","validationSchema","Yup","shape","title","required","min","initialValues","initData","type","boardOperation","dispatch","useDispatch","Formik","onSubmit","values","setSubmitting","resetForm","submitvalues","_objectSpread","validationOnBlur","_ref3","handleChange","Form","mb","FormLabel","TextField","name","placeholder","value","onChange","input","ErrorMessage","style","form","FormControl","text","role","map","index","Field","checked","htmlFor","iconLabel","marginBottom","preview","concat","Number","backgroundImage","SubmitButton","selectNavIndex","state","nav","navIndex","BoardNavList","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","boardId","useParams","board","selectBoard","_useState3","_useState4","ShowDeleteConfirmModal","setShowDeleteConfirmModal","navigate","useNavigate","boards","selectBoards","useEffect","length","_id","getBoardById","handleOpenModal","handleCloseModal","openDeleteConfirmModal","_Fragment","List","ListItem","disablePadding","ListItemButton","NavLink","to","setNavIndex","ListItemText","primary","disableTypography","mr","BoardForm","updateBoard","DeleteConfirmModal","deleteBoard","BoardNav","addBoard","helpSchema","email","matches","message","excludeEmptyString","NeedHelpForm","needHelp","Notiflix","handleSubmit","isSubmitting","label","fontSize","marginTop","multiline","rows","disabled","HelpBanner","src","alt","marginLeft","stroke","fill","sprite","LogOut","logout","SideBar","contStyles","BurgerMenu","menuVisible","setMenuVisible","window","innerWidth","windowWidth","setWindowWidth","toggleMenu","handleWindowResize","addEventListener","removeEventListener","Drawer","anchor","ThemePanel","anchorEl","setAnchorEl","Boolean","handleClick","updateTheme","undefined","event","currentTarget","ml","Menu","MenuListProps","MenuItem","selected","UserSchema","max","password","trim","EditProfile","user","selectUser","setPassword","avatarURL","currentImage","setCurrentImage","_useState5","_useState6","setAvatarURL","avatar","defaultAvatarLight","defaultAvatarDark","defaultAvatarViolet","formData","FormData","append","updateProfile","Input","accept","file","reader","FileReader","onload","e","target","result","readAsDataURL","handleFileChange","files","autoComplete","as","show","UserProfile","_useSelector","TopBar","TasksLayout","Container","position","Suspense","fallback","Loader","Outlet","getAllBoards","selectError","error","selectColumns","columns"],"sourceRoot":""}