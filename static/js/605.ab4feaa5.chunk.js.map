{"version":3,"file":"static/js/605.ab4feaa5.chunk.js","mappings":"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","sources":["components/Logo/Logo.jsx","components/BoardForm/BoardForm.styled.js","helpers/getBgPreviews.js","components/BoardForm/BoardForm.jsx","components/BoardsNavList/BoardNavList.jsx","components/BoardNav/BoardNav.jsx","components/HelpBanner/NeedHelpForm.jsx","components/HelpBanner/HelpBanner.jsx","components/LogOut/LogOut.jsx","components/SideBar/SideBar.jsx","components/BurgerMenu/BurgerMenu.jsx","components/ThemePanel/ThemePanel.jsx","components/EditProfile/EditProfile.styled.js","components/EditProfile/EditProfile.jsx","components/UserProfile/UserProfile.jsx","components/TopBar/TopBar.jsx","components/TasksLayout/TasksLayout.jsx","pages/TasksPage.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\n\nimport { TiFlash } from 'react-icons/ti';\nimport { Box, Typography } from '@mui/material';\nimport { logo } from 'styles';\n\nexport const Logo = () => {\n  const userTheme = useSelector(selectTheme);\n\n  let logoColor = '#5255BC';\n  if (userTheme === 'light' || userTheme === 'dark') logoColor = '#FFF';\n\n  return (\n    <Box sx={logo.container}>\n      <Box sx={logo.iconWrapper}>\n        <Box sx={logo.iconSize}>\n          <TiFlash color={logoColor} size={'100%'} />\n        </Box>\n      </Box>\n      <Typography component=\"h1\" sx={logo.text}>\n        Task Pro\n      </Typography>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Box, Button, Typography } from '@mui/material';\n// import { Icon } from 'components/Icons';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  width: 302px;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  width: 302px;\n  box-sizing: border-box;\n  // background-color: ;\n  border: 1px solid black;\n  border-radius: 8px;\n  padding: 14px 18px;\n  box-shadow: 0px 4px 16px rgba(17, 17, 17, 0.1);\n  // color: ;\n  font-family: inherit;\n  font-size: 14px;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 21px;\n  letter-spacing: -2%;\n\n  &:focus,\n  &:hover {\n    /* color: ;\n    border-color:  */\n  }\n`;\n\nexport const Text = styled(Typography)`\n  // color: ;\n  margin: 0;\n  margin-bottom: 14px;\n  text-align: left;\n  font-size: 14px;\n  font: 'Poppins';\n  font-weight: 400;\n  font-style: normal;\n  line-height: 21px;\n  letter-spacing: -2%;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  position: relative;\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const Icontainer = styled(Box)`\n  display: flex;\n  margin-bottom: 24px;\n  gap: 8px;\n`;\n\nexport const IconLabel = styled.label`\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  border-radius: 50%;\n  background-color: transparent;\n  text-align: center;\n  /* color:  */\n  opacity: 0.5;\n\n  &:hover,\n  &:focus {\n    /* color: */\n    opacity: 1;\n    scale: 1.2;\n  }\n`;\n\n// export const IconEl = styled(Icon)`\n//   /*     color: */\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: flex-start;\n//   align-items: center;\n//   stroke: currentColor;\n//   width: 18px;\n//   height: 18px;\n\n//   &:hover {\n//     /* color:  */\n//   }\n// `;\n\nexport const ImageWrap = styled(Box)`\n  display: grid;\n  width: fit-content;\n  grid-template-columns: repeat(8, 1fr);\n  grid-gap: 4px;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nexport const BgLabel = styled.label`\n  display: block;\n  box-sizing: border-box;\n  width: 28px;\n  height: 28px;\n  background-size: cover;\n  background-position: center;\n  border-radius: 8px;\n\n  &:hover,\n  &:focus {\n    /* border: */\n    scale: 1.2;\n  }\n`;\n\nexport const BoardIcon = styled(Box)`\n  input {\n    display: none;\n  }\n\n  input:checked + label {\n    opacity: 1;\n  }\n`;\n\nexport const BoardBg = styled(Box)`\n  input {\n    display: none;\n  }\n\n  input:checked + label {\n    opacity: 0.4;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -21px;\n  right: 0;\n  font-size: 13px;\n  font-weight: 400;\n  font-style: normal;\n  letter-spacing: -1%;\n  opacity: 0.9;\n  color: #e66666;\n`;\n\nexport const Btn = styled(Button)`\n  display: flex;\n  justify-content: center;\n  gap: 8px;\n  align-items: center;\n  /* background-color: */\n  padding: 14px 88px 14px 89px;\n  padding-top: 10px;\n  padding-bottom: 11px;\n  border-radius: 8px;\n  border: none;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  width: 100%;\n  /* color: */\n  font-family: inherit;\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  span {\n    line-height: 28px;\n    font-weight: 500;\n    font-size: 14px;\n  }\n`;\n\nexport const IconWrap = styled(Box)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  background-color: #161616;\n  border-radius: 6px;\n  margin: 0;\n`;\n","import bg1 from 'images/bgPreviews/bg1.png';\nimport bg2 from 'images/bgPreviews/bg2.png';\nimport bg3 from 'images/bgPreviews/bg3.png';\nimport bg4 from 'images/bgPreviews/bg4.png';\nimport bg5 from 'images/bgPreviews/bg5.png';\nimport bg6 from 'images/bgPreviews/bg6.png';\nimport bg7 from 'images/bgPreviews/bg7.png';\nimport bg8 from 'images/bgPreviews/bg8.png';\nimport bg9 from 'images/bgPreviews/bg9.png';\nimport bg10 from 'images/bgPreviews/bg10.png';\nimport bg11 from 'images/bgPreviews/bg11.png';\nimport bg12 from 'images/bgPreviews/bg12.png';\nimport bg13 from 'images/bgPreviews/bg13.png';\nimport bg14 from 'images/bgPreviews/bg14.png';\nimport bg15 from 'images/bgPreviews/bg15.png';\nimport bg16 from 'images/bgPreviews/bg16.png';\n\nexport const previews = [\n  bg1,\n  bg2,\n  bg3,\n  bg4,\n  bg5,\n  bg6,\n  bg7,\n  bg8,\n  bg9,\n  bg10,\n  bg11,\n  bg12,\n  bg13,\n  bg14,\n  bg15,\n  bg16,\n];\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Typography } from '@mui/material';\nimport { Icon } from 'components/Icons';\nimport { button, icon } from 'styles';\nimport {\n  BgLabel,\n  BoardBg,\n  BoardIcon,\n  Btn,\n  Error,\n  FormEl,\n  IconLabel,\n  Icontainer,\n  IconWrap,\n  ImageWrap,\n  Input,\n  Label,\n  Text,\n} from './BoardForm.styled';\nimport { previews } from 'helpers/getBgPreviews';\n\nconst iconNames = [\n  'project',\n  'star',\n  'loading',\n  'puzzle-piece',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string()\n    .required('Is Required')\n    .min(3, 'The title must contain at least 3 characters'),\n\n  icon: Yup.string().required('Is Required'),\n\n  background: Yup.string(),\n});\n\nconst initialValues = {\n  title: '',\n  icon: iconNames[0],\n  background: '0',\n};\n\nconst BoardForm = ({\n  onSubmitForm,\n  onCloseModal,\n  initData,\n  title,\n  type,\n  boardOperation,\n  id,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    // onSubmitForm(values);\n    const submitvalues = !id ? values : { ...values, id };\n    dispatch(boardOperation(submitvalues));\n\n    setSubmitting(false);\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Formik\n      initialValues={initData ? initData : initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      validationOnBlur={true}\n    >\n      {({ isSubmitting, dirty, values }) => (\n        <FormEl>\n          <Typography variant=\"h2\" mb={2}>\n            {title}\n          </Typography>\n          <Label>\n            <Input type=\"text\" name=\"title\" placeholder=\"Title\" autoFocus />\n            <Error name=\"title\" component=\"div\" />\n          </Label>\n\n          <Label>\n            <Text>Icons</Text>\n            <Icontainer role=\"group\">\n              {iconNames.map((icon, index) => (\n                <BoardIcon key={index}>\n                  <Input\n                    type=\"radio\"\n                    id={index}\n                    name=\"icon\"\n                    value={icon}\n                    checked={values.icon === icon}\n                  />\n                  <IconLabel htmlFor={index}>\n                    <Icon id={icon} sx={button.iconEl}></Icon>\n                  </IconLabel>\n                </BoardIcon>\n              ))}\n            </Icontainer>\n            <Error name=\"icon\" component=\"div\" />\n          </Label>\n\n          <Label>\n            <Text>Background</Text>\n            <ImageWrap>\n              {previews.map((preview, index) => (\n                <BoardBg key={index}>\n                  <Input\n                    type=\"radio\"\n                    id={`back${index}`}\n                    name=\"background\"\n                    value={index}\n                    checked={Number(values.background) === index}\n                  />\n                  <BgLabel\n                    htmlFor={`back${index}`}\n                    style={{ backgroundImage: `url(${preview})` }}\n                  />\n                </BoardBg>\n              ))}\n            </ImageWrap>\n\n            <Error name=\"background\" component=\"div\" />\n          </Label>\n          <Btn\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={isSubmitting || !dirty}\n          >\n            <IconWrap>\n              <Icon id={'plus'} sx={icon.svgAddCard} />\n            </IconWrap>\n            <span>{type}</span>\n          </Btn>\n        </FormEl>\n      )}\n    </Formik>\n  );\n};\n\nBoardForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default BoardForm;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useParams } from 'react-router-dom';\nimport Modal from 'components/Modal/Modal';\nimport BoardForm from 'components/BoardForm/BoardForm';\nimport { Icon } from 'components/Icons';\n\nimport {\n  getBoardById,\n  updateBoard,\n  deleteBoard,\n} from 'store/boards/operations';\n\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  IconButton,\n} from '@mui/material';\nimport { button, icon } from 'styles';\n\nexport const BoardNavList = ({ boards }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const { boardId } = useParams();\n\n  useEffect(() => {\n    if (boardId) dispatch(getBoardById(boardId));\n  }, [dispatch, boardId]);\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteBoard = () => {\n    if (window.confirm('Do you really want to delete board?')) {\n      dispatch(deleteBoard(boardId));\n    }\n  };\n\n  return (\n    <>\n      <List sx={button.boardListGroup}>\n        {boards.map(board => {\n          return (\n            <ListItem key={board._id} disablePadding>\n              <ListItemButton\n                component={NavLink}\n                to={board._id}\n                sx={button.boardListItem}\n              >\n                <Icon id={board.icon} />\n                <ListItemText primary={board.title} disableTypography />\n                {board._id === boardId && (\n                  <>\n                    <IconButton\n                      onClick={handleOpenModal}\n                      color=\"inherit\"\n                      size=\"small\"\n                      sx={[\n                        {\n                          '&:focus': {\n                            color: 'secondary',\n                            bgcolor: 'background.sideSecond',\n                          },\n                        },\n                      ]}\n                    >\n                      <Icon id={'pencil'} sx={icon.svgBoardNavList} />\n                    </IconButton>\n                    <IconButton\n                      onClick={handleDeleteBoard}\n                      size=\"small\"\n                      color=\"inherit\"\n                    >\n                      <Icon id={'trash'} sx={icon.svgBoardNavList} />\n                    </IconButton>\n                  </>\n                )}\n              </ListItemButton>\n            </ListItem>\n          );\n        })}\n      </List>\n\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <BoardForm\n          onCloseModal={handleCloseModal}\n          title=\"Edit board\"\n          type=\"Edit\"\n          boardOperation={updateBoard}\n          id={boardId}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Modal from 'components/Modal/Modal';\nimport BoardForm from 'components/BoardForm/BoardForm';\nimport { BoardNavList } from 'components/BoardsNavList';\nimport { Icon } from 'components/Icons';\nimport { addBoard } from 'store/boards/operations';\nimport { selectBoards } from 'store/boards/selectors';\n\nimport { Box, Typography, Button } from '@mui/material';\nimport { container, text, button, icon } from 'styles';\n\nexport const BoardNav = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const boards = useSelector(selectBoards);\n\n  return (\n    <Box sx={container.boardNav}>\n      <Typography component=\"h2\" variant=\"h4\" sx={text.boardNavTitle}>\n        My boards\n      </Typography>\n\n      <Box sx={button.createBoardWrapper}>\n        <Button\n          onClick={handleOpenModal}\n          variant=\"text\"\n          sx={button.createBoard}\n        >\n          Create a<br />\n          new board\n          <Box className=\"createBoardBox\" sx={button.createBoardBox}>\n            <Icon id={'plus'} sx={icon.svgPlus} />\n          </Box>\n        </Button>\n      </Box>\n\n      <BoardNavList boards={boards} />\n\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <BoardForm\n          onCloseModal={handleCloseModal}\n          title=\"New board\"\n          type=\"Create\"\n          boardOperation={addBoard}\n        />\n      </Modal>\n    </Box>\n  );\n};\n","import { useDispatch } from \"react-redux\";\nimport { needHelp } from 'store/boards/operations';\nimport { Formik, ErrorMessage } from 'formik';\n\nimport * as Yup from 'yup';\nimport Notiflix from \"notiflix\";\nimport { Typography, TextField, Button, FormControl, Box } from \"@mui/material\";\nimport {container} from 'styles';\n\nconst helpSchema = Yup.object().shape({\n    email: Yup.string()\n      .matches(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        {\n          message: 'Invalid Email',\n          excludeEmptyString: true,\n        }\n      )\n      .required('Please, enter your email'),\n    text: Yup.string()\n      .required('Please, enter your comment'),\n  });\n\nexport const NeedHelpForm = ({onCloseModal}) => {\n    const dispatch = useDispatch();\n\n     function handleSubmit(values, { resetForm }) {\n        const { email, text } = values;\n         dispatch(needHelp({ email, text }));\n         Notiflix.Notify.info('Thank you for your request, we will answer you as soon as possible.');\n         resetForm();\n         onCloseModal();\n    }\n\n    return (   \n      <Box sx={container.helpFormContainer}>\n      <Typography variant=\"h2\" mb={3}>\n        Need help\n      </Typography>\n      <Formik\n        initialValues={{ email: '', text: '' }}\n        validationSchema={helpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <form onSubmit={handleSubmit}>\n            <FormControl fullWidth>\n              <TextField\n                name=\"email\"\n                label=\"Email address\"\n                variant=\"outlined\"\n                sx={{mb: 1.75}}\n                value={values.email}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 12,\n                  marginTop: -10,\n                  marginBottom: 4,\n                }}\n              />\n              <TextField\n                name=\"text\"\n                label=\"Comment\"\n                variant=\"outlined\"\n                multiline\n                rows={6}\n                sx={{mb: 3}}\n                value={values.text}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                name=\"text\"\n                component=\"div\"\n                style={{\n                  color: 'red',\n                  fontSize: 12,\n                  marginTop: -20,\n                  marginBottom: 4,\n                }}\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n                sx={{ \n                  height: 49,\n                  textTransform: 'none',\n                 }}\n                type=\"submit\"\n                disabled={isSubmitting}\n              >\n                Send\n              </Button>\n            </FormControl>\n          </form>\n        )}\n      </Formik>\n    </Box>     \n    )\n}\n\n\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport TaskProImg from '../../images/taskPro-img.png';\nimport { NeedHelpForm } from './NeedHelpForm';\nimport { Box, Typography, Button, SvgIcon } from '@mui/material';\nimport { text, container } from 'styles';\nimport sprite from 'components/Icons/sprite.svg';\n\nexport const HelpBanner = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n  \n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <Box sx={container.helpBannerContainer}>\n      <Box\n        component=\"img\"\n        src={TaskProImg}\n        alt=\"TaskProHelperImg\"\n        sx={{\n          width: 54,\n          height: 78,\n          marginTop: '14px', \n          marginLeft: '14px', \n          marginBottom: '14px'}}\n      />\n      <Typography component=\"p\" variant='h4' sx={text.helpBannerText}>\n        If you need help with&nbsp;<br/>\n        <Typography component=\"span\" sx={text.accent}>TaskPro</Typography>, check out our\n        support resources or reach out to our customer support team.\n      </Typography>\n      <Button variant=\"text\" onClick={handleOpenModal}>\n        <SvgIcon sx={text.helpBannerIcon}>\n              <svg width=\"20px\" height=\"20px\" stroke=\"currentColor\" fill=\"none\">\n                <use href={sprite + '#icon-help-circle'} />\n              </svg>\n        </SvgIcon>\n        <Typography component=\"span\" sx={text.helpBannerButton}>Need help?</Typography>\n      </Button>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <NeedHelpForm \n            onCloseModal={handleCloseModal}\n            title=\"Need help\"\n            type=\"submit\"   \n          />\n        </Modal>  \n      )}\n    </Box>\n  );\n};\n","import { logout } from 'store/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nimport { Icon } from 'components/Icons';\nimport { Button } from '@mui/material';\nimport { button, icon } from 'styles';\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Button\n      onClick={() => dispatch(logout())}\n      variant=\"text\"\n      sx={button.logOut}\n    >\n      <Icon id={'login'} sx={icon.svgLogOut} />\n      Log out\n    </Button>\n  );\n};\n","import { Logo } from 'components/Logo';\nimport { BoardNav } from 'components/BoardNav';\nimport { HelpBanner } from 'components/HelpBanner';\nimport { LogOut } from 'components/LogOut';\n\nimport { Box } from '@mui/material';\n\nexport const SideBar = ({ contStyles }) => {\n  return (\n    <Box sx={contStyles}>\n      <Box>\n        <Logo />\n        <BoardNav />\n      </Box>\n      <Box>\n        <HelpBanner />\n        <LogOut />\n      </Box>\n    </Box>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { SideBar } from 'components/SideBar';\nimport { Icon } from 'components/Icons';\n\nimport { Box, Button, Drawer } from '@mui/material';\nimport { button, container, icon } from 'styles';\n\nexport const BurgerMenu = () => {\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const handleWindowResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (windowWidth >= 1440) {\n      setMenuVisible(false);\n    }\n  }, [windowWidth]);\n\n  return (\n    windowWidth <= 1440 && (\n      <Box sx={{ mr: 'auto' }}>\n        <Button onClick={toggleMenu} sx={button.burgerMenu}>\n          <Icon id={'burger-menu'} sx={icon.svgBurgerMenu}/>\n        </Button>\n        <Drawer anchor=\"left\" open={menuVisible} onClose={toggleMenu}>\n          <SideBar contStyles={container.sideBar} />\n        </Drawer>\n      </Box>\n    )\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\nimport { updateTheme } from 'store/auth/operations';\n\nimport { Box, Button, Menu, MenuItem } from '@mui/material';\nimport { button } from 'styles';\n\nexport const ThemePanel = () => {\n  const dispatch = useDispatch();\n  const userTheme = useSelector(selectTheme);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClick = theme => {\n    dispatch(updateTheme(theme));\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box>\n      <Button\n        variant=\"text\"\n        sx={button.theme}\n        id=\"theme-button\"\n        aria-controls={open ? 'theme-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleOpen}\n        // endIcon={<put icon component here />}\n      >\n        Theme\n      </Button>\n      <Menu\n        sx={button.themeMenu}\n        id=\"theme-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClick}\n        MenuListProps={{\n          'aria-labelledby': 'theme-button',\n        }}\n      >\n        <MenuItem\n          sx={button.themeItem}\n          selected={userTheme === 'light'}\n          onClick={() => {\n            handleClick('light');\n          }}\n        >\n          Light\n        </MenuItem>\n        <MenuItem\n          sx={button.themeItem}\n          selected={userTheme === 'dark'}\n          onClick={() => {\n            handleClick('dark');\n          }}\n        >\n          Dark\n        </MenuItem>\n        <MenuItem\n          sx={button.themeItem}\n          selected={userTheme === 'violet'}\n          onClick={() => {\n            handleClick('violet');\n          }}\n        >\n          Violet\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const EditWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: baseline;\n  width: 350px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\nexport const FormIcon = styled.span`\n  position: relative;\n  display: block;\n`;\nexport const ImgWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n  border-radius: 8px;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: 0px 0px 11px 0px rgba(82, 85, 188, 1);\n    transform: scale(1.1);\n  }\n\n  &:hover svg {\n    top: 50%;\n    box-shadow: 0px 0px 11px 0px rgba(82, 85, 188, 1);\n  }\n`;\nexport const Title = styled.h2`\n  font-family: Poppins;\n  font-size: 18px;\n  margin: 0;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  color: #161616;\n`;\nexport const Label = styled.label`\n  width: 68px;\n  height: 79px;\n  margin: 25px auto 0 auto;\n  cursor: pointer;\n`;\nexport const IconStyle = styled.svg`\n  width: 18px;\n  height: 18px;\n  color: #161616;\n`;\nexport const IconPlus = styled.svg`\n  position: absolute;\n  top: 98%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: all 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 24px;\n  height: 24px;\n  color: rgba(22, 22, 22, 1);\n`;\nexport const FormWrapper = styled.div`\n  position: relative;\n  margin-bottom: 14px;\n`;\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\nexport const FormSection = styled.div`\n  display: flex;\n  gap: 24px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FieldAvatar = styled.input`\n  display: none;\n`;\nexport const FormField = styled(Field)`\n  width: 352px;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color: #ffffff;\n  border: 1px solid #5255bc;\n  outline: none;\n  border-radius: 8px;\n\n  color: #161616;\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: #161616;\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\nexport const Eye = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  transform: translateY(-50%);\n\n  background-color: transparent;\n  border: none;\n  opacity: 0.4000000059604645;\n`;\nexport const FormSubmit = styled.button`\n  width: 352px;\n  height: 49px;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: #5255bc;\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: #ffffff;\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from 'store/auth/selectors';\nimport { updateProfile } from 'store/auth/operations';\nimport { Icon } from 'components/Icons';\n\nimport {\n  EditWrapper,\n  IconStyle,\n  Title,\n  FormWrapper,\n  ErrorSection,\n  FormSubmit,\n  FormField,\n  Img,\n  FieldAvatar,\n  FormSection,\n  ImgWrapper,\n  IconPlus,\n  Label,\n  FormIcon,\n  Eye,\n} from './EditProfile.styled';\n\nconst UserSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Name must be at most 32 characters'),\n  email: Yup.string().email('Invalid email'),\n  password: Yup.string()\n    .trim()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must be at most 64 characters'),\n  // .matches(\n  //   /^(?=.*[a-z])(?=.*[A-Z])[a-zA-Z\\d@$!%*?&]+$/,\n  //   'Invalid password format'\n  // ),\n});\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\nconst EditProfile = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const [password, setPassword] = useState('password');\n  const [currentImage, setCurrentImage] = useState(user.avatarURL);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { avatarURL, name, email, password } = values;\n    const formData = new FormData();\n    if (avatarURL) {\n      formData.append('avatarURL', avatarURL);\n    }\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('password', password);\n\n    dispatch(updateProfile(formData));\n    resetForm();\n    onCloseModal();\n  };\n  const handleClickShowPassword = () => setPassword(show => !show);\n  function handleFileChange(event) {\n    const file = event;\n    if (!file) {\n      return;\n    }\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      setCurrentImage(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  }\n  return (\n    <EditWrapper>\n      <Title>Edit profile</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={UserSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n        <FormSection>\n          <Label htmlFor=\"avatarURL\">\n            <ImgWrapper>\n              {currentImage ? (\n                <Img src={currentImage} alt=\"User picture\" />\n              ) : (\n                <IconStyle>\n                  <Icon id={'user'} />\n                </IconStyle>\n              )}\n              <IconPlus aria-label=\"add\">\n                <Icon id={'plus'} />\n              </IconPlus>\n            </ImgWrapper>\n          </Label>\n          <FieldAvatar\n            id=\"avatarURL\"\n            type=\"file\"\n            name=\"avatarURL\"\n            onChange={event => {\n              handleFileChange(event.currentTarget.files[0]);\n            }}\n          />\n          <ErrorSection name=\"name\" component=\"div\" />\n\n          <FormWrapper>\n            <ErrorSection name=\"name\" component=\"div\" />\n            <FormField\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder={user.name}\n            />\n          </FormWrapper>\n          <FormWrapper>\n            <ErrorSection name=\"email\" component=\"div\" />\n            <FormField\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder={user.email}\n            />\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormIcon>\n              <ErrorSection name=\"password\" component=\"div\" />\n              <FormField\n                type={password}\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Enter your password\"\n              />\n              <Eye type=\"button\" onClick={handleClickShowPassword}>\n                {password ? (\n                  <IconPlus>\n                    <Icon id={'eye'} />\n                  </IconPlus>\n                ) : (\n                  <IconPlus>\n                    <Icon id={'eye-off'} />\n                  </IconPlus>\n                )}\n              </Eye>\n            </FormIcon>\n          </FormWrapper>\n\n          <FormSubmit type=\"submit\">Send</FormSubmit>\n        </FormSection>\n        </Form>\n      </Formik>\n    </EditWrapper>\n  );\n};\n\nexport default EditProfile;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'store/auth/selectors';\n\nimport Modal from 'components/Modal/Modal';\nimport defaultAvatarViolet from '../../images/default-avatar-violet.png';\nimport defaultAvatarLight from '../../images/default-avatar-light.png';\nimport defaultAvatarDark from '../../images/default-avatar-dark.png';\nimport EditProfile from 'components/EditProfile/EditProfile';\n// import EditProfileTest from 'components/EditProfile/EditProfileTest';\n\nimport { Button, Box } from '@mui/material';\nimport { button } from 'styles';\n\nexport const UserProfile = () => {\n  const [showModal, setShowModal] = useState(false);\n  const { name, avatarURL, theme } = useSelector(selectUser);\n\n  let avatar = avatarURL;\n  if (!avatar) {\n    switch (theme) {\n      case 'light':\n        avatar = defaultAvatarLight;\n        break;\n      case 'dark':\n        avatar = defaultAvatarDark;\n        break;\n      default:\n        avatar = defaultAvatarViolet;\n        break;\n    }\n  }\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"text\" sx={button.profile} onClick={handleOpenModal}>\n        {name}\n        <Box\n          component=\"img\"\n          sx={button.profileImg}\n          src={avatar}\n          alt=\"User avatar\"\n        />\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <EditProfile onCloseModal={handleCloseModal} type=\"Submit\" />\n        {/* <EditProfileTest onCloseModal={handleCloseModal} type=\"Submit\"/> */}\n      </Modal>\n    </>\n  );\n};\n","import { BurgerMenu } from 'components/BurgerMenu';\nimport { ThemePanel } from 'components/ThemePanel';\nimport { UserProfile } from 'components/UserProfile';\n\nimport { Box } from '@mui/material';\nimport { container } from 'styles';\n\nexport const TopBar = () => {\n  return (\n    <Box sx={container.topBar}>\n      <BurgerMenu />\n      <ThemePanel />\n      <UserProfile />\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { TopBar } from 'components/TopBar';\nimport { SideBar } from 'components/SideBar';\n\nimport { Container, Box } from '@mui/material';\nimport { container } from 'styles';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const TasksLayout = () => {\n  return (\n    <Container sx={container.layout}>\n      <header>\n        <TopBar />\n      </header>\n      <Box component=\"main\" sx={container.main}>\n        <SideBar contStyles={container.sideBarDesktop} />\n        <Suspense fallback={<Loader/>}>\n          <Outlet />\n        </Suspense>\n      </Box>\n    </Container>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TasksLayout } from 'components/TasksLayout';\nimport { getAllBoards } from 'store/boards/operations';\n\nconst TasksPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllBoards());\n  }, [dispatch]);\n  \n  return <TasksLayout />;\n};\n\nexport default TasksPage;\n"],"names":["Logo","userTheme","useSelector","selectTheme","logoColor","Box","sx","logo","color","size","Typography","component","FormEl","styled","Form","Input","Field","Text","Label","Icontainer","IconLabel","ImageWrap","BgLabel","BoardIcon","BoardBg","Error","ErrorMessage","Btn","Button","IconWrap","previews","iconNames","validationSchema","Yup","shape","title","required","min","icon","background","initialValues","onSubmitForm","onCloseModal","initData","type","boardOperation","id","dispatch","useDispatch","onSubmit","values","setSubmitting","resetForm","submitvalues","validationOnBlur","isSubmitting","dirty","variant","mb","name","placeholder","autoFocus","role","map","index","value","checked","htmlFor","button","preview","Number","style","backgroundImage","disabled","BoardNavList","boards","useState","showModal","setShowModal","boardId","useParams","useEffect","getBoardById","handleOpenModal","handleCloseModal","handleDeleteBoard","window","confirm","deleteBoard","List","board","ListItem","disablePadding","ListItemButton","NavLink","to","_id","ListItemText","primary","disableTypography","IconButton","onClick","bgcolor","Modal","isOpenModal","updateBoard","BoardNav","selectBoards","container","text","className","addBoard","helpSchema","email","matches","message","excludeEmptyString","NeedHelpForm","needHelp","Notiflix","handleChange","handleSubmit","FormControl","fullWidth","TextField","label","onChange","fontSize","marginTop","marginBottom","multiline","rows","height","textTransform","HelpBanner","src","alt","width","marginLeft","SvgIcon","stroke","fill","href","sprite","LogOut","logout","SideBar","contStyles","BurgerMenu","menuVisible","setMenuVisible","innerWidth","windowWidth","setWindowWidth","toggleMenu","handleWindowResize","addEventListener","removeEventListener","mr","Drawer","anchor","open","onClose","ThemePanel","anchorEl","setAnchorEl","Boolean","handleClick","theme","updateTheme","undefined","event","currentTarget","Menu","MenuListProps","MenuItem","selected","EditWrapper","Img","FormIcon","ImgWrapper","Title","IconStyle","IconPlus","FormWrapper","ErrorSection","FormSection","FieldAvatar","FormField","Eye","FormSubmit","UserSchema","max","password","trim","user","selectUser","setPassword","avatarURL","currentImage","setCurrentImage","formData","FormData","append","updateProfile","file","reader","FileReader","onload","e","target","result","readAsDataURL","handleFileChange","files","show","UserProfile","avatar","TopBar","TasksLayout","Container","Suspense","fallback","Loader","getAllBoards"],"sourceRoot":""}