{"version":3,"file":"static/js/390.6ca5bf6e.chunk.js","mappings":"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","sources":["components/AddColumn/EditColumnModal.jsx","components/Column/ColumnHeader.jsx","helpers/priorityColorSwitcher.js","components/Column/IconBtn.jsx","components/FormsUI/TextField/index.js","components/FormsUI/SubmitButton/index.js","components/FormsUI/RadioButtons/PriorityRadioBtn.jsx","components/FormsUI/DatePicker/DatePicker.jsx","components/AddCardForm/AddCardForm.jsx","components/Column/Task.jsx","store/filters/selectors.js","components/Column/TaskList.jsx","components/Column/Column.jsx","components/AddColumn/AddColumnButton.styled.js","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","components/Filter/CustomControlLabel.jsx","components/Filter/FilterBar.jsx","components/Filter/FilterBtn.jsx","pages/BoardPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\n\nimport { updateColumn } from 'store/boards/operations';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, onCloseModal }) => { \n const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(updateColumn({...values, columnId}));\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={{title}}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from 'store/boards/operations';\n\nimport { Icon } from 'components/Icons';\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from 'components/AddColumn/EditColumnModal';\n\nimport { Card, CardHeader, IconButton } from '@mui/material';\nimport { card } from 'styles';\n\nconst ColumnHeader = ({ title, columnId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    if (window.confirm(`Do you really want to delete column ${title}?`)) {\n      dispatch(deleteColumn(columnId));\n    }\n  };\n\n  return (\n    <Card sx={card.header}>\n      <CardHeader\n        title={title}\n        sx={card.headerText}\n        disableTypography\n        action={\n          <div>\n            <IconButton onClick={handleOpenModal}>\n              <Icon id={'pencil'} />\n            </IconButton>\n            <IconButton onClick={handleDeleteColumn}>\n              <Icon id={'trash'} />\n            </IconButton>\n          </div>\n        }\n      />\n\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <EditColumnModal\n            onCloseModal={handleCloseModal}\n            columnId={columnId}\n            title={title}\n            type=\"Submit\"\n          />\n        </Modal>\n      )}\n    </Card>\n  );\n};\nexport default ColumnHeader;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'high':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { Icon } from 'components/Icons';\n\nconst IconBtnRoot = styled(ButtonBase)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n  '& svg': {\n    stroke: theme.palette.text.sideSecond,\n    transition: 'stroke 0.3s',\n  },\n\n  '&:hover': {\n    color: theme.palette.text.sideSecond,\n    '& svg': {\n      stroke: theme.palette.text.primary,\n    },\n  },\n  '& .MuiTouchRipple-root': {\n    display: 'none',\n  },\n}));\n\nconst IconBtn = ({ onClick, iconId }) => {\n  return (\n    <IconBtnRoot onClick={onClick}>\n      <Icon id={iconId} />\n    </IconBtnRoot>\n  );\n};\n\nexport default IconBtn;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n\nconst TextFieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n\n  return <TextField {...configTextfield} />;\n};\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\n// import { Icon } from 'components/Icons';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\n\nconst SubmitButton = ({ children, ...otherProps }) => {\n  const { submitForm } = useFormikContext();\n  const handleSubmit = () => {\n    submitForm();\n  };\n  const configButton = {\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n  const typographyProps = {\n    style: {\n      textTransform: 'none',\n    },\n  };\n  const iconStyle = {\n    fill: 'white',\n    fontSize: '28px',\n  };\n  return (\n    <Button startIcon={<AddBoxIcon style={iconStyle} />} {...configButton}>\n      <span {...typographyProps}>{children}</span>\n    </Button>\n  );\n};\nexport default SubmitButton;\n","import React from 'react';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\n\nconst PrIcon = styled('span')(({ btncolor }) => ({\n  borderRadius: '50%',\n  width: 14,\n  height: 14,\n  backgroundColor: btncolor || '#BEDBB0',\n}));\n\nconst PrCheckedIcon = styled(PrIcon)(({ btncolor }) => ({\n  backgroundColor: 'transparent',\n  border: `1px solid ${btncolor || '#BEDBB0'}`,\n  position: 'relative',\n  '&:before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'block',\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: btncolor || '#BEDBB0',\n    content: '\"\"',\n  },\n}));\n\nconst PriorityRadioBtn = props => {\n  const btncolor = priorityColorSwitcher(props.priority);\n\n  return (\n    <Radio\n      disableRipple\n      icon={<PrIcon btncolor={btncolor} />}\n      checkedIcon={<PrCheckedIcon btncolor={btncolor} />}\n      {...props}\n    />\n  );\n};\nexport default PriorityRadioBtn;\n","import React from 'react';\nimport { TextField } from '@mui/material';\nimport { useField } from 'formik';\n\nconst DatePicker = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n  const configDatePicker = {\n    ...field,\n    ...otherProps,\n    type: 'date',\n    variant: 'standard',\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true,\n    },\n  };\n  if (meta && meta.touched && meta.error) {\n    configDatePicker.error = true;\n    configDatePicker.helperText = meta.error;\n  }\n  return <TextField {...configDatePicker} />;\n};\nexport default DatePicker;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Container } from '@mui/material';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Typography, RadioGroup, FormLabel, FormControl } from '@mui/material';\nimport DatePicker from 'components/FormsUI/DatePicker/DatePicker';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  deadline: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  deadline: Yup.date().required(),\n});\n\nconst AddCardForm = ({\n  parentColumn,\n  onCloseModal,\n  formTitle,\n  buttonTitle,\n  taskOperation,\n  taskId,\n  initData,\n}) => {\n  const dispatch = useDispatch();\n  const [priority, setPriority] = useState('without');\n\n  const handleChangePriority = event => {\n    setPriority(event.target.value);\n  };\n\n  const handleSubmit = values => {\n    // changing the deadline to the needed format\n    const formattedDate = values.deadline.split('-').reverse().join('-');\n\n    dispatch(\n      taskOperation({\n        ...values,\n        parentColumn,\n        priority,\n        taskId,\n        deadline: formattedDate,\n      })\n    );\n    //setSubmitting(false);\n    // resetForm();\n    onCloseModal();\n  };\n  return (\n    <Container>\n      <Formik\n        initialValues={initData ? initData : initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Typography variant=\"h2\" component=\"h2\" mb={3}>\n            {formTitle}\n          </Typography>\n          <Textfield\n            name=\"title\"\n            label=\"Title\"\n            sx={{\n              marginBottom: '14px',\n            }}\n          />\n          <Textfield\n            name=\"description\"\n            label=\"Description\"\n            multiline={true}\n            rows={6}\n            sx={{\n              marginBottom: '24px',\n            }}\n          />\n\n          <FormControl>\n            <FormLabel\n              id=\"priority-radios\"\n              sx={{\n                fontSize: 12,\n                lineHeight: 1.5,\n                letterSpacing: '-0.02em',\n                color: 'GrayText',\n              }}\n            >\n              Label color\n            </FormLabel>\n            <RadioGroup\n              sx={{\n                marginBottom: '14px',\n              }}\n              row\n              defaultValue=\"low\"\n              aria-labelledby=\"priority-radios\"\n              name=\"priority\"\n              value={priority}\n              onChange={handleChangePriority}\n            >\n              <FormControlLabel\n                value=\"low\"\n                control={<PriorityRadioBtn priority=\"low\" />}\n              />\n              <FormControlLabel\n                value=\"medium\"\n                control={\n                  <PriorityRadioBtn priority=\"medium\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"high\"\n                control={\n                  <PriorityRadioBtn priority=\"high\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"without\"\n                control={\n                  <PriorityRadioBtn priority=\"without\" sx={{ ml: '-14px' }} />\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          <Typography variant=\"body2\" component=\"h4\" mb={0.5}>\n            Deadline\n          </Typography>\n          <DatePicker\n            name=\"deadline\"\n            sx={{\n              marginBottom: '40px',\n            }}\n          />\n\n          <SubmitButton>{buttonTitle}</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default AddCardForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateTask, deleteTask } from 'store/boards/operations';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport IconBtn from './IconBtn';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\n\nimport { Card, Typography, Stack, Box } from '@mui/material';\nimport { card } from 'styles';\n\nconst Task = ({ name, description, priority, deadline, taskId }) => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteTask = () => {\n    if (window.confirm(`Do you really want to delete task ${name}?`)) {\n      dispatch(deleteTask(taskId));\n    }\n  };\n\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyles = {\n    textTransform: 'capitalize',\n    '&::before': {\n      ...card.priorityCircle,\n      backgroundColor: priorityColor,\n    },\n  };\n  const handleIconClick = () => {};\n\n  return (\n    <Card\n      sx={{\n        ...card.task,\n        borderLeft: `4px solid ${priorityColor}`,\n      }}\n    >\n      <Box>\n        <Box sx={card.taskMainBox}>\n          <Typography variant=\"h5\" component=\"h3\" mb={1}>\n            {name}\n          </Typography>\n          <Typography variant=\"body2\" sx={card.taskDescription}>\n            {description}\n          </Typography>\n        </Box>\n\n        {/* components below devider       */}\n\n        <Box>\n          <Stack direction=\"row\">\n            {/* priority container      */}\n            <Stack\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-start\"\n              spacing={0}\n              sx={{ marginRight: '14px' }}\n            >\n              <Box>\n                <Typography variant=\"caption\" color=\"text.sideSecond\">\n                  Priority\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant=\"h6\" sx={priorityStyles}>\n                  {priority}\n                </Typography>\n              </Box>\n            </Stack>\n\n            {/* deadline container     */}\n            <Stack\n              flexGrow={1}\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-start\"\n              spacing={0}\n            >\n              <Box>\n                <Typography variant=\"caption\" color=\"text.sideSecond\">\n                  Deadline\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant=\"h6\" color=\"text.primary\">\n                  {deadline}\n                </Typography>\n              </Box>\n            </Stack>\n\n            {/* icons container     */}\n\n            <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-end\"\n              spacing={1}\n            >\n              <Box>\n                <IconBtn onClick={handleIconClick} iconId=\"alert\" />\n              </Box>\n              <Box>\n                <IconBtn onClick={handleIconClick} iconId=\"move\" />\n              </Box>\n\n              <Box>\n                <IconBtn onClick={openModalHandler} iconId=\"pencil\" />\n              </Box>\n\n              <Box>\n                <IconBtn onClick={handleDeleteTask} iconId=\"trash\" />\n              </Box>\n            </Stack>\n          </Stack>\n        </Box>\n      </Box>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm\n          onCloseModal={closeModalHandler}\n          taskId={taskId}\n          formTitle={'Edit card'}\n          buttonTitle={'Edit'}\n          taskOperation={updateTask}\n          initData={{ title: name, description, priority, deadline }}\n        />\n      </Modal>\n    </Card>\n  );\n};\nexport default Task;\n","export const selectPrioFilter = state => state.filters.prio;\n","import { Stack } from '@mui/material';\nimport Task from './Task';\nimport { useSelector } from 'react-redux';\nimport { selectPrioFilter } from 'store/filters/selectors';\n\nconst TaskList = ({ cards }) => {\n  const prio = useSelector(selectPrioFilter);\n  const filteredCards =\n    prio === 'all' ? cards : cards.filter(card => card.priority === prio);\n\n  return (\n    <Stack\n      sx={{\n        // overflowY: 'auto',\n        // overflowX: 'hidden',\n        gap: '8px',\n      }}\n    >\n      {filteredCards &&\n        filteredCards.map(card => {\n          return (\n            <Task\n              key={card._id}\n              taskId={card._id}\n              name={card.title}\n              description={card.description}\n              priority={card.priority}\n              deadline={card.deadline}\n            />\n          );\n        })}\n    </Stack>\n  );\n};\nexport default TaskList;\n","import { useState } from 'react';\nimport { addTask } from 'store/boards/operations';\nimport ColumnHeader from './ColumnHeader';\nimport TaskList from './TaskList';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\n\nimport { Stack, Button } from '@mui/material';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport { card, button } from 'styles';\n\nconst Column = ({ column }) => {\n  const [showModal, setShowModal] = useState(false);\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Stack sx={card.column}>\n      <ColumnHeader title={column.title} columnId={column._id} />\n      <TaskList cards={column.tasks} />\n      <Button\n        variant=\"contained\"\n        sx={button.addCard}\n        startIcon={<AddBoxIcon />}\n        onClick={openModalHandler}\n      >\n        Add another card\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm\n          onCloseModal={closeModalHandler}\n          parentColumn={column._id}\n          formTitle={'Add card'}\n          buttonTitle={'Add'}\n          taskOperation={addTask}\n        />\n      </Modal>\n    </Stack>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  /* position: absolute;\n  top: 80px;\n  left: 650px; */\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: #5255bc;\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconStyle = styled.svg`\n  width: 14px;\n  height: 14px;\n  color: #ffffff;\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addColumn } from 'store/boards/operations';\n\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n// import { Icon } from 'components/Icons';\nimport { Box, FormControl, Typography, Button, SvgIcon, TextField } from '@mui/material';\nimport {container, button, form} from 'styles';\nimport sprite from 'components/Icons/sprite.svg';\n\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal }) => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n\n  const parentBoard = boardId;\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log({...values, parentBoard})\n    dispatch(addColumn({ ...values, parentBoard }));\n    resetForm();\n    onCloseModal();\n  };\n  return (\n    <Box sx={container.addColumnContainer}>\n      <Typography variant='h2' mb={3}>Add column</Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n      {({ values, handleChange, handleSubmit }) => (\n        <Form onSubmit={handleSubmit}>\n          <FormControl fullWidth>          \n            <TextField\n              label=\"Title\"\n              variant=\"outlined\"\n              type=\"text\"\n              id=\"text\"\n              name=\"title\"\n              sx={{mb: 3}}\n              value={values.title}\n              onChange={handleChange}\n            />\n            <ErrorMessage\n                name=\"Title\"\n                component=\"div\"\n                style={{ color: 'red',fontSize: 12 }}\n              />                  \n          </FormControl>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              sx={form.button}\n              type=\"submit\"             \n            >\n              <Box sx={button.boxIconPlus}>\n                  <SvgIcon sx={button.svgIconPlus}>\n                    <svg stroke=\"currentColor\">\n                            <use href={sprite + '#icon-plus'} />\n                    </svg>             \n                  </SvgIcon>\n              </Box>                 \n              Add\n            </Button>\n        </Form>\n      )}\n      </Formik>\n    </Box>     \n  );\n};\n\nexport default AddColumnModal;\n\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Button, IconStyle, IconWrapper, Text } from './AddColumnButton.styled';\nimport AddColumnModal from './AddColumnModal';\nimport { Icon } from 'components/Icons';\n\nconst AddColumnButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <>\n      <Button type=\"button\" onClick={handleOpenModal}>\n        <IconWrapper>\n          <IconStyle>\n            <Icon id={'plus'} />\n          </IconStyle>\n        </IconWrapper>\n        <Text>Add another column</Text>\n      </Button>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <AddColumnModal\n            onCloseModal={handleCloseModal}\n            title=\"New board\"\n            type=\"Submit\"\n            \n          />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default AddColumnButton;\n","import { FormControlLabel, useRadioGroup } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\n\nconst StyledFormControlLabel = styled(props => <FormControlLabel {...props} />)(\n  ({ _, checked }) => {\n    const userTheme = useSelector(selectTheme);\n    const colorChecked = userTheme === 'dark' ? '#FFF' : '#161616';\n    return {\n      '.MuiFormControlLabel-label': checked && {\n        // Change color here\n        color: colorChecked,\n      },\n    };\n  }\n);\n\nexport const CustomControlLabel = props => {\n  // MUI UseRadio Group\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n};\n","import { useEffect, useState } from 'react';\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Typography,\n} from '@mui/material';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport { CustomControlLabel } from './CustomControlLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPrioFilter } from 'store/filters/filtersSlice';\nimport { selectPrioFilter } from 'store/filters/selectors';\n\nconst ctrlLabelStyles = {\n  color: 'text.filterRadio',\n  fontFamily: 'Poppins',\n  fontSize: 12,\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  letterSpacing: -0.24,\n};\n\nexport const FilterBar = () => {\n  const currentPrio = useSelector(selectPrioFilter);\n  const [filter, setFilter] = useState(currentPrio);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPrioFilter(filter));\n  }, [dispatch, filter]);\n\n  return (\n    <Container\n      sx={{\n        width: 300,\n        height: 234,\n        p: 0,\n      }}\n    >\n      <Typography\n        sx={{\n          borderBottom: 1,\n          borderColor: 'rgba(255, 255, 255, 0.50)',\n          paddingBottom: 1.75,\n          marginBottom: 1.75,\n        }}\n        variant=\"h2\"\n        component=\"h2\"\n      >\n        Filters\n      </Typography>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: 14,\n        }}\n      >\n        <FormControl>\n          <FormLabel\n            sx={{\n              color: 'text.primary',\n              fontWeight: 500,\n              fontStyle: 'normal',\n              letterSpacing: '-0.28px',\n              '&.Mui-focused': {\n                color: 'text.primary',\n              },\n            }}\n          >\n            Label color\n          </FormLabel>\n          <RadioGroup\n            value={filter}\n            onChange={e => {\n              setFilter(e.target.value);\n            }}\n          >\n            <CustomControlLabel\n              label=\"Without priority\"\n              value=\"without\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"without\" />}\n            />\n            <CustomControlLabel\n              label=\"Low\"\n              value=\"low\"\n              sx={{ ...ctrlLabelStyles }}\n              control={<PriorityRadioBtn priority=\"low\" />}\n            />\n            <CustomControlLabel\n              label=\"Medium\"\n              value=\"medium\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"medium\" />}\n            />\n            <CustomControlLabel\n              label=\"High\"\n              value=\"high\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"high\" />}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          variant=\"text\"\n          sx={{\n            ...ctrlLabelStyles,\n            textDecorationLine: 'underline',\n            textTransform: 'none',\n            height: 18,\n          }}\n          style={\n            filter === 'all'\n              ? { pointerEvents: 'none', textDecoration: 'none' }\n              : null\n          }\n          onClick={() => {\n            setFilter('all');\n          }}\n          type=\"button\"\n        >\n          <Typography>{filter === 'all' ? 'Shown all' : 'Show all'}</Typography>\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { FilterBar } from './FilterBar';\nimport { Box, Button, SvgIcon, Typography } from '@mui/material';\nimport { Icon } from 'components/Icons';\n\nexport const FilterBtn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Button\n        sx={{\n          textTransform: 'none',\n          display: 'flex',\n          gap: '8px',\n          alignItems: 'center',\n        }}\n        type=\"button\"\n        onClick={handleOpenModal}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: '8px',\n            transition: 'all 250ms linear',\n            cursor: 'pointer',\n            '&:hover': {\n              transform: 'scale(1.1)',\n            },\n          }}\n        >\n          <SvgIcon\n            sx={{\n              width: '14px',\n              height: '14px',\n              color: 'text.primary',\n            }}\n          >\n            <Icon id={'filter'} />\n          </SvgIcon>\n        </Box>\n        <Typography\n          sx={{\n            color: 'text.primary',\n          }}\n        >\n          Filters\n        </Typography>\n      </Button>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <FilterBar />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport { selectBoard, selectColumns } from 'store/boards/selectors';\n\nimport { Box, Typography } from '@mui/material';\nimport { container, text } from 'styles';\nimport { FilterBtn } from 'components/Filter';\n\nconst BoardPage = () => {\n  const board = useSelector(selectBoard);\n  const columns = useSelector(selectColumns);\n\n  return (\n    <Box sx={container.board}>\n      <Box sx={container.boardInner}>\n        <Box sx={container.boardTopBar}>\n          <Typography component=\"h2\" variant=\"h3\" sx={text.boardTitle}>\n            {board.title}\n          </Typography>\n\n          <FilterBtn />\n        </Box>\n\n        <Box sx={container.columns}>\n          <Box sx={container.columnsInner}>\n            {columns.map(column => {\n              return <Column key={column._id} column={column} />;\n            })}\n          </Box>\n          <AddColumnButton />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BoardPage;\n"],"names":["validationSchema","Yup","shape","title","required","columnId","onCloseModal","dispatch","useDispatch","Section","SectionTitle","initialValues","onSubmit","values","resetForm","updateColumn","ModalForm","FormWrapper","ErrorSection","name","component","TitleInput","type","id","placeholder","AuthFormSubmitButton","ButtonPlus","PlusIcon","useState","showModal","setShowModal","handleCloseModal","Card","sx","card","CardHeader","disableTypography","action","IconButton","onClick","window","confirm","deleteColumn","Modal","isOpenModal","priority","priorityColor","IconBtnRoot","styled","ButtonBase","theme","padding","margin","stroke","palette","text","sideSecond","transition","color","primary","display","iconId","otherProps","useField","field","meta","configTextfield","fullWidth","variant","touched","error","helperText","TextField","children","submitForm","useFormikContext","configButton","Button","startIcon","AddBox","style","fill","fontSize","textTransform","PrIcon","borderRadius","width","height","backgroundColor","btncolor","PrCheckedIcon","border","position","top","left","transform","content","props","priorityColorSwitcher","Radio","disableRipple","icon","checkedIcon","configDatePicker","InputLabelProps","shrink","description","deadline","parentColumn","formTitle","buttonTitle","taskOperation","taskId","initData","setPriority","Container","formattedDate","split","reverse","join","Typography","mb","label","marginBottom","multiline","rows","FormControl","FormLabel","lineHeight","letterSpacing","RadioGroup","row","defaultValue","value","onChange","event","target","FormControlLabel","control","ml","closeModalHandler","priorityStyles","handleIconClick","borderLeft","Box","Stack","direction","justifyContent","alignItems","spacing","marginRight","flexGrow","deleteTask","updateTask","selectPrioFilter","state","filters","prio","cards","useSelector","filteredCards","filter","gap","map","_id","column","tasks","button","addTask","IconWrapper","IconStyle","Text","boardId","useParams","parentBoard","container","console","log","addColumn","handleChange","handleSubmit","form","SvgIcon","href","sprite","StyledFormControlLabel","_","checked","userTheme","selectTheme","CustomControlLabel","radioGroup","useRadioGroup","ctrlLabelStyles","fontFamily","fontStyle","fontWeight","FilterBar","currentPrio","setFilter","useEffect","setPrioFilter","p","borderBottom","borderColor","paddingBottom","marginTop","e","textDecorationLine","pointerEvents","textDecoration","FilterBtn","cursor","board","selectBoard","columns","selectColumns"],"sourceRoot":""}