{"version":3,"file":"static/js/454.575a22c8.chunk.js","mappings":"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","sources":["components/AddColumn/AddColumnModal.styled.js","components/AddColumn/EditColumnModal.jsx","components/Column/ColumnHeader.jsx","helpers/priorityColorSwitcher.js","components/Column/TruncatedText.jsx","components/Column/IconBtn.jsx","components/FormsUI/TextField/index.js","components/FormsUI/SubmitButton/index.js","components/FormsUI/RadioButtons/PriorityRadioBtn.jsx","components/FormsUI/DatePicker/DatePicker.jsx","components/AddCardForm/AddCardForm.jsx","components/Column/Task.jsx","components/Column/TaskList.jsx","components/Column/Column.jsx","components/AddColumn/AddColumnButton.styled.js","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","components/Filter/CustomControlLabel.jsx","components/Filter/FilterBar.jsx","components/Filter/FilterBtn.jsx","pages/BoardPage.jsx"],"sourcesContent":["\n\nimport styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: #161616;\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color:#fff;\n  border: 1px solid #5255BC;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color:#161616;\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: #161616;\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: #5255BC;\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: #fff;\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: #fff;\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616;\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\n\nimport { updateColumn } from 'store/boards/operations';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, onCloseModal }) => { \n const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(updateColumn({...values, columnId}));\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={{title}}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from 'store/boards/operations';\n\nimport { Icon } from 'components/Icons';\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from 'components/AddColumn/EditColumnModal';\nimport { Card, CardHeader, IconButton } from '@mui/material';\n\nconst ColumnHeader = ({ title, columnId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    if (window.confirm(`Do you really want to delete column ${title}?`)) {\n      dispatch(deleteColumn(columnId));\n    }\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader\n          title={title}\n          action={\n            <div>\n              <IconButton onClick={handleOpenModal}>\n                <Icon id={'pencil'} />\n              </IconButton>\n              <IconButton onClick={handleDeleteColumn}>\n                <Icon id={'trash'} />\n              </IconButton>\n            </div>\n          }\n        />\n\n        {showModal && (\n          <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n            <EditColumnModal\n              onCloseModal={handleCloseModal}\n              columnId={columnId}\n              title={title}\n              type=\"Submit\"\n            />\n          </Modal>\n        )}\n      </Card>\n    </div>\n  );\n};\nexport default ColumnHeader;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'high':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","import { Typography } from '@mui/material';\n\nconst TruncatedText = ({ text }) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.cardSecond\"\n      sx={{\n        display: '-webkit-box',\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: 'vertical',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      }}\n    >\n      {text}\n    </Typography>\n  );\n};\nexport default TruncatedText;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { Icon } from 'components/Icons';\n\nconst IconBtnRoot = styled(ButtonBase)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n  '& svg': {\n    stroke: theme.palette.text.sideSecond,\n    transition: 'stroke 0.3s',\n  },\n\n  '&:hover': {\n    color: theme.palette.text.sideSecond,\n    '& svg': {\n      stroke: theme.palette.text.primary,\n    },\n  },\n  '& .MuiTouchRipple-root': {\n    display: 'none',\n  },\n}));\n\nconst IconBtn = ({ onClick, iconId }) => {\n  return (\n    <IconBtnRoot onClick={onClick}>\n      <Icon id={iconId} />\n    </IconBtnRoot>\n  );\n};\n\nexport default IconBtn;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n\nconst TextFieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n\n  return <TextField {...configTextfield} />;\n};\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\n// import { Icon } from 'components/Icons';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\n\nconst SubmitButton = ({ children, ...otherProps }) => {\n  const { submitForm } = useFormikContext();\n  const handleSubmit = () => {\n    submitForm();\n  };\n  const configButton = {\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n  const typographyProps = {\n    style: {\n      textTransform: 'none',\n    },\n  };\n  const iconStyle = {\n    fill: 'white',\n    fontSize: '28px',\n  };\n  return (\n    <Button startIcon={<AddBoxIcon style={iconStyle} />} {...configButton}>\n      <span {...typographyProps}>{children}</span>\n    </Button>\n  );\n};\nexport default SubmitButton;\n","import React from 'react';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\n\nconst PrIcon = styled('span')(({ btncolor }) => ({\n  borderRadius: '50%',\n  width: 14,\n  height: 14,\n  backgroundColor: btncolor || '#BEDBB0',\n}));\n\nconst PrCheckedIcon = styled(PrIcon)(({ btncolor }) => ({\n  backgroundColor: 'transparent',\n  border: `1px solid ${btncolor || '#BEDBB0'}`,\n  position: 'relative',\n  '&:before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'block',\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: btncolor || '#BEDBB0',\n    content: '\"\"',\n  },\n}));\n\nconst PriorityRadioBtn = props => {\n  const btncolor = priorityColorSwitcher(props.priority);\n\n  return (\n    <Radio\n      disableRipple\n      icon={<PrIcon btncolor={btncolor} />}\n      checkedIcon={<PrCheckedIcon btncolor={btncolor} />}\n      {...props}\n    />\n  );\n};\nexport default PriorityRadioBtn;\n","import React from 'react';\nimport { TextField } from '@mui/material';\nimport { useField } from 'formik';\n\nconst DatePicker = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n  const configDatePicker = {\n    ...field,\n    ...otherProps,\n    type: 'date',\n    variant: 'standard',\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true,\n    },\n  };\n  if (meta && meta.touched && meta.error) {\n    configDatePicker.error = true;\n    configDatePicker.helperText = meta.error;\n  }\n  return <TextField {...configDatePicker} />;\n};\nexport default DatePicker;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Container } from '@mui/material';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Typography, RadioGroup, FormLabel, FormControl } from '@mui/material';\nimport DatePicker from 'components/FormsUI/DatePicker/DatePicker';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  deadline: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  deadline: Yup.date().required(),\n});\n\nconst AddCardForm = ({\n  parentColumn,\n  onCloseModal,\n  formTitle,\n  buttonTitle,\n  taskOperation,\n  taskId,\n  initData,\n}) => {\n  const dispatch = useDispatch();\n  const [priority, setPriority] = useState('without');\n\n  const handleChangePriority = event => {\n    setPriority(event.target.value);\n  };\n\n  const handleSubmit = values => {\n    // changing the deadline to the needed format\n    const formattedDate = values.deadline.split('-').reverse().join('-');\n\n    dispatch(\n      taskOperation({\n        ...values,\n        parentColumn,\n        priority,\n        taskId,\n        deadline: formattedDate,\n      })\n    );\n    //setSubmitting(false);\n    // resetForm();\n    onCloseModal();\n  };\n  return (\n    <Container>\n      <Formik\n        initialValues={initData ? initData : initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Typography variant=\"h2\" component=\"h2\" mb={3}>\n            {formTitle}\n          </Typography>\n          <Textfield\n            name=\"title\"\n            label=\"Title\"\n            sx={{\n              marginBottom: '14px',\n            }}\n          />\n          <Textfield\n            name=\"description\"\n            label=\"Description\"\n            multiline={true}\n            rows={6}\n            sx={{\n              marginBottom: '24px',\n            }}\n          />\n\n          <FormControl>\n            <FormLabel\n              id=\"priority-radios\"\n              sx={{\n                fontSize: 12,\n                lineHeight: 1.5,\n                letterSpacing: '-0.02em',\n                color: 'GrayText',\n              }}\n            >\n              Label color\n            </FormLabel>\n            <RadioGroup\n              sx={{\n                marginBottom: '14px',\n              }}\n              row\n              defaultValue=\"low\"\n              aria-labelledby=\"priority-radios\"\n              name=\"priority\"\n              value={priority}\n              onChange={handleChangePriority}\n            >\n              <FormControlLabel\n                value=\"low\"\n                control={<PriorityRadioBtn priority=\"low\" />}\n              />\n              <FormControlLabel\n                value=\"medium\"\n                control={\n                  <PriorityRadioBtn priority=\"medium\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"high\"\n                control={\n                  <PriorityRadioBtn priority=\"high\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"without\"\n                control={\n                  <PriorityRadioBtn priority=\"without\" sx={{ ml: '-14px' }} />\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          <Typography variant=\"body2\" component=\"h4\" mb={0.5}>\n            Deadline\n          </Typography>\n          <DatePicker\n            name=\"deadline\"\n            sx={{\n              marginBottom: '40px',\n            }}\n          />\n\n          <SubmitButton>{buttonTitle}</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default AddCardForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Card from '@mui/material/Card';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport { Typography, Stack, Box, useTheme } from '@mui/material';\nimport TruncatedText from './TruncatedText';\nimport IconBtn from './IconBtn';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\nimport { updateTask, deleteTask } from 'store/boards/operations';\n\nconst Task = ({ name, description, priority, deadline, taskId }) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteTask = () => {\n    if (window.confirm(`Do you really want to delete task ${name}?`)) {\n      dispatch(deleteTask(taskId));\n    }\n\n  }\n\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyle = {\n    '&::before': {\n      content: '\"\"',\n      transform: 'translateY(20%)',\n      height: '12px',\n      width: '12px',\n      backgroundColor: `${priorityColor}`,\n      borderRadius: '50%',\n      display: 'inline-block',\n      marginRight: '4px',\n    },\n  };\n  const handleIconClick = () => {};\n\n  return (\n    <Card\n      elevation={2}\n      sx={{\n        py: '14px',\n        pl: '24px',\n        pr: '20px',\n        borderLeft: `4px solid ${priorityColor}`,\n        mb: '14px',\n      }}\n    >\n      <Box>\n        <Box\n          sx={{\n            pb: '14px',\n            mb: '14px',\n            borderBottom: `1px solid ${theme.palette.side.divider}`,\n          }}\n        >\n          <Typography variant=\"h5\" component=\"h2\" color=\"text.primary\" mb={1}>\n            {name}\n          </Typography>\n          <TruncatedText text={description} />\n        </Box>\n\n        {/* components below devider       */}\n\n        <Box>\n          <Stack direction=\"row\">\n            {/* priority container      */}\n            <Stack\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-start\"\n              spacing={0}\n              sx={{ marginRight: '14px' }}\n            >\n              <Box>\n                <Typography variant=\"caption\" color=\"text.sideSecond\">\n                  Priority\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant=\"h6\" sx={priorityStyle}>\n                  {priority}\n                </Typography>\n              </Box>\n            </Stack>\n\n            {/* deadline container     */}\n            <Stack\n              flexGrow={1}\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-start\"\n              spacing={0}\n            >\n              <Box>\n                <Typography variant=\"caption\" color=\"text.sideSecond\">\n                  Deadline\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant=\"h6\" color=\"text.primary\">\n                  {deadline}\n                </Typography>\n              </Box>\n            </Stack>\n\n            {/* icons container     */}\n\n            <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-end\"\n              spacing={1}\n            >\n              <Box>\n                <IconBtn onClick={handleIconClick} iconId=\"alert\" />\n              </Box>\n              <Box>\n                <IconBtn onClick={handleIconClick} iconId=\"move\" />\n              </Box>\n\n              <Box>\n                <IconBtn onClick={openModalHandler} iconId=\"pencil\" />\n              </Box>\n\n              <Box>\n                <IconBtn onClick={handleDeleteTask} iconId=\"trash\" />\n              </Box>\n            </Stack>\n          </Stack>\n        </Box>\n      </Box>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm\n          onCloseModal={closeModalHandler}\n          taskId={taskId}\n          formTitle={\"Edit card\"}\n          buttonTitle={\"Edit\"}\n          taskOperation={updateTask}\n          initData={{ title: name, description, priority, deadline}}\n        />\n      </Modal>\n    </Card>\n  );\n};\nexport default Task;\n","import { Box } from '@mui/material';\nimport Task from './Task';\n\nconst TaskList = ({ cards }) => {\n  return (\n    <Box\n      sx={{\n        overflowY: 'auto',\n        overflowX: 'hidden',\n      }}\n    >\n      {cards && cards.map(card => {\n        return (\n          <Task\n            key={card._id}\n            taskId={card._id}\n            name={card.title}\n            description={card.description}\n            priority={card.priority}\n            deadline={card.deadline}\n          />\n        );\n      })}\n    </Box>\n  );\n};\nexport default TaskList;\n","import { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport ColumnHeader from './ColumnHeader';\nimport TaskList from './TaskList';\nimport { Stack } from '@mui/material';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\nimport { addTask } from 'store/boards/operations';\n\nconst Column = ({ column }) => {\n  const [showModal, setShowModal] = useState(false);\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Stack\n      sx={{\n        width: '334px',\n        maxWidth: '334px',\n        height: '100%',\n      }}\n    >\n      <ColumnHeader title={column.title} columnId={column._id} />\n      <TaskList cards={column.tasks} />\n      <Button\n        variant=\"contained\"\n        startIcon={<AddBoxIcon />}\n        onClick={openModalHandler}\n      >\n        Add another card\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm\n          onCloseModal={closeModalHandler}\n          parentColumn={column._id}\n          formTitle={\"Add card\"}\n          buttonTitle={\"Add\"}\n          taskOperation={addTask}\n        />\n      </Modal>\n    </Stack>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  /* position: absolute;\n  top: 80px;\n  left: 650px; */\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: #5255bc;\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconStyle = styled.svg`\n  width: 14px;\n  height: 14px;\n  color: #ffffff;\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addColumn } from 'store/boards/operations';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal }) => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n\n  const parentBoard = boardId;\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log({...values, parentBoard})\n    dispatch(addColumn({ ...values, parentBoard }));\n    resetForm();\n    onCloseModal();\n  };\n  return (\n    <Section>\n      <SectionTitle>Add column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <Icon id={'plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Add\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddColumnModal;\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Button, IconStyle, IconWrapper, Text } from './AddColumnButton.styled';\nimport AddColumnModal from './AddColumnModal';\nimport { Icon } from 'components/Icons';\n\nconst AddColumnButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <>\n      <Button type=\"button\" onClick={handleOpenModal}>\n        <IconWrapper>\n          <IconStyle>\n            <Icon id={'plus'} />\n          </IconStyle>\n        </IconWrapper>\n        <Text>Add another column</Text>\n      </Button>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <AddColumnModal\n            onCloseModal={handleCloseModal}\n            title=\"New board\"\n            type=\"Submit\"\n            \n          />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default AddColumnButton;\n","import { FormControlLabel, useRadioGroup } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\n\nconst StyledFormControlLabel = styled(props => <FormControlLabel {...props} />)(\n  ({ _, checked }) => {\n    const userTheme = useSelector(selectTheme);\n    const colorChecked = userTheme === 'dark' ? '#FFF' : '#161616';\n    return {\n      '.MuiFormControlLabel-label': checked && {\n        // Change color here\n        color: colorChecked,\n      },\n    };\n  }\n);\n\nexport const CustomControlLabel = props => {\n  // MUI UseRadio Group\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n};\n","import { useEffect, useState } from 'react';\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Typography,\n} from '@mui/material';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport { CustomControlLabel } from './CustomControlLabel';\n\nconst ctrlLabelStyles = {\n  color: 'text.filterRadio',\n  fontFamily: 'Poppins',\n  fontSize: 12,\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  letterSpacing: -0.24,\n};\n\nexport const FilterBar = () => {\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    console.log('filter: ', filter);\n  }, [filter]);\n\n  return (\n    <Container\n      sx={{\n        // outline: '1px dashed tomato',\n        width: 300,\n        height: 234,\n        p: 0,\n      }}\n    >\n      <Typography\n        sx={{\n          borderBottom: 1,\n          borderColor: 'rgba(255, 255, 255, 0.50)',\n          paddingBottom: 1.75,\n          marginBottom: 1.75,\n        }}\n        variant=\"h2\"\n        component=\"h2\"\n      >\n        Filters\n      </Typography>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: 14,\n        }}\n      >\n        <FormControl>\n          <FormLabel\n            sx={{\n              color: 'text.primary',\n              fontWeight: 500,\n              fontStyle: 'normal',\n              letterSpacing: '-0.28px',\n              '&.Mui-focused': {\n                color: 'text.primary',\n              },\n            }}\n          >\n            Label color\n          </FormLabel>\n          <RadioGroup\n            value={filter}\n            onChange={e => {\n              setFilter(e.target.value);\n            }}\n          >\n            <CustomControlLabel\n              label=\"Without priority\"\n              value=\"without\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"Without\" />}\n            />\n            <CustomControlLabel\n              label=\"Low\"\n              value=\"low\"\n              sx={{ ...ctrlLabelStyles }}\n              control={<PriorityRadioBtn priority=\"Low\" />}\n            />\n            <CustomControlLabel\n              label=\"Medium\"\n              value=\"medium\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"Medium\" />}\n            />\n            <CustomControlLabel\n              label=\"High\"\n              value=\"high\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"High\" />}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          variant=\"text\"\n          sx={{\n            ...ctrlLabelStyles,\n            textDecorationLine: 'underline',\n            textTransform: 'none',\n            width: 48,\n            height: 18,\n            // outline: '1px dashed teal',\n          }}\n          onClick={() => {\n            setFilter('all');\n          }}\n          type=\"button\"\n        >\n          Show all\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { FilterBar } from './FilterBar';\nimport { Box, Button, SvgIcon, Typography } from '@mui/material';\nimport { Icon } from 'components/Icons';\n\nexport const FilterBtn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Button\n        sx={{\n          textTransform: 'none',\n          display: 'flex',\n          gap: '8px',\n          alignItems: 'center',\n        }}\n        type=\"button\"\n        onClick={handleOpenModal}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: '8px',\n            transition: 'all 250ms linear',\n            cursor: 'pointer',\n            '&:hover': {\n              transform: 'scale(1.1)',\n            },\n          }}\n        >\n          <SvgIcon\n            sx={{\n              width: '14px',\n              height: '14px',\n              color: 'text.primary',\n            }}\n          >\n            <Icon id={'filter'} />\n          </SvgIcon>\n        </Box>\n        <Typography\n          sx={{\n            color: 'text.primary',\n          }}\n        >\n          Filters\n        </Typography>\n      </Button>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <FilterBar />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport { selectBoard, selectColumns } from 'store/boards/selectors';\n\nimport { Box, Typography } from '@mui/material';\nimport { container, text } from 'styles';\nimport { FilterBtn } from 'components/Filter';\n\nconst BoardPage = () => {\n  const board = useSelector(selectBoard);\n  const columns = useSelector(selectColumns);\n\n  return (\n    <Box sx={container.board}>\n      <Box sx={container.boardInner}>\n        <Box sx={container.boardTopBar}>\n          <Typography component=\"h2\" variant=\"h3\" sx={text.boardTitle}>\n            {board.title}\n          </Typography>\n\n          <FilterBtn />\n        </Box>\n\n        <Box sx={container.columns}>\n          <Box sx={container.columnsInner}>\n            {columns.map(column => {\n              return <Column key={column._id} column={column} />;\n            })}\n          </Box>\n          <AddColumnButton />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BoardPage;\n"],"names":["Section","styled","SectionTitle","FormWrapper","TitleInput","Field","AuthFormSubmitButton","ButtonPlus","PlusIcon","ErrorSection","ErrorMessage","ModalForm","Form","validationSchema","Yup","shape","title","required","columnId","onCloseModal","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","updateColumn","name","component","type","id","placeholder","useState","showModal","setShowModal","handleCloseModal","Card","CardHeader","action","IconButton","onClick","window","confirm","deleteColumn","Modal","isOpenModal","priority","priorityColor","text","Typography","variant","color","sx","display","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","IconBtnRoot","ButtonBase","theme","padding","margin","stroke","palette","sideSecond","transition","primary","iconId","otherProps","useField","field","meta","configTextfield","fullWidth","touched","error","helperText","TextField","children","submitForm","useFormikContext","configButton","Button","startIcon","AddBox","style","fill","fontSize","textTransform","PrIcon","borderRadius","width","height","backgroundColor","btncolor","PrCheckedIcon","border","position","top","left","transform","content","props","priorityColorSwitcher","Radio","disableRipple","icon","checkedIcon","configDatePicker","InputLabelProps","shrink","description","deadline","parentColumn","formTitle","buttonTitle","taskOperation","taskId","initData","setPriority","Container","formattedDate","split","reverse","join","mb","label","marginBottom","multiline","rows","FormControl","FormLabel","lineHeight","letterSpacing","RadioGroup","row","defaultValue","value","onChange","event","target","FormControlLabel","control","ml","useTheme","closeModalHandler","priorityStyle","marginRight","handleIconClick","elevation","py","pl","pr","borderLeft","Box","pb","borderBottom","side","divider","Stack","direction","justifyContent","alignItems","spacing","flexGrow","deleteTask","updateTask","cards","overflowY","overflowX","map","card","_id","column","maxWidth","tasks","addTask","IconWrapper","IconStyle","Text","boardId","useParams","parentBoard","console","log","addColumn","StyledFormControlLabel","_","checked","userTheme","useSelector","selectTheme","CustomControlLabel","radioGroup","useRadioGroup","ctrlLabelStyles","fontFamily","fontStyle","fontWeight","FilterBar","filter","setFilter","useEffect","p","borderColor","paddingBottom","marginTop","e","textDecorationLine","FilterBtn","gap","cursor","SvgIcon","board","selectBoard","columns","selectColumns","container"],"sourceRoot":""}