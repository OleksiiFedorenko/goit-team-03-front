{"version":3,"file":"static/js/190.98b1908f.chunk.js","mappings":"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","sources":["components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","helpers/priorityColorSwitcher.js","components/FormsUI/RadioButtons/PriorityRadioBtn.jsx","components/Filter/CustomControlLabel.jsx","store/filters/selectors.js","components/Filter/FilterBar.jsx","components/Filter/FilterBtn.jsx","components/Scroll/Scroll.jsx","components/DragAndDrop/StrictModeDroppable.jsx","components/Column/IconBtn.jsx","components/FormsUI/TextField/index.js","components/FormsUI/SubmitButton/SubmitButton.jsx","components/Calendar/Calendar.jsx","helpers/formatDate.js","helpers/getDeadlineInfo.js","helpers/determineRemainDays.js","components/AddCardForm/AddCardForm.jsx","components/Column/AlertIcon.jsx","components/Column/Task.jsx","components/DragAndDrop/ColumnInnerList.jsx","components/DragAndDrop/BoardInnerList.jsx","components/AddColumn/EditColumnModal.jsx","components/Column/ColumnHeader.jsx","components/Column/TaskList.jsx","components/DragAndDrop/DNDColumn.jsx","pages/BoardPage.jsx","helpers/handleDragEnd.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addColumn } from 'store/boards/operations';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\nimport { Box, FormControl, Typography, Button, TextField } from '@mui/material';\nimport { container, button, form, icon } from 'styles';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal }) => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n\n  const parentBoard = boardId;\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log({ ...values, parentBoard });\n    dispatch(addColumn({ ...values, parentBoard }));\n    resetForm();\n    onCloseModal();\n  };\n  return (\n    <Box sx={container.addColumnContainer}>\n      <Typography variant=\"h2\" mb={3}>\n        Add column\n      </Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <Form onSubmit={handleSubmit}>\n            <FormControl fullWidth>\n              <TextField\n                label=\"Title\"\n                variant=\"outlined\"\n                type=\"text\"\n                id=\"text\"\n                name=\"title\"\n                sx={{ mb: 3 }}\n                value={values.title}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                name=\"Title\"\n                component=\"div\"\n                style={{ color: 'red', fontSize: 12 }}\n              />\n            </FormControl>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              sx={form.button}\n              type=\"submit\"\n            >\n              <Box sx={button.boxIconPlus}>\n                <Icon id={'plus'} sx={icon.plusAdd} />\n              </Box>\n              Add\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default AddColumnModal;\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Icon } from 'components/Icons';\nimport AddColumnModal from './AddColumnModal';\nimport { Button, Typography, Box } from '@mui/material';\nimport { button, icon } from 'styles';\n\nconst AddColumnButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <>\n      <Button\n        sx={button.addColumnBtn}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleOpenModal}\n      >\n        <Box sx={button.boxIconPlusAnother}>\n          <Icon id={'plus'} sx={icon.plusAddAnotherColumn} />\n        </Box>\n        <Typography variant=\"h3\" component=\"span\">\n          Add another column\n        </Typography>\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <AddColumnModal\n          onCloseModal={handleCloseModal}\n          title=\"New board\"\n          type=\"Submit\"\n        />\n      </Modal>\n    </>\n  );\n};\nexport default AddColumnButton;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'high':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","import React from 'react';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\n\nconst PrIcon = styled('span')(({ btncolor }) => ({\n  borderRadius: '50%',\n  width: 14,\n  height: 14,\n  backgroundColor: btncolor || '#BEDBB0',\n}));\n\nconst PrCheckedIcon = styled(PrIcon)(({ btncolor }) => ({\n  backgroundColor: 'transparent',\n  border: `1px solid ${btncolor || '#BEDBB0'}`,\n  position: 'relative',\n  '&:before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'block',\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: btncolor || '#BEDBB0',\n    content: '\"\"',\n  },\n}));\n\nconst PriorityRadioBtn = props => {\n  const btncolor = priorityColorSwitcher(props.priority);\n\n  return (\n    <Radio\n      disableRipple\n      icon={<PrIcon btncolor={btncolor} />}\n      checkedIcon={<PrCheckedIcon btncolor={btncolor} />}\n      {...props}\n    />\n  );\n};\nexport default PriorityRadioBtn;\n","import { FormControlLabel, useRadioGroup } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\n\nconst StyledFormControlLabel = styled(props => <FormControlLabel {...props} />)(\n  ({ _, checked }) => {\n    const userTheme = useSelector(selectTheme);\n    const colorChecked = userTheme === 'dark' ? '#FFF' : '#161616';\n    return {\n      '.MuiFormControlLabel-label': checked && {\n        // Change color here\n        color: colorChecked,\n      },\n    };\n  }\n);\n\nexport const CustomControlLabel = props => {\n  // MUI UseRadio Group\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n};\n","export const selectPrioFilter = state => state.filters.prio;\n","import { useEffect, useState } from 'react';\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Typography,\n} from '@mui/material';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport { CustomControlLabel } from './CustomControlLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPrioFilter } from 'store/filters/filtersSlice';\nimport { selectPrioFilter } from 'store/filters/selectors';\n\nconst ctrlLabelStyles = {\n  color: 'text.filterRadio',\n  fontFamily: 'Poppins',\n  fontSize: 12,\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  letterSpacing: -0.24,\n};\n\nexport const FilterBar = () => {\n  const currentPrio = useSelector(selectPrioFilter);\n  const [filter, setFilter] = useState(currentPrio);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPrioFilter(filter));\n  }, [dispatch, filter]);\n\n  return (\n    <Container\n      sx={{\n        width: 300,\n        height: 234,\n        p: 0,\n      }}\n    >\n      <Typography\n        sx={{\n          borderBottom: 1,\n          borderColor: 'rgba(255, 255, 255, 0.50)',\n          paddingBottom: 1.75,\n          marginBottom: 1.75,\n        }}\n        variant=\"h2\"\n        component=\"h2\"\n      >\n        Filters\n      </Typography>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: 14,\n        }}\n      >\n        <FormControl>\n          <FormLabel\n            sx={{\n              color: 'text.primary',\n              fontWeight: 500,\n              fontStyle: 'normal',\n              letterSpacing: '-0.28px',\n              '&.Mui-focused': {\n                color: 'text.primary',\n              },\n            }}\n          >\n            Label color\n          </FormLabel>\n          <RadioGroup\n            value={filter}\n            onChange={e => {\n              setFilter(e.target.value);\n            }}\n          >\n            <CustomControlLabel\n              label=\"Without priority\"\n              value=\"without\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"without\" />}\n            />\n            <CustomControlLabel\n              label=\"Low\"\n              value=\"low\"\n              sx={{ ...ctrlLabelStyles }}\n              control={<PriorityRadioBtn priority=\"low\" />}\n            />\n            <CustomControlLabel\n              label=\"Medium\"\n              value=\"medium\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"medium\" />}\n            />\n            <CustomControlLabel\n              label=\"High\"\n              value=\"high\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"high\" />}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          variant=\"text\"\n          sx={{\n            ...ctrlLabelStyles,\n            textDecorationLine: 'underline',\n            textTransform: 'none',\n            height: 18,\n          }}\n          style={\n            filter === 'all'\n              ? { pointerEvents: 'none', textDecoration: 'none' }\n              : null\n          }\n          onClick={() => {\n            setFilter('all');\n          }}\n          type=\"button\"\n        >\n          <Typography>{filter === 'all' ? 'Shown all' : 'Show all'}</Typography>\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { FilterBar } from './FilterBar';\nimport { Box, Button, SvgIcon, Typography } from '@mui/material';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nexport const FilterBtn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Button\n        sx={{\n          textTransform: 'none',\n          display: 'flex',\n          gap: '8px',\n          alignItems: 'center',\n        }}\n        type=\"button\"\n        onClick={handleOpenModal}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: '8px',\n            transition: 'all 250ms linear',\n            cursor: 'pointer',\n            '&:hover': {\n              transform: 'scale(1.1)',\n            },\n          }}\n        >\n          <SvgIcon\n            sx={{\n              width: '14px',\n              height: '14px',\n              color: 'text.primary',\n            }}\n          >\n            <Icon id={'filter'} sx={icon.filter} />\n          </SvgIcon>\n        </Box>\n        <Typography\n          sx={{\n            color: 'text.primary',\n          }}\n        >\n          Filters\n        </Typography>\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <FilterBar />\n      </Modal>\n    </>\n  );\n};\n","import React, { useRef, useEffect } from 'react';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport './scroll.css';\n\nconst Scrollbar = ({ children, width=\"100%\", height=\"100%\" }) => {\n    const scrollRef = useRef(null);\n    useEffect(() => {\n      const scrollbarRef = scrollRef.current;\n      if (scrollbarRef) {\n        const scrollElement = scrollbarRef.current;\n        if (scrollElement && typeof scrollElement.destroy === 'function') {\n          return () => {\n            scrollElement.destroy();\n          };\n        }\n      }\n    }, []);\n\n    return (\n      <OverlayScrollbarsComponent\n        ref={scrollRef}\n        style={{width, height}}\n      >\n          {children}\n      </OverlayScrollbarsComponent>\n    );\n};\n  \nexport default Scrollbar;\n\n\n\n\n\n\n\n\n\n\n","import { useEffect, useState } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nexport const StrictModeDroppable = ({ children, ...props }) => {\n  // console.log('StrictModeDroppable PROPS: ', props);\n  // console.log('StrictModeDroppable CHILDREN: ', children);\n  // console.log(typeof children);\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    const animation = requestAnimationFrame(() => setEnabled(true));\n\n    return () => {\n      cancelAnimationFrame(animation);\n      setEnabled(false);\n    };\n  }, []);\n\n  if (!enabled) {\n    return null;\n  }\n  return <Droppable {...props}>{children}</Droppable>;\n};\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nconst IconBtnRoot = styled(ButtonBase)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n\n  '& .MuiTouchRipple-root': {\n    display: 'none',\n  },\n}));\n\nconst IconBtn = ({ onClick, iconId }) => {\n  return (\n    <IconBtnRoot onClick={onClick}>\n      <Icon id={iconId} sx={icon.taskItem} />\n    </IconBtnRoot>\n  );\n};\n\nexport default IconBtn;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n\nconst TextFieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n\n  return <TextField {...configTextfield} />;\n};\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\nimport { styled } from '@mui/system';\nimport PlusIcon from './PlusIcon';\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  boxShadow: 'none',\n  textTransform: 'none',\n  paddingTop: '11px',\n  paddingBottom: '11px',\n  '&:hover': {\n    boxShadow: 'none',\n  },\n}));\n\nconst TestButton = ({ children, ...otherProps }) => {\n  const { submitForm } = useFormikContext();\n\n  const handleSubmit = () => {\n    submitForm();\n  };\n\n  return (\n    <StyledButton\n      variant=\"contained\"\n      color=\"primary\"\n      fullWidth\n      onClick={handleSubmit}\n      startIcon={<PlusIcon />}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TestButton;\n","import PropTypes from 'prop-types';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport { Icon } from 'components/Icons';\n\nexport const Calendar = ({ parentState, initial }) => {\n  dayjs().format();\n\n  const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n  const currentDate = new Date();\n\n  const isPastDate = date => {\n    return date < currentDate;\n  };\n\n  const isToday = date => {\n    return (\n      date.$D === currentDate.getDate() &&\n      date.$M === currentDate.getMonth() &&\n      date.$y === currentDate.getFullYear()\n    );\n  };\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker\n          views={['month', 'day']}\n          value={dateDeadline}\n          desktopModeMediaQuery=\"\"\n          showDaysOutsideCurrentMonth\n          fixedWeekNumber={5}\n          onChange={newValue => {\n            setDateDeadline(newValue);\n            parentState(newValue);\n          }}\n          // renderInput={params => <TextField {...params} />}\n          shouldDisableDate={date => isPastDate(date) && !isToday(date)}\n          slots={{\n            openPickerIcon: () => <Icon id=\"dropdown\" />,\n            textField: TextField,\n          }}\n          dayOfWeekFormatter={day => day.slice(0, 2)}\n          slotProps={{\n            desktopPaper: {\n              sx: {\n                borderRadius: '8px',\n                color: 'text.primary',\n                backgroundColor: 'background.calendar',\n                '& .MuiPickersCalendarHeader-labelContainer': {\n                  position: 'absolute',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                  whiteSpace: 'nowrap',\n                },\n                '& .MuiPickersCalendarHeader-label': {\n                  fontSize: '16px',\n                  fontWeight: '500',\n                  letterSpacing: '0.32px',\n                },\n                '& .MuiSvgIcon-root': {\n                  fill: 'text.primary',\n                },\n\n                '& .MuiTypography-root': {\n                  color: 'text.additional',\n                  height: '24px',\n                  marginTop: '14px',\n                  fontSize: '14px',\n                },\n                '& .MuiDayCalendar-weekContainer': {\n                  justifyContent: 'space-between',\n                },\n\n                '& .MuiButtonBase-root': {\n                  color: 'text.primary',\n                  margin: 0,\n                  padding: 0,\n                  fontSize: '14px',\n                  fontStyle: 'normal',\n                  fontWeight: '400',\n                  lineHeight: '18px',\n                },\n                '& .MuiPickersArrowSwitcher-root': {\n                  width: '100%',\n                  justifyContent: 'space-between',\n                },\n                '& .MuiPickersCalendarHeader-switchViewButton': {\n                  display: 'none',\n                },\n                '& .MuiPickersCalendarHeader-root': {\n                  padding: '0',\n                  alignItems: 'baseline',\n                  margin: '0',\n                  borderBottomWidth: '2px',\n                  borderBottomStyle: 'solid',\n                  borderColor: 'divider.card',\n                },\n\n                '& .MuiPickersArrowSwitcher-button': {\n                  height: '21px',\n                },\n\n                '& .MuiDateCalendar-root': {\n                  width: '233px',\n                  height: '254px',\n                  padding: '18px',\n                  boxSizing: 'border-box',\n                  background: 'background.side',\n                },\n\n                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                  height: '24px',\n                  width: '24px',\n                  minWidth: '24px',\n                  maxWidth: '24px',\n                },\n              },\n            },\n            day: {\n              sx: {\n                height: '24px',\n                width: '24px',\n                minWidth: '24px',\n                maxWidth: '24px',\n                fontSize: '14px',\n\n                '&.MuiPickersDay-root.Mui-selected': {\n                  backgroundColor: 'primary.main',\n                  color: 'text.hover',\n                },\n                '&.MuiPickersDay-root:hover': {\n                  backgroundColor: 'primary.main',\n                  color: 'text.additional',\n                },\n                '&.Mui-selected:hover': {\n                  backgroundColor: 'primary.main',\n                  color: 'text.hover',\n                },\n                '&.MuiPickersDay-today': {\n                  borderWidth: 1,\n                  borderColor: 'primary.main',\n                  color: 'text.primary',\n                },\n              },\n            },\n            textField: {\n              variant: 'outlined',\n              sx: {\n                '& input': { display: 'none' },\n                '& fieldset': { border: 'none' },\n              },\n            },\n          }}\n        />\n      </LocalizationProvider>\n    </>\n  );\n};\n\nCalendar.propTypes = {\n  parentState: PropTypes.func.isRequired,\n  initial: PropTypes.string,\n};\n","import moment from 'moment';\n\nexport const formatDate = param => {\n  const formatDeadline = moment(param).format('DD-MM-YYYY');\n  return formatDeadline;\n};\n","import moment from 'moment';\nimport { determineRemainDays } from './determineRemainDays';\n\nexport const getDeadlineInfo = date => {\n  let deadlineInfo = 'Today, ' + moment().format('MMMM D');\n\n  if (date) {\n    deadlineInfo =\n      determineRemainDays(date.$d) + ', ' + moment(date.$d).format('MMMM D');\n    return deadlineInfo;\n  } else {\n    deadlineInfo = 'Today, ' + moment().format('MMMM D');\n  }\n\n  return deadlineInfo;\n};\n","import moment from 'moment';\n\nexport const determineRemainDays = date => {\n  const d = moment(date);\n  const today = moment().endOf('day');\n  const tomorrow = moment().add(1, 'day').endOf('day');\n  if (d < today) return 'Today';\n  if (d < tomorrow) return 'Tomorrow';\n  return 'in ' + d.fromNow(true);\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Container } from '@mui/material';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport { Calendar } from 'components/Calendar';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport {\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  Box,\n} from '@mui/material';\n\n// import DatePickerBtn from 'components/FormsUI/DatePickerBtn/DatePickerBtn';\nimport { formatDate } from 'helpers/formatDate';\nimport { getDeadlineInfo } from 'helpers/getDeadlineInfo';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  deadline: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  deadline: Yup.mixed(),\n  // deadline: Yup.date().required(), - ця перевірка блокувала відправку форми\n});\n\nconst AddCardForm = ({\n  parentColumn,\n  onCloseModal,\n  formTitle,\n  buttonTitle,\n  taskOperation,\n  taskId,\n  initData,\n}) => {\n  const dispatch = useDispatch();\n  const [deadline, setDeadline] = useState(Date.now());\n  const [priority, setPriority] = useState('without');\n\n  const setDateValue = value => {\n    setDeadline(value);\n  };\n\n  const handleChangePriority = event => {\n    setPriority(event.target.value);\n  };\n\n  const handleSubmit = values => {\n    // changing the deadline to the needed format\n    // const formattedDate = values.deadline.split('-').reverse().join('-');\n    dispatch(\n      taskOperation({\n        ...values,\n        parentColumn,\n        priority,\n        taskId,\n        deadline: formatDate(deadline.$d),\n        // deadline: formattedDate,\n      })\n    );\n    //setSubmitting(false);\n    // resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Container sx={{ maxWidth: '302px', p: 0 }}>\n      <Formik\n        initialValues={initData ? initData : initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Typography variant=\"h2\" component=\"h2\" mb={3}>\n            {formTitle}\n          </Typography>\n          <Textfield\n            name=\"title\"\n            label=\"Title\"\n            sx={{\n              marginBottom: '14px',\n            }}\n          />\n          <Textfield\n            name=\"description\"\n            label=\"Description\"\n            multiline={true}\n            rows={6}\n            sx={{\n              marginBottom: '24px',\n            }}\n          />\n\n          <FormControl>\n            <FormLabel\n              id=\"priority-radios\"\n              sx={{\n                fontSize: 12,\n                lineHeight: 1.5,\n                letterSpacing: '-0.02em',\n                color: 'GrayText',\n              }}\n            >\n              Label color\n            </FormLabel>\n            <RadioGroup\n              sx={{\n                marginBottom: '14px',\n              }}\n              row\n              defaultValue=\"low\"\n              aria-labelledby=\"priority-radios\"\n              name=\"priority\"\n              value={priority}\n              onChange={handleChangePriority}\n            >\n              <FormControlLabel\n                value=\"low\"\n                control={<PriorityRadioBtn priority=\"low\" />}\n              />\n              <FormControlLabel\n                value=\"medium\"\n                control={\n                  <PriorityRadioBtn priority=\"medium\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"high\"\n                control={\n                  <PriorityRadioBtn priority=\"high\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"without\"\n                control={\n                  <PriorityRadioBtn priority=\"without\" sx={{ ml: '-14px' }} />\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          <Box mb={5}>\n            <Typography variant=\"body2\" component=\"h4\" mb={0.5}>\n              Deadline\n            </Typography>\n            {/* <DatePickerBtn\n              name=\"deadline\"\n              sx={{\n                marginBottom: '40px',\n              }}\n            >\n              Today, March 8\n            </DatePickerBtn> */}\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <Box>{getDeadlineInfo(deadline)}</Box>\n              <Calendar parentState={setDateValue} />\n            </Box>\n          </Box>\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            sx={form.button}\n            type=\"submit\"\n          >\n            <Box sx={button.boxIconPlus}>\n              <Icon id={'plus'} sx={icon.plusAdd} />\n            </Box>\n            Add\n          </Button> */}\n          <SubmitButton>{buttonTitle}</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default AddCardForm;\n","import React from 'react';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nconst AlertIcon = () => {\n  const iconStyles = {\n    svgAlert: {\n      ...icon.alert,\n      filter: 'drop-shadow(0px 2px 4px currentColor)',\n    },\n  };\n  return <Icon id=\"alert\" sx={iconStyles.svgAlert} />;\n};\nexport default AlertIcon;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateTask, deleteTask } from 'store/boards/operations';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport IconBtn from './IconBtn';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\nimport { Card, Typography, Stack, Box } from '@mui/material';\nimport { card } from 'styles';\nimport DeleteConfirmModal from 'components/DeleteConfirmModal/DeleteConfirmModal';\n\nimport { Draggable } from 'react-beautiful-dnd';\nimport Alerticon from './AlertIcon';\nimport { formatDate } from 'helpers/formatDate';\n\nconst Task = ({ name, description, priority, deadline, taskId, index }) => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [ShowDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n    setShowDeleteConfirmModal(false);\n  };\n\n  const handleDeleteTask = () => {\n    // if (window.confirm(`Do you really want to delete task ${name}?`)) {\n    dispatch(deleteTask(taskId));\n    setShowDeleteConfirmModal(false);\n    // }\n  };\n\n  const openDeleteConfirmModal = () => {\n    setShowDeleteConfirmModal(true);\n  };\n\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyles = {\n    textTransform: 'capitalize',\n    '&::before': {\n      ...card.priorityCircle,\n      bgcolor: priorityColor,\n    },\n  };\n  const handleIconClick = () => {};\n  const isDeadline = () => {\n    return deadline === formatDate(new Date());\n  };\n\n  return (\n    <Draggable draggableId={taskId} index={index}>\n      {(provided, snapshot) => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isdragging={`${snapshot.isDragging}`} // lowercase & 'true' or 'false' string (bool triggers a warning)\n        >\n          <Card\n            sx={{\n              ...card.task,\n              borderLeft: `4px solid ${priorityColor}`,\n            }}\n          >\n            <Box>\n              <Box sx={card.taskMainBox}>\n                <Typography variant=\"h5\" component=\"h3\" mb={1}>\n                  {name}\n                </Typography>\n                <Typography variant=\"body2\" sx={card.taskDescription}>\n                  {description}\n                </Typography>\n              </Box>\n\n              {/* components below devider       */}\n\n              <Box>\n                <Stack direction=\"row\">\n                  {/* priority container      */}\n                  <Stack\n                    justifyContent=\"flex-end\"\n                    alignItems=\"flex-start\"\n                    spacing={0}\n                    sx={{ marginRight: '14px' }}\n                  >\n                    <Box>\n                      <Typography variant=\"caption\" color=\"text.sideSecond\">\n                        Priority\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"h6\" sx={priorityStyles}>\n                        {priority}\n                      </Typography>\n                    </Box>\n                  </Stack>\n\n                  {/* deadline container     */}\n                  <Stack\n                    flexGrow={1}\n                    justifyContent=\"flex-end\"\n                    alignItems=\"flex-start\"\n                    spacing={0}\n                  >\n                    <Box>\n                      <Typography variant=\"caption\" color=\"text.sideSecond\">\n                        Deadline\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"h6\" color=\"text.primary\">\n                        {deadline}\n                      </Typography>\n                    </Box>\n                  </Stack>\n\n                  {/* icons container     */}\n\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"flex-end\"\n                    spacing={1}\n                  >\n                    {isDeadline() && <Alerticon />}\n                    <Box>\n                      <IconBtn onClick={handleIconClick} iconId=\"move\" />\n                    </Box>\n\n                    <Box>\n                      <IconBtn onClick={openModalHandler} iconId=\"pencil\" />\n                    </Box>\n\n                    <Box>\n                      <IconBtn\n                        onClick={openDeleteConfirmModal}\n                        iconId=\"trash\"\n                      />\n                    </Box>\n                  </Stack>\n                </Stack>\n              </Box>\n            </Box>\n            <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n              <AddCardForm\n                onCloseModal={closeModalHandler}\n                taskId={taskId}\n                formTitle={'Edit card'}\n                buttonTitle={'Edit'}\n                taskOperation={updateTask}\n                initData={{ title: name, description, priority, deadline }}\n              />\n            </Modal>\n          </Card>\n\n          <DeleteConfirmModal\n            isOpenModal={ShowDeleteConfirmModal}\n            onCloseModal={closeModalHandler}\n            onConfirm={handleDeleteTask}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n};\nexport default Task;\n","import Task from 'components/Column/Task';\nimport { Component } from 'react';\n\nclass ColumnInnerList extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks === this.props.tasks) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    return this.props.tasks.map((task, index) => {\n      // if (!task) return null;\n      const { _id, title, description, priority, deadline } = task;\n      return (\n        <Task\n          key={_id}\n          taskId={_id}\n          name={title}\n          description={description}\n          priority={priority}\n          deadline={deadline}\n          index={index}\n        />\n      );\n    });\n  }\n}\n\nexport { ColumnInnerList };\n","import React from 'react';\nimport { DNDColumn } from '.';\n\nclass BoardInnerList extends React.PureComponent {\n  render() {\n    const { column, tasksArr, index } = this.props;\n    // console.log('BoardInnerList PROPS: ', this.props);\n    // const tasks = column.taskIds.map(taskId => taskMap[taskId]);\n    const tasks = column.taskOrder.map(taskId => {\n      const task = tasksArr.find(({ _id }) => taskId === _id);\n      return task;\n    });\n    return <DNDColumn column={column} tasks={tasks} index={index} />;\n  }\n}\n\nexport { BoardInnerList };\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { updateColumn } from 'store/boards/operations';\nimport { Box, FormControl, Typography, Button, TextField } from '@mui/material';\nimport { Icon } from 'components/Icons';\nimport { container, button, form, icon } from 'styles';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, onCloseModal }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(updateColumn({ ...values, columnId }));\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Box sx={container.addColumnContainer}>\n      <Typography variant=\"h2\" mb={3}>\n        Edit column\n      </Typography>\n\n      <Formik\n        initialValues={{ title }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <Form onSubmit={handleSubmit}>\n            <FormControl fullWidth>\n              <TextField\n                label=\"Title\"\n                variant=\"outlined\"\n                type=\"text\"\n                id=\"text\"\n                name=\"title\"\n                sx={{ mb: 3 }}\n                value={values.title}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                name=\"Text\"\n                component=\"div\"\n                style={{ color: 'red', fontSize: 12 }}\n              />\n            </FormControl>\n\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              sx={form.button}\n              type=\"submit\"\n            >\n              <Box sx={button.boxIconPlus}>\n                <Icon id={'plus'} sx={icon.plusAdd} />\n              </Box>\n              Add\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default EditColumnModal;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from 'store/boards/operations';\n\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from 'components/AddColumn/EditColumnModal';\nimport IconBtn from './IconBtn';\nimport { Card, Stack, Typography } from '@mui/material';\nimport { card } from 'styles';\nimport DeleteConfirmModal from 'components/DeleteConfirmModal/DeleteConfirmModal';\n\nconst ColumnHeader = ({ title, columnId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const [ShowDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setShowDeleteConfirmModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    // if (window.confirm(`Do you really want to delete column ${title}?`)) {\n    dispatch(deleteColumn(columnId));\n    setShowDeleteConfirmModal(false);\n    // }\n  };\n\n  const openDeleteConfirmModal = () => {\n    setShowDeleteConfirmModal(true);\n  };\n\n  return (\n    <>\n      <Card sx={card.header}>\n        <Stack sx={card.headerContainer}>\n          <Typography component=\"h2\" variant=\"h3\">\n            {title}\n          </Typography>\n          <Stack direction=\"row\" spacing={1}>\n            <IconBtn onClick={handleOpenModal} iconId=\"pencil\" />\n            <IconBtn onClick={openDeleteConfirmModal} iconId=\"trash\" />\n          </Stack>\n        </Stack>\n\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <EditColumnModal\n            onCloseModal={handleCloseModal}\n            columnId={columnId}\n            title={title}\n            type=\"Submit\"\n          />\n        </Modal>\n      </Card>\n\n      <DeleteConfirmModal\n        isOpenModal={ShowDeleteConfirmModal}\n        onCloseModal={handleCloseModal}\n        onConfirm={handleDeleteColumn}\n      />\n    </>\n  );\n};\nexport default ColumnHeader;\n","import { Stack, Box } from '@mui/material';\n// import Task from './Task';\nimport { useSelector } from 'react-redux';\nimport { selectPrioFilter } from 'store/filters/selectors';\nimport { ColumnInnerList } from 'components/DragAndDrop';\nimport { container } from 'styles';\n\nconst TaskList = ({ cards, placeholder }) => {\n  const prio = useSelector(selectPrioFilter);\n\n  // console.log('cards: ', cards);\n  const filteredCards =\n    prio === 'all'\n      ? cards\n      : cards.filter(card => {\n          return card?.priority === prio;\n        });\n\n  return (\n    <Box sx={container.taskListScroll}>\n      <Stack sx={container.taskList}>\n        <ColumnInnerList placeholder={placeholder} tasks={filteredCards} />\n        {placeholder}\n      </Stack>\n    </Box>\n  );\n};\nexport default TaskList;\n","import { Box, Button, Stack, SvgIcon } from '@mui/material';\nimport ColumnHeader from 'components/Column/ColumnHeader';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { container, button, card } from 'styles';\nimport { StrictModeDroppable } from './StrictModeDroppable';\nimport TaskList from 'components/Column/TaskList';\nimport sprite from 'components/Icons/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm/AddCardForm';\nimport { useState } from 'react';\nimport { addTask } from 'store/boards/operations';\n\nexport const DNDColumn = ({ column, tasks, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Draggable draggableId={column._id} index={index}>\n      {provided => (\n        <div {...provided.draggableProps} ref={provided.innerRef}>\n          <Stack sx={card.column}>\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader title={column.title} columnId={column._id} />\n            </div>\n            <StrictModeDroppable droppableId={column._id} type=\"task\">\n              {(provided, snapshot) => (\n                <>\n                  {/* Adding Box for scrolls and for styling */}\n                  <Box\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    isdraggingover={`${snapshot.isDraggingOver}`}\n                    sx={container.dndContainerColumn}\n                  >\n                    {/* <div\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                      isdraggingover={`${snapshot.isDraggingOver}`}\n                      style={{ minHeight: 20, maxHeight: 470 }}\n                    > */}\n                    <TaskList\n                      cards={tasks}\n                      placeholder={provided.placeholder}\n                    />\n                    {/* </div> */}\n                  </Box>\n                  <Button\n                    variant=\"contained\"\n                    sx={button.addCard}\n                    // startIcon={<AddBoxIcon />}\n                    onClick={openModalHandler}\n                  >\n                    <Box sx={button.addCardIconBox}>\n                      <SvgIcon sx={button.addCardIcon}>\n                        <svg stroke=\"currentColor\">\n                          <use href={sprite + '#icon-plus'} />\n                        </svg>\n                      </SvgIcon>\n                    </Box>\n                    Add another card\n                  </Button>\n                  <Modal\n                    isOpenModal={showModal}\n                    onCloseModal={closeModalHandler}\n                  >\n                    <AddCardForm\n                      onCloseModal={closeModalHandler}\n                      parentColumn={column._id}\n                      formTitle={'Add card'}\n                      buttonTitle={'Add'}\n                      taskOperation={addTask}\n                    />\n                  </Modal>\n                </>\n              )}\n            </StrictModeDroppable>\n          </Stack>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n","import { useSelector } from 'react-redux';\n// import Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport { selectBoard, selectColumns } from 'store/boards/selectors';\n\nimport { Box, Typography } from '@mui/material';\nimport { container, text } from 'styles';\nimport { FilterBtn } from 'components/Filter';\nimport Scrollbar from 'components/Scroll/Scroll';\n\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BoardInnerList, StrictModeDroppable } from 'components/DragAndDrop';\nimport { useDispatch } from 'react-redux';\nimport { handleDragEnd } from 'helpers';\nimport { selectPrioFilter } from 'store/filters/selectors';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst BoardPage = () => {\n  const board = useSelector(selectBoard);\n  const columns = useSelector(selectColumns);\n  // console.log('BOARD: ', board);\n  // console.log('COLUMNS: ', columns);\n\n  const filter = useSelector(selectPrioFilter);\n\n  const dispatch = useDispatch();\n\n  const onDragEnd = result => {\n    if (filter !== 'all') {\n      toast.error(\n        'Please, skip priority filters to drag elements to another position.'\n      );\n      return;\n    }\n\n    handleDragEnd({ result, board, columns, dispatch });\n  };\n\n  // if (board._id === '' || columns[0]._id === '') {\n  //   return <div>Loading...</div>;\n  // } // ----- triggers bug on empty board\n\n  return (\n    <Scrollbar>\n      <Box sx={container.board}>\n        <Box sx={container.boardInner}>\n          <Box sx={container.boardTopBar}>\n            <Typography component=\"h2\" variant=\"h3\" sx={text.boardTitle}>\n              {board.title}\n            </Typography>\n\n            <FilterBtn />\n          </Box>\n\n          <Box\n            // style={{ outline: '2px dashed tomato' }}\n            sx={container.columns}\n          >\n            <Box>\n              {/* ---------------------------------------------------------------- */}\n              <DragDropContext\n                onDragStart={() => {}}\n                onDragUpdate={() => {}}\n                onDragEnd={onDragEnd}\n              >\n                <StrictModeDroppable\n                  droppableId={'all-columns'}\n                  direction=\"horizontal\"\n                  type=\"column\"\n                >\n                  {provided => (\n                    <Box\n                      // style={{ outline: '1px dashed teal', display: 'flex' }}\n                      sx={container.columnsInner}\n                      {...provided.droppableProps}\n                      ref={provided.innerRef}\n                    >\n                      {board.columnOrder.map((columnId, index) => {\n                        const column = columns.find(\n                          item => item._id === columnId\n                        );\n\n                        // console.log('COLUMN: ', column);\n\n                        // todo ///////////////////\n                        // if (!column) return null;\n                        return (\n                          <BoardInnerList\n                            key={column._id}\n                            column={column}\n                            tasksArr={column.tasks}\n                            index={index}\n                          />\n                        );\n                      })}\n\n                      {provided.placeholder}\n                    </Box>\n                  )}\n                </StrictModeDroppable>\n              </DragDropContext>\n              {/* ---------------------------------------------------------------- */}\n            </Box>\n            <AddColumnButton />\n          </Box>\n        </Box>\n        <ToastContainer autoClose={3000} />\n      </Box>\n    </Scrollbar>\n  );\n};\n\nexport default BoardPage;\n","import {\n  updateColumnOrder,\n  updateComplexDND,\n  updateSingleTaskOrder,\n} from 'store/boards/boardSlice';\n\nexport const handleDragEnd = ({ result, board, columns, dispatch }) => {\n  const { destination, source, draggableId, type } = result;\n\n  if (!destination) return;\n\n  if (\n    destination.droppableId === source.droppableId &&\n    destination.index === source.index\n  )\n    return;\n\n  // Dragging columns:\n  if (type === 'column') {\n    const newColumnOrder = Array.from(board.columnOrder);\n    newColumnOrder.splice(source.index, 1);\n    newColumnOrder.splice(destination.index, 0, draggableId);\n\n    // TODO: ---------- on Redux :::\n    dispatch(updateColumnOrder(newColumnOrder));\n    return;\n  }\n\n  // Dragging tasks:\n\n  // Start column:\n  const start = columns.find(column => column._id === source.droppableId);\n\n  // Finish column:\n  const finish = columns.find(column => column._id === destination.droppableId);\n\n  if (start === finish) {\n    const newTaskOrder = Array.from(start.taskOrder);\n    newTaskOrder.splice(source.index, 1);\n    newTaskOrder.splice(destination.index, 0, draggableId);\n\n    // TODO: ---------- on Redux :::\n    dispatch(updateSingleTaskOrder({ columnId: start._id, newTaskOrder }));\n    return;\n  }\n\n  // Moving from one column to another:\n\n  const draggableTask = start.tasks.find(task => task._id === draggableId);\n  const newDraggableTask = {\n    ...draggableTask,\n    parentColumn: finish._id,\n  };\n\n  const startTaskOrder = Array.from(start.taskOrder);\n  startTaskOrder.splice(source.index, 1);\n\n  const startTasksArr = Array.from(start.tasks);\n  const draggableTaskIndex = startTasksArr.findIndex(\n    item => item._id === draggableId\n  );\n  startTasksArr.splice(draggableTaskIndex, 1);\n\n  const newStart = {\n    ...start,\n    taskOrder: startTaskOrder,\n    tasks: startTasksArr,\n  };\n  // console.log('NEW START COLUMN: ', newStart);\n\n  const finishTaskOrder = Array.from(finish.taskOrder);\n  finishTaskOrder.splice(destination.index, 0, draggableId);\n\n  const finishTasksArr = Array.from(finish.tasks);\n  finishTasksArr.push(newDraggableTask);\n\n  const newFinish = {\n    ...finish,\n    taskOrder: finishTaskOrder,\n    tasks: finishTasksArr,\n  };\n  // console.log('NEW FINISH COLUMN: ', newFinish);\n\n  // TODO: ---------- on Redux :::\n  dispatch(\n    updateComplexDND({\n      // updatedTask: newDraggableTask,\n      updatedStartColumn: newStart,\n      updatedFinishColumn: newFinish,\n    })\n  );\n  return;\n};\n"],"names":["validationSchema","Yup","shape","title","required","initialValues","_ref","onCloseModal","boardId","useParams","dispatch","useDispatch","parentBoard","_jsxs","Box","sx","container","children","_jsx","Typography","variant","mb","Formik","onSubmit","values","_ref2","resetForm","console","log","_objectSpread","addColumn","_ref3","handleChange","handleSubmit","Form","FormControl","fullWidth","TextField","label","type","id","name","value","onChange","ErrorMessage","component","style","color","fontSize","Button","form","button","Icon","icon","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","handleCloseModal","_Fragment","onClick","Modal","isOpenModal","AddColumnModal","priority","priorityColor","PrIcon","styled","borderRadius","width","height","backgroundColor","btncolor","PrCheckedIcon","border","concat","position","top","left","transform","display","content","props","priorityColorSwitcher","Radio","disableRipple","checkedIcon","StyledFormControlLabel","FormControlLabel","_","checked","userTheme","useSelector","selectTheme","CustomControlLabel","radioGroup","useRadioGroup","selectPrioFilter","state","filters","prio","ctrlLabelStyles","fontFamily","fontStyle","fontWeight","lineHeight","letterSpacing","FilterBar","currentPrio","filter","setFilter","useEffect","setPrioFilter","Container","p","borderBottom","borderColor","paddingBottom","marginBottom","justifyContent","marginTop","FormLabel","RadioGroup","e","target","control","PriorityRadioBtn","textDecorationLine","textTransform","pointerEvents","textDecoration","FilterBtn","gap","alignItems","transition","cursor","SvgIcon","_ref$width","_ref$height","scrollRef","useRef","scrollbarRef","current","scrollElement","destroy","OverlayScrollbarsComponent","ref","StrictModeDroppable","_objectWithoutProperties","_excluded","enabled","setEnabled","animation","requestAnimationFrame","cancelAnimationFrame","Droppable","IconBtnRoot","ButtonBase","theme","padding","margin","iconId","otherProps","_useField","useField","_useField2","field","meta","configTextfield","touched","error","helperText","StyledButton","boxShadow","paddingTop","submitForm","useFormikContext","startIcon","PlusIcon","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","currentDate","Date","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","desktopModeMediaQuery","showDaysOutsideCurrentMonth","fixedWeekNumber","newValue","shouldDisableDate","date","isPastDate","$D","getDate","$M","getMonth","$y","getFullYear","isToday","slots","openPickerIcon","textField","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","whiteSpace","fill","borderBottomWidth","borderBottomStyle","boxSizing","background","minWidth","maxWidth","borderWidth","formatDate","param","moment","getDeadlineInfo","d","today","endOf","tomorrow","add","fromNow","determineRemainDays","$d","description","deadline","parentColumn","formTitle","buttonTitle","taskOperation","taskId","initData","now","setDeadline","_useState3","_useState4","setPriority","Textfield","multiline","rows","row","defaultValue","event","ml","SubmitButton","iconStyles","svgAlert","index","ShowDeleteConfirmModal","setShowDeleteConfirmModal","openModalHandler","closeModalHandler","handleDeleteTask","deleteTask","openDeleteConfirmModal","priorityStyles","card","bgcolor","handleIconClick","Draggable","draggableId","provided","snapshot","draggableProps","dragHandleProps","innerRef","isdragging","isDragging","Card","borderLeft","Stack","direction","spacing","marginRight","flexGrow","Alerticon","IconBtn","AddCardForm","updateTask","DeleteConfirmModal","onConfirm","ColumnInnerList","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","nextProps","tasks","this","map","task","_id","Task","Component","BoardInnerList","_React$PureComponent","_this$props","column","tasksArr","taskOrder","find","DNDColumn","React","columnId","updateColumn","EditColumnModal","deleteColumn","cards","placeholder","filteredCards","ColumnHeader","droppableId","droppableProps","isdraggingover","isDraggingOver","TaskList","stroke","href","sprite","addTask","board","selectBoard","columns","selectColumns","Scrollbar","text","DragDropContext","onDragStart","onDragUpdate","onDragEnd","result","destination","source","newColumnOrder","Array","from","columnOrder","splice","updateColumnOrder","start","finish","newTaskOrder","updateSingleTaskOrder","draggableTask","newDraggableTask","startTaskOrder","startTasksArr","draggableTaskIndex","findIndex","item","newStart","finishTaskOrder","finishTasksArr","push","newFinish","updateComplexDND","updatedStartColumn","updatedFinishColumn","handleDragEnd","toast","AddColumnButton","ToastContainer","autoClose"],"sourceRoot":""}