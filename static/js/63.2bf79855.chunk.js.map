{"version":3,"file":"static/js/63.2bf79855.chunk.js","mappings":"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","sources":["components/Icons/sprite.svg","components/Icons/Icon.styled.jsx","components/Icons/Icon.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Column/ColumnHeader.jsx","helpers/priorityColorSwitcher.js","webpack://react-homework-template/./src/components/Column/Task.module.css?558a","components/Column/Task.jsx","components/Column/TaskList.jsx","components/Column/Column.jsx","components/AddColumn/AddColumnButton.styled.js","components/AddColumn/AddColumnModal.styled.js","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","components/AddColumn/EditColumnModal.jsx","components/AddColumn/EditColumnButton.styled.js","components/AddColumn/EditColumnButton.jsx","pages/BoardPage.jsx"],"sourcesContent":["var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-puzzle-piece\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 4.8 4.8C24-.933 32.933 8 24.533 11.2l4.8 4.8-4.8 4.8c-3.2-8.4-12.133.533-3.733 3.733l-4.8 4.8-4.8-4.8C8 32.933-.933 24 7.467 20.8l-4.8-4.8 4.8-4.8c3.2 8.4 12.133-.533 3.733-3.733l4.8-4.8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-project\",\n    viewBox: \"0 0 28 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeWidth: 1.92,\n    d: \"M7.005 5.024a2.493 2.493 0 0 1 1.859-1.859 5.31 5.31 0 0 1 2.431 0 2.493 2.493 0 0 1 1.859 1.859 5.31 5.31 0 0 1 0 2.431 2.493 2.493 0 0 1-1.859 1.859 5.31 5.31 0 0 1-2.431 0 2.493 2.493 0 0 1-1.859-1.859 5.31 5.31 0 0 1 0-2.431zM7.005 15.584a2.495 2.495 0 0 1 1.859-1.859 5.31 5.31 0 0 1 2.431 0 2.493 2.493 0 0 1 1.859 1.859 5.31 5.31 0 0 1 0 2.431 2.495 2.495 0 0 1-1.859 1.859 5.31 5.31 0 0 1-2.431 0 2.493 2.493 0 0 1-1.859-1.859 5.31 5.31 0 0 1 0-2.431zM17.565 5.024a2.493 2.493 0 0 1 1.859-1.859 5.31 5.31 0 0 1 2.431 0 2.495 2.495 0 0 1 1.859 1.859 5.31 5.31 0 0 1 0 2.431 2.493 2.493 0 0 1-1.859 1.859 5.31 5.31 0 0 1-2.431 0 2.495 2.495 0 0 1-1.859-1.859 5.31 5.31 0 0 1 0-2.431zM17.565 15.584a2.495 2.495 0 0 1 1.859-1.859 5.31 5.31 0 0 1 2.431 0 2.495 2.495 0 0 1 1.859 1.859 5.31 5.31 0 0 1 0 2.431 2.495 2.495 0 0 1-1.859 1.859 5.31 5.31 0 0 1-2.431 0 2.495 2.495 0 0 1-1.859-1.859 5.31 5.31 0 0 1 0-2.431z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-star\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 2.683 6.975c.376.978.564 1.466.856 1.878.259.364.577.683.942.942.411.292.9.48 1.878.856l6.975 2.683-6.975 2.683c-.978.376-1.466.564-1.878.856a3.993 3.993 0 0 0-.942.942c-.292.411-.48.9-.856 1.878L16 29.335l-2.683-6.975c-.376-.978-.564-1.466-.856-1.878a4.012 4.012 0 0 0-.942-.942c-.411-.292-.9-.48-1.878-.856l-6.975-2.683 6.975-2.683c.978-.376 1.466-.564 1.878-.856.364-.259.683-.578.942-.942.292-.411.48-.9.856-1.878L16 2.667z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-loading\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M4.454 22.666a6.364 6.364 0 0 1 1.944-8.453l.003-.003a6.37 6.37 0 0 1 7.312.126l4.576 3.327a6.37 6.37 0 0 0 7.312.126l.003-.003a6.36 6.36 0 0 0 1.943-8.453m-4.878 18.213a6.365 6.365 0 0 1-8.453-1.944l-.003-.003a6.37 6.37 0 0 1 .126-7.312l3.327-4.576a6.37 6.37 0 0 0 .126-7.312l-.006-.003a6.363 6.363 0 0 0-8.453-1.942m16.094 2.118c5.207 5.207 5.207 13.648 0 18.855s-13.648 5.207-18.855 0c-5.207-5.207-5.207-13.648 0-18.855s13.648-5.207 18.855 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-lightning\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M18.999 2.667h-7.674c-.239 0-.359 0-.465.036a.672.672 0 0 0-.249.154c-.08.078-.133.185-.24.399l-5.6 11.2c-.256.511-.383.767-.353.974a.669.669 0 0 0 .277.449c.172.12.458.12 1.029.12h8.274l-4 13.333 16.258-16.86c.548-.569.823-.853.839-1.097a.665.665 0 0 0-.235-.553c-.186-.157-.581-.157-1.372-.157h-9.49l3-8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-hexagon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M14.964 3.242c.378-.21.567-.315.767-.356.177-.036.36-.036.537 0 .2.041.389.146.767.356l9.867 5.482c.399.222.599.333.744.491.129.14.226.305.285.485.067.204.067.432.067.889v10.823c0 .457 0 .685-.067.889-.06.18-.157.346-.285.485-.145.158-.345.269-.744.491l-9.867 5.482c-.378.21-.567.315-.767.356-.177.036-.36.036-.537 0-.2-.041-.389-.146-.767-.356l-9.867-5.482c-.399-.222-.599-.333-.744-.491a1.34 1.34 0 0 1-.286-.485C4 22.097 4 21.869 4 21.412V10.589c0-.457 0-.685.067-.889.06-.18.157-.346.286-.485.145-.158.345-.269.744-.491l9.867-5.481z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-container\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M27.333 9.704 16 16m0 0L4.667 9.704M16 16v12.667m12-7.256V10.588c0-.457 0-.685-.067-.889a1.343 1.343 0 0 0-.285-.485c-.145-.158-.345-.269-.744-.491l-9.867-5.481c-.378-.21-.567-.315-.767-.356a1.349 1.349 0 0 0-.537 0c-.2.041-.389.146-.767.356L5.099 8.723c-.399.222-.599.333-.744.491a1.34 1.34 0 0 0-.286.485c-.067.204-.067.432-.067.889v10.823c0 .457 0 .685.067.889.06.18.157.346.286.485.145.158.345.269.744.491l9.867 5.482c.378.21.567.315.767.356.177.036.36.036.537 0 .2-.041.389-.146.767-.356l9.867-5.482c.399-.222.599-.333.744-.491.129-.14.226-.305.285-.485.067-.204.067-.432.067-.889z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-colors\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M16 27.296a8 8 0 1 0 7.44-13.683m-14.88.001a8 8 0 1 0 9.546 4.773M24 10.667a8 8 0 1 1-16 0 8 8 0 0 1 16 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M12 4h8M4 8h24M6.667 8l.801 12.018c.149 2.231.223 3.347.588 4.243a6 6 0 0 0 3.672 3.435c.919.304 2.037.304 4.273.304 2.236 0 3.354 0 4.273-.304a6 6 0 0 0 3.672-3.435c.365-.896.439-2.012.588-4.243L25.335 8\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.286,\n    d: \"M16 6.667v18.667M6.667 16h18.667\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"m3.333 28.667 7.399-2.846c.473-.182.71-.273.931-.392.197-.106.384-.227.56-.364.199-.154.378-.333.736-.692l15.04-15.04A3.77 3.77 0 1 0 22.666 4L7.626 19.04c-.359.359-.538.538-.692.736a3.948 3.948 0 0 0-.364.56c-.119.221-.21.458-.392.931l-2.846 7.399zm0 0 2.744-7.135c.196-.511.295-.766.463-.883a.665.665 0 0 1 .505-.107c.201.038.395.232.782.619l3.012 3.012c.387.387.58.58.619.782a.665.665 0 0 1-.107.505c-.117.168-.372.267-.883.463l-7.135 2.744z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-help-circle\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.88,\n    d: \"M16 29.333c7.364 0 13.333-5.97 13.333-13.333S23.364 2.667 16 2.667 2.667 8.637 2.667 16c0 7.364 5.97 13.333 13.333 13.333z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.88,\n    d: \"M12.12 12a4.003 4.003 0 0 1 6.834-1.249c.608.722.941 1.637.94 2.582 0 2.667-4 4-4 4M16 22.667h.02\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-filter\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 3,\n    d: \"M29.334 4H2.667l10.667 12.613v8.72L18.667 28V16.613L29.334 4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.311,\n    d: \"M1.333 16S6.666 5.333 16 5.333 30.667 16 30.667 16 25.334 26.667 16 26.667 1.333 16 1.333 16z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.311,\n    d: \"M16 20a4 4 0 1 0 0-8 4 4 0 0 0 0 8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-move\",\n    viewBox: \"0 0 30 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.447,\n    d: \"M4.188 9.725a12.544 12.544 0 0 1 10.87-6.275c6.931 0 12.549 5.618 12.549 12.549s-5.618 12.549-12.549 12.549c-4.645 0-8.7-2.523-10.87-6.274\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.447,\n    d: \"m15.059 21.019 5.02-5.02-5.02-5.02M2.51 16h17.569\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-x-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M24 8 8 24M8 8l16 16\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-login\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 1.5,\n    d: \"M11.867 10.08c.413-4.8 2.88-6.76 8.28-6.76h.173c5.96 0 8.347 2.387 8.347 8.347v8.693c0 5.96-2.387 8.347-8.347 8.347h-.173c-5.36 0-7.827-1.933-8.267-6.653M2.667 16H19.84\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 1.5,\n    d: \"M16.867 11.533 21.334 16l-4.467 4.467\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-alert\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3,\n    d: \"M12.472 28c0.94 0.83 2.176 1.334 3.528 1.334s2.588-0.504 3.528-1.334M24 10.666c0-4.418-3.582-8-8-8s-8 3.582-8 8v0c0 4.12-1.040 6.942-2.2 8.808-0.98 1.574-1.47 2.36-1.452 2.58 0.020 0.244 0.072 0.336 0.268 0.48 0.176 0.132 0.974 0.132 2.568 0.132h17.63c1.596 0 2.394 0 2.57-0.13 0.196-0.146 0.248-0.24 0.268-0.48 0.018-0.22-0.472-1.008-1.452-2.582-1.16-1.866-2.2-4.688-2.2-8.808z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.8d1212ebb4e91c0630ce8552c032b892.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\n\nexport const IconStyled = styled.svg`\n  width: 18px;\n  height: 18px;\n  display: inline-block;\n  stroke-width: 0;\n  stroke: grey;\n  fill: transparent;\n  :hover {\n    stroke: currentColor;\n  }\n`;\n","import Icons from './sprite.svg';\nimport { IconStyled } from './Icon.styled';\n\nexport const Icon = ({ id }) => {\n  return (\n    <IconStyled>\n      <use href={Icons + '#icon-' + id}></use>\n    </IconStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\n// export const Overlay = styled.div`\n//   position: fixed;\n//   top: 0;\n//   left: 0;\n//   width: 100vw;\n//   height: 100vh;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   background-color: rgba(0, 0, 0, 0.3);\n//   z-index: 1200;\n// `;\n// export const ModalEl = styled.div`\n//   position: relative;\n//   padding: 24px 24px 24px 24px;\n//   border-radius: 8px;\n//   border: 1px solid rgba(190, 219, 176, 0.5);\n//   background: var(--modal-bg-color);\n//   color: var(--first-text-color);\n\n//   @media (min-width: 768px) {\n//     max-width: 400px;\n//   }\n// `;\n\nexport const BtnClose = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 24px;\n  height: 24px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Box, Modal } from '@mui/material';\nimport { BtnClose } from './Modal.styled';\nimport { Icon } from 'components/Icons';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  borderRadius: '8px',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ModalWindow = ({ isOpenModal, onCloseModal, children }) => {\n  return (\n    <Modal open={isOpenModal} onClose={onCloseModal}>\n      <Box sx={style}>\n        <BtnClose onClick={onCloseModal}>\n          <Icon id=\"x-close\" />\n        </BtnClose>\n        {children}\n      </Box>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  isOpenModal: PropTypes.bool.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ModalWindow;\n","import { IconButton } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport { Icon } from 'components/Icons';\nconst ColumnHeader = ({ title }) => {\n  return (\n    <div>\n      <Card>\n        <CardHeader\n          action={\n            <div>\n              <IconButton>\n                <Icon id={'pencil'} />\n              </IconButton>\n              <IconButton>\n                <Icon id={'trash'} />\n              </IconButton>\n            </div>\n          }\n          title={title}\n        />\n      </Card>\n    </div>\n  );\n};\nexport default ColumnHeader;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'Low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'Medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'High':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'Without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","// extracted by mini-css-extract-plugin\nexport default {\"truncate-lines\":\"Task_truncate-lines__7UK0E\"};","import Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport CardContent from '@mui/material/CardContent';\nimport { Typography } from '@mui/material';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport { Icon } from 'components/Icons';\nimport { IconButton } from '@mui/material';\n\nimport css from './Task.module.css';\n\nconst TruncatedText = ({ text }) => (\n  <Typography className={css['truncate-lines']}>{text}</Typography>\n);\n\nconst Task = ({ name, description, priority, deadline }) => {\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyle = {\n    '&::before': {\n      content: '\"\"',\n      height: '12px',\n      width: '12px',\n      backgroundColor: `${priorityColor}`,\n      borderRadius: '50%',\n      display: 'inline-block',\n    },\n  };\n\n  return (\n    <Card\n      elevation={2}\n      sx={{\n        borderLeft: `4px solid ${priorityColor}`,\n      }}\n    >\n      <CardHeader title={name} />\n      <CardContent>\n        <TruncatedText text={description} />\n\n        <Divider variant=\"middle\" />\n\n        <Stack spacing={2} direction=\"row\">\n          <Stack>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Priority\n            </Typography>\n            <Typography sx={priorityStyle}>{priority}</Typography>\n          </Stack>\n\n          <Stack>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Deadline\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {deadline}\n            </Typography>\n          </Stack>\n          <Stack\n            direction=\"row\"\n            alignItems=\"flex-end\"\n            justifyContent=\"flex-end\"\n          >\n            <IconButton>\n              <Icon id={'alert'} />\n            </IconButton>\n\n            <IconButton>\n              <Icon id={'move'} />\n            </IconButton>\n\n            <IconButton>\n              <Icon id={'pencil'} />\n            </IconButton>\n            <IconButton>\n              <Icon id={'trash'} />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n};\nexport default Task;\n","import { Box } from '@mui/material';\nimport Task from './Task';\n\nconst TaskList = ({ cards }) => {\n  return (\n    <Box\n      sx={{\n        overflowY: 'auto',\n        overflowX: 'hidden',\n      }}\n    >\n      {cards.map(card => {\n        const { name, description, priority, deadline } = card;\n\n        return (\n          <Task\n            key={card.id}\n            name={name}\n            description={description}\n            priority={priority}\n            deadline={deadline}\n          />\n        );\n      })}\n    </Box>\n  );\n};\nexport default TaskList;\n","import cards from '../../test-data/cards.json';\nimport Button from '@mui/material/Button';\nimport ColumnHeader from './ColumnHeader';\nimport TaskList from './TaskList';\nimport { Stack } from '@mui/material';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\n\nconst Column = () => {\n  return (\n    <Stack\n      sx={{\n        width: '100%',\n        maxWidth: 360,\n        height: '100vh',\n        marginLeft: '15px',\n      }}\n    >\n      <ColumnHeader title={'Todo'}></ColumnHeader>\n      <TaskList cards={cards}></TaskList>\n      <Button variant=\"contained\" startIcon={<AddBoxIcon />}>\n        Add another card\n      </Button>\n    </Stack>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 80px;\n  left: 650px;\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n \n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: #5255BC;\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconStyle = styled.svg`\n  width: 14px;\n  height: 14px;\n  color: #ffffff;\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;","\n\nimport styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: #161616;\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color:#fff;\n  border: 1px solid #5255BC;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color:#161616;\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: #161616;\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: #5255BC;\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: #fff;\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: #fff;\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616;\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;","import React from 'react';\n// import { useDispatch } from \"react-redux\";\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal}) => {\n    // const dispatch = useDispatch();\n    \n    const handleSubmit = (values, { resetForm }) => {\n        // const { title } = values;\n        resetForm();\n        onCloseModal();\n\n    }\n  return (\n    <Section>\n      <SectionTitle>Add column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Add\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddColumnModal;","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Button, IconStyle, IconWrapper, Text } from './AddColumnButton.styled';\nimport AddColumnModal from './AddColumnModal';\nimport { Icon } from 'components/Icons';\n\nconst AddColumnButton = () => {\n    const [showModal, setShowModal] = useState(false);\n    const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n      <>\n      <Button type=\"button\" onClick={handleOpenModal}>\n        <IconWrapper>\n          <IconStyle>\n            <Icon id={\"plus\"} />\n          </IconStyle>\n        </IconWrapper>\n          <Text>Add another column</Text>\n        </Button>\n        {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <AddColumnModal  onCloseModal={handleCloseModal} title=\"New board\"\n            type=\"Submit\"/>\n          </Modal>\n           )}\n      </>\n    )\n}\nexport default AddColumnButton;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, closeModal }) => {\n\n  const initialValues = {\n    title,\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;","import styled from 'styled-components';\n\nexport const Column = styled.div`\n  position: absolute;\n  top: 80px;\n  right: 50px;\n  width: 334px;\n  height: 56px;\n  padding: 14px 24px;\n \n\n  display: flex;\n justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconStyle = styled.svg`\n  width: 16px;\n  height: 16px;\n  color: #16161680;\n   cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.4;\n    transform: scale(1.4);\n  }\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 230px;\n`;","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from './EditColumnModal';\nimport {Column, IconStyle, IconWrapper, Text } from './EditColumnButton.styled';\nimport { Icon } from 'components/Icons';\n\n\nconst EditColumnButton = () => {\n    const [showModal, setShowModal] = useState(false);\n    const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    };\n     return (\n       <Column>\n         <IconWrapper>\n           <Text>In progress</Text>\n          <IconStyle onClick={handleOpenModal}>\n               <Icon id={\"pencil\"} />\n             </IconStyle>\n             <IconStyle>\n                <Icon id={\"trash\"} />\n          </IconStyle>\n         </IconWrapper>\n        {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <EditColumnModal  onCloseModal={handleCloseModal} \n            type=\"Submit\"/>\n          </Modal>\n           )}\n      </Column>\n    )\n}\nexport default EditColumnButton;","import { useParams } from 'react-router-dom';\nimport Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport EditColumnButton from 'components/AddColumn/EditColumnButton';\n\nconst BoardPage = () => {\n  const { boardId } = useParams();\n  return (\n    <div>\n      <h1>BoardPage: {boardId}</h1>\n      <AddColumnButton />\n      <EditColumnButton/>\n      <Column />\n    </div>\n  );\n};\n\nexport default BoardPage;\n"],"names":["IconStyled","styled","Icon","id","href","Icons","BtnClose","style","position","top","left","transform","width","bgcolor","border","borderRadius","boxShadow","p","isOpenModal","onCloseModal","children","Modal","open","onClose","Box","sx","onClick","title","Card","CardHeader","action","IconButton","priority","priorityColor","TruncatedText","text","Typography","className","css","name","description","deadline","priorityColorSwitcher","priorityStyle","content","height","backgroundColor","display","elevation","borderLeft","CardContent","Divider","variant","Stack","spacing","direction","color","alignItems","justifyContent","cards","overflowY","overflowX","map","card","maxWidth","marginLeft","Button","startIcon","AddBox","IconWrapper","IconStyle","Text","Section","SectionTitle","FormWrapper","TitleInput","Field","AuthFormSubmitButton","ButtonPlus","PlusIcon","ErrorSection","ErrorMessage","ModalForm","Form","validationSchema","Yup","shape","required","initialValues","onSubmit","values","resetForm","component","type","placeholder","useState","showModal","setShowModal","handleCloseModal","closeModal","columnId","Column","boardId","useParams"],"sourceRoot":""}