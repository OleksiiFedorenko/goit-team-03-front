{"version":3,"file":"static/js/31.9340722d.chunk.js","mappings":"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","sources":["components/FormsUI/TextField/TextField.jsx","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","helpers/priorityColorSwitcher.js","components/FormsUI/RadioButtons/PriorityRadioBtn.jsx","components/Filter/CustomControlLabel.jsx","store/filters/selectors.js","components/Filter/FilterBar.jsx","components/Filter/FilterBtn.jsx","components/DragAndDrop/StrictModeDroppable.jsx","components/Column/IconBtn.jsx","components/Calendar/Calendar.jsx","helpers/formatDate.js","helpers/getDeadlineInfo.js","helpers/determineRemainDays.js","components/AddCardForm/AddCardForm.jsx","components/Column/AlertIcon.jsx","components/Column/Task.jsx","components/DragAndDrop/ColumnInnerList.jsx","components/DragAndDrop/BoardInnerList.jsx","components/AddColumn/EditColumnModal.jsx","components/Column/ColumnHeader.jsx","components/Column/TaskList.jsx","components/DragAndDrop/DNDColumn.jsx","pages/BoardPage.jsx","helpers/handleDragEnd.js"],"sourcesContent":["import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n//import { useTheme } from '@mui/material';\n\nconst TextFieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n  //const theme = useTheme();\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n\n  return <TextField {...configTextfield} />;\n};\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addColumn } from 'store/boards/operations';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Container, FormControl, Typography } from '@mui/material';\nimport { container } from 'styles';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal }) => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n\n  const parentBoard = boardId;\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log({ ...values, parentBoard });\n    dispatch(addColumn({ ...values, parentBoard }));\n    resetForm();\n    onCloseModal();\n  };\n  return (\n    <Container sx={container.cardForm}>\n      <Typography variant=\"h2\" mb={3}>\n        Add column\n      </Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <Form onSubmit={handleSubmit}>\n            <FormControl fullWidth>\n              <Textfield name=\"title\" label=\"Title\" sx={{ mb: 3 }} />\n            </FormControl>\n            <SubmitButton>{'Add'}</SubmitButton>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n\nexport default AddColumnModal;\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Icon } from 'components/Icons';\nimport AddColumnModal from './AddColumnModal';\nimport { Button, Typography, Box } from '@mui/material';\nimport { button, icon } from 'styles';\n\nconst AddColumnButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <>\n      <Button\n        sx={button.addColumnBtn}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleOpenModal}\n      >\n        <Box sx={button.boxIconPlusAnother}>\n          <Icon id={'plus'} sx={icon.plusAddAnotherColumn} />\n        </Box>\n        <Typography variant=\"h3\" component=\"span\">\n          Add another column\n        </Typography>\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <AddColumnModal\n          onCloseModal={handleCloseModal}\n          title=\"New board\"\n          type=\"Submit\"\n        />\n      </Modal>\n    </>\n  );\n};\nexport default AddColumnButton;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'high':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","import React from 'react';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\n\nconst PrIcon = styled('span')(({ btncolor }) => ({\n  borderRadius: '50%',\n  width: 14,\n  height: 14,\n  backgroundColor: btncolor || '#BEDBB0',\n}));\n\nconst PrCheckedIcon = styled(PrIcon)(({ btncolor }) => ({\n  backgroundColor: 'transparent',\n  border: `1px solid ${btncolor || '#BEDBB0'}`,\n  position: 'relative',\n  '&:before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'block',\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: btncolor || '#BEDBB0',\n    content: '\"\"',\n  },\n}));\n\nconst PriorityRadioBtn = props => {\n  const btncolor = priorityColorSwitcher(props.priority);\n\n  return (\n    <Radio\n      disableRipple\n      icon={<PrIcon btncolor={btncolor} />}\n      checkedIcon={<PrCheckedIcon btncolor={btncolor} />}\n      {...props}\n    />\n  );\n};\nexport default PriorityRadioBtn;\n","import { FormControlLabel, useRadioGroup } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\n\nconst StyledFormControlLabel = styled(props => <FormControlLabel {...props} />)(\n  ({ _, checked }) => {\n    const userTheme = useSelector(selectTheme);\n    const colorChecked = userTheme === 'dark' ? '#FFF' : '#161616';\n    return {\n      '.MuiFormControlLabel-label': checked && {\n        // Change color here\n        color: colorChecked,\n      },\n    };\n  }\n);\n\nexport const CustomControlLabel = props => {\n  // MUI UseRadio Group\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n};\n","export const selectPrioFilter = state => state.filters.prio;\n","import { useEffect, useState } from 'react';\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Typography,\n} from '@mui/material';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport { CustomControlLabel } from './CustomControlLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPrioFilter } from 'store/filters/filtersSlice';\nimport { selectPrioFilter } from 'store/filters/selectors';\n\nconst ctrlLabelStyles = {\n  color: 'text.filterRadio',\n  fontFamily: 'Poppins',\n  fontSize: 12,\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  letterSpacing: -0.24,\n};\n\nexport const FilterBar = () => {\n  const currentPrio = useSelector(selectPrioFilter);\n  const [filter, setFilter] = useState(currentPrio);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPrioFilter(filter));\n  }, [dispatch, filter]);\n\n  return (\n    <Container\n      sx={{\n        width: 300,\n        height: 234,\n        p: 0,\n      }}\n    >\n      <Typography\n        sx={{\n          borderBottom: 1,\n          borderColor: 'rgba(255, 255, 255, 0.50)',\n          paddingBottom: 1.75,\n          marginBottom: 1.75,\n        }}\n        variant=\"h2\"\n        component=\"h2\"\n      >\n        Filters\n      </Typography>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: 14,\n        }}\n      >\n        <FormControl>\n          <FormLabel\n            sx={{\n              color: 'text.primary',\n              fontWeight: 500,\n              fontStyle: 'normal',\n              letterSpacing: '-0.28px',\n              '&.Mui-focused': {\n                color: 'text.primary',\n              },\n            }}\n          >\n            Label color\n          </FormLabel>\n          <RadioGroup\n            value={filter}\n            onChange={e => {\n              setFilter(e.target.value);\n            }}\n          >\n            <CustomControlLabel\n              label=\"Without priority\"\n              value=\"without\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"without\" />}\n            />\n            <CustomControlLabel\n              label=\"Low\"\n              value=\"low\"\n              sx={{ ...ctrlLabelStyles }}\n              control={<PriorityRadioBtn priority=\"low\" />}\n            />\n            <CustomControlLabel\n              label=\"Medium\"\n              value=\"medium\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"medium\" />}\n            />\n            <CustomControlLabel\n              label=\"High\"\n              value=\"high\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"high\" />}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          variant=\"text\"\n          sx={{\n            ...ctrlLabelStyles,\n            textDecorationLine: 'underline',\n            textTransform: 'none',\n            height: 18,\n          }}\n          style={\n            filter === 'all'\n              ? { pointerEvents: 'none', textDecoration: 'none' }\n              : null\n          }\n          onClick={() => {\n            setFilter('all');\n          }}\n          type=\"button\"\n        >\n          <Typography>{filter === 'all' ? 'Shown all' : 'Show all'}</Typography>\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { FilterBar } from './FilterBar';\nimport { Box, Button, SvgIcon, Typography } from '@mui/material';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nexport const FilterBtn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          position: 'absolute',\n          top: {\n            zeroUp: '74px',\n            tablet: '88px',\n            desktop: '82px',\n          },\n          right: {\n            zeroUp: '20px',\n            tablet: '32px',\n            desktop: '24px',\n          },\n        }}\n      >\n        <Button\n          sx={{\n            textTransform: 'none',\n            display: 'flex',\n            gap: '8px',\n            alignItems: 'center',\n          }}\n          type=\"button\"\n          onClick={handleOpenModal}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: '8px',\n              transition: 'all 250ms linear',\n              cursor: 'pointer',\n              '&:hover': {\n                transform: 'scale(1.1)',\n              },\n            }}\n          >\n            <SvgIcon\n              sx={{\n                width: '14px',\n                height: '14px',\n                color: 'text.primary',\n              }}\n            >\n              <Icon id={'filter'} sx={icon.filter} />\n            </SvgIcon>\n          </Box>\n          <Typography\n            sx={{\n              color: 'text.primary',\n            }}\n          >\n            Filters\n          </Typography>\n        </Button>\n      </Box>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <FilterBar />\n      </Modal>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nexport const StrictModeDroppable = ({ children, ...props }) => {\n  // console.log('StrictModeDroppable PROPS: ', props);\n  // console.log('StrictModeDroppable CHILDREN: ', children);\n  // console.log(typeof children);\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    const animation = requestAnimationFrame(() => setEnabled(true));\n\n    return () => {\n      cancelAnimationFrame(animation);\n      setEnabled(false);\n    };\n  }, []);\n\n  if (!enabled) {\n    return null;\n  }\n  return <Droppable {...props}>{children}</Droppable>;\n};\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nconst IconBtnRoot = styled(ButtonBase)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n\n  '& .MuiTouchRipple-root': {\n    display: 'none',\n  },\n}));\n\nconst IconBtn = ({ onClick, iconId }) => {\n  return (\n    <IconBtnRoot onClick={onClick}>\n      <Icon id={iconId} sx={icon.taskItem} />\n    </IconBtnRoot>\n  );\n};\n\nexport default IconBtn;\n","import PropTypes from 'prop-types';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport { Icon } from 'components/Icons';\n\nexport const Calendar = ({ parentState, initial }) => {\n  dayjs().format();\n\n  const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n  const currentDate = new Date();\n\n  const isPastDate = date => {\n    return date < currentDate;\n  };\n\n  const isToday = date => {\n    return (\n      date.$D === currentDate.getDate() &&\n      date.$M === currentDate.getMonth() &&\n      date.$y === currentDate.getFullYear()\n    );\n  };\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker\n          views={['month', 'day']}\n          value={dateDeadline}\n          desktopModeMediaQuery=\"\"\n          showDaysOutsideCurrentMonth\n          onChange={newValue => {\n            setDateDeadline(newValue);\n            parentState(newValue);\n          }}\n          shouldDisableDate={date => isPastDate(date) && !isToday(date)}\n          slots={{\n            openPickerIcon: () => <Icon id=\"dropdown\" />,\n            textField: TextField,\n          }}\n          dayOfWeekFormatter={day => day.slice(0, 2)}\n          slotProps={{\n            desktopPaper: {\n              sx: {\n                borderRadius: '8px',\n                color: 'text.primary',\n                backgroundColor: 'background.calendar',\n                '& .MuiPickersCalendarHeader-labelContainer': {\n                  position: 'absolute',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                  whiteSpace: 'nowrap',\n                },\n                '& .MuiPickersCalendarHeader-label': {\n                  fontSize: '16px',\n                  fontWeight: '500',\n                  letterSpacing: '0.32px',\n                },\n                '& .MuiSvgIcon-root': {\n                  fill: 'text.primary',\n                },\n\n                '& .MuiTypography-root': {\n                  color: 'text.additional',\n                  height: '24px',\n                  marginTop: '14px',\n                  fontSize: '14px',\n                },\n                '& .MuiDayCalendar-weekContainer': {\n                  justifyContent: 'space-between',\n                },\n\n                '& .MuiButtonBase-root': {\n                  color: 'text.primary',\n                  margin: 0,\n                  padding: 0,\n                  fontSize: '14px',\n                  fontStyle: 'normal',\n                  fontWeight: '400',\n                  lineHeight: '18px',\n                },\n                '& .MuiPickersArrowSwitcher-root': {\n                  width: '100%',\n                  justifyContent: 'space-between',\n                },\n                '& .MuiPickersCalendarHeader-switchViewButton': {\n                  display: 'none',\n                },\n                '& .MuiPickersCalendarHeader-root': {\n                  padding: '0',\n                  alignItems: 'baseline',\n                  margin: '0',\n                  borderBottomWidth: '2px',\n                  borderBottomStyle: 'solid',\n                  borderColor: 'divider.card',\n                },\n\n                '& .MuiPickersArrowSwitcher-button': {\n                  height: '21px',\n                },\n\n                '& .MuiDateCalendar-root': {\n                  width: '233px',\n                  height: '254px',\n                  padding: '18px',\n                  boxSizing: 'border-box',\n                  background: 'background.side',\n                },\n\n                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                  height: '24px',\n                  width: '24px',\n                  minWidth: '24px',\n                  maxWidth: '24px',\n                },\n              },\n            },\n            day: {\n              sx: {\n                height: '24px',\n                width: '24px',\n                minWidth: '24px',\n                maxWidth: '24px',\n                fontSize: '14px',\n\n                '&.MuiPickersDay-root.Mui-selected': {\n                  backgroundColor: 'primary.main',\n                  color: 'text.hover',\n                },\n                '&.MuiPickersDay-root:hover': {\n                  backgroundColor: 'primary.main',\n                  color: 'text.hover',\n                },\n                '&.Mui-selected:hover': {\n                  backgroundColor: 'primary.main',\n                  color: 'text.hover',\n                },\n                '&.MuiPickersDay-today': {\n                  borderWidth: 1,\n                  borderColor: 'primary.main',\n                  color: 'text.primary',\n                },\n                '&.MuiPickersDay-dayOutsideMonth': {\n                  opacity: '0.3',\n                },\n              },\n            },\n            textField: {\n              variant: 'outlined',\n              sx: {\n                '& input': { display: 'none' },\n                '& fieldset': { border: 'none' },\n              },\n            },\n          }}\n        />\n      </LocalizationProvider>\n    </>\n  );\n};\n\nCalendar.propTypes = {\n  parentState: PropTypes.func.isRequired,\n  initial: PropTypes.string,\n};\n","import moment from 'moment';\n\nexport const formatDate = param => {\n  const formatDeadline = moment(param).format('DD-MM-YYYY');\n  return formatDeadline;\n};\n","import moment from 'moment';\nimport { determineRemainDays } from './determineRemainDays';\n\nexport const getDeadlineInfo = date => {\n  let deadlineInfo = 'Today, ' + moment().format('MMMM D');\n\n  if (date) {\n    deadlineInfo =\n      determineRemainDays(date.$d) + ', ' + moment(date.$d).format('MMMM D');\n    return deadlineInfo;\n  } else {\n    deadlineInfo = 'Today, ' + moment().format('MMMM D');\n  }\n\n  return deadlineInfo;\n};\n","import moment from 'moment';\n\nexport const determineRemainDays = date => {\n  const d = moment(date);\n  const today = moment().endOf('day');\n  const tomorrow = moment().add(1, 'day').endOf('day');\n  if (d < today) return 'Today';\n  if (d < tomorrow) return 'Tomorrow';\n  return 'in ' + d.fromNow(true);\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Container } from '@mui/material';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport { Calendar } from 'components/Calendar';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport {\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  Box,\n} from '@mui/material';\n\nimport { formatDate } from 'helpers/formatDate';\nimport { getDeadlineInfo } from 'helpers/getDeadlineInfo';\nimport { container } from 'styles';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  deadline: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  deadline: Yup.mixed(),\n  // deadline: Yup.date().required(), - ця перевірка блокувала відправку форми\n});\n\nconst AddCardForm = ({\n  parentColumn,\n  onCloseModal,\n  formTitle,\n  buttonTitle,\n  taskOperation,\n  taskId,\n  initData,\n}) => {\n  const dispatch = useDispatch();\n  const [deadline, setDeadline] = useState(Date.now());\n  const [priority, setPriority] = useState('without');\n\n  const setDateValue = value => {\n    setDeadline(value);\n  };\n\n  const handleChangePriority = event => {\n    setPriority(event.target.value);\n  };\n\n  const handleSubmit = values => {\n    // changing the deadline to the needed format\n    // const formattedDate = values.deadline.split('-').reverse().join('-');\n    dispatch(\n      taskOperation({\n        ...values,\n        parentColumn,\n        priority,\n        taskId,\n        deadline: formatDate(deadline.$d),\n        // deadline: formattedDate,\n      })\n    );\n    //setSubmitting(false);\n    // resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Container sx={container.cardForm}>\n      <Formik\n        initialValues={initData ? initData : initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Typography variant=\"h2\" component=\"h2\" mb={3}>\n            {formTitle}\n          </Typography>\n          <Textfield\n            name=\"title\"\n            label=\"Title\"\n            sx={{\n              marginBottom: '14px',\n            }}\n          />\n          <Textfield\n            name=\"description\"\n            label=\"Description\"\n            multiline={true}\n            rows={6}\n            sx={{\n              marginBottom: '24px',\n            }}\n          />\n\n          <FormControl>\n            <FormLabel\n              id=\"priority-radios\"\n              sx={{\n                fontSize: 12,\n                lineHeight: 1.5,\n                letterSpacing: '-0.02em',\n                color: 'GrayText',\n              }}\n            >\n              Label color\n            </FormLabel>\n            <RadioGroup\n              sx={{\n                marginBottom: '14px',\n              }}\n              row\n              defaultValue=\"low\"\n              aria-labelledby=\"priority-radios\"\n              name=\"priority\"\n              value={priority}\n              onChange={handleChangePriority}\n            >\n              <FormControlLabel\n                value=\"low\"\n                control={<PriorityRadioBtn priority=\"low\" />}\n              />\n              <FormControlLabel\n                value=\"medium\"\n                control={\n                  <PriorityRadioBtn priority=\"medium\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"high\"\n                control={\n                  <PriorityRadioBtn priority=\"high\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"without\"\n                control={\n                  <PriorityRadioBtn priority=\"without\" sx={{ ml: '-14px' }} />\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          <Box mb={5}>\n            <Typography variant=\"body2\" component=\"h4\" mb={0.5}>\n              Deadline\n            </Typography>\n\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <Box>{getDeadlineInfo(deadline)}</Box>\n              <Calendar parentState={setDateValue} />\n            </Box>\n          </Box>\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            sx={form.button}\n            type=\"submit\"\n          >\n            <Box sx={button.boxIconPlus}>\n              <Icon id={'plus'} sx={icon.plusAdd} />\n            </Box>\n            Add\n          </Button> */}\n          <SubmitButton>{buttonTitle}</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default AddCardForm;\n","import React from 'react';\nimport { Icon } from 'components/Icons';\nimport { icon } from 'styles';\n\nconst AlertIcon = () => {\n  const iconStyles = {\n    svgAlert: {\n      ...icon.alert,\n      filter: 'drop-shadow(0px 2px 4px currentColor)',\n    },\n  };\n  return <Icon id=\"alert\" sx={iconStyles.svgAlert} />;\n};\nexport default AlertIcon;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateTask, deleteTask } from 'store/boards/operations';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport IconBtn from './IconBtn';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\nimport { Card, Typography, Stack, Box } from '@mui/material';\nimport { card } from 'styles';\nimport DeleteConfirmModal from 'components/DeleteConfirmModal/DeleteConfirmModal';\n\nimport { Draggable } from 'react-beautiful-dnd';\nimport Alerticon from './AlertIcon';\nimport { formatDate } from 'helpers/formatDate';\n\nconst Task = ({ name, description, priority, deadline, taskId, index }) => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [ShowDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n    setShowDeleteConfirmModal(false);\n  };\n\n  const handleDeleteTask = () => {\n    // if (window.confirm(`Do you really want to delete task ${name}?`)) {\n    dispatch(deleteTask(taskId));\n    setShowDeleteConfirmModal(false);\n    // }\n  };\n\n  const openDeleteConfirmModal = () => {\n    setShowDeleteConfirmModal(true);\n  };\n\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyles = {\n    textTransform: 'capitalize',\n    '&::before': {\n      ...card.priorityCircle,\n      bgcolor: priorityColor,\n    },\n  };\n  const handleIconClick = () => {};\n  const isDeadline = () => {\n    return deadline === formatDate(new Date());\n  };\n\n  return (\n    <Draggable draggableId={taskId} index={index}>\n      {(provided, snapshot) => {\n        const isDragging = snapshot.isDragging;\n\n        return (\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <Box\n              sx={{\n                transform: isDragging ? 'rotate(5deg)' : 'rotate(0deg)',\n              }}\n            >\n              <Card\n                sx={{\n                  ...card.task,\n                  position: 'relative',\n                  '&::before': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '4px',\n                    height: '100%',\n                    background: priorityColor,\n                  },\n                }}\n              >\n                <Box>\n                  <Box sx={card.taskMainBox}>\n                    <Typography variant=\"h5\" component=\"h3\" mb={1}>\n                      {name}\n                    </Typography>\n                    <Typography variant=\"body2\" sx={card.taskDescription}>\n                      {description}\n                    </Typography>\n                  </Box>\n\n                  {/* components below devider       */}\n\n                  <Box>\n                    <Stack direction=\"row\">\n                      {/* priority container      */}\n                      <Stack\n                        justifyContent=\"flex-end\"\n                        alignItems=\"flex-start\"\n                        spacing={0}\n                        sx={{ marginRight: '14px' }}\n                      >\n                        <Box>\n                          <Typography variant=\"caption\" color=\"text.sideSecond\">\n                            Priority\n                          </Typography>\n                        </Box>\n                        <Box>\n                          <Typography variant=\"h6\" sx={priorityStyles}>\n                            {priority}\n                          </Typography>\n                        </Box>\n                      </Stack>\n\n                      {/* deadline container     */}\n                      <Stack\n                        flexGrow={1}\n                        justifyContent=\"flex-end\"\n                        alignItems=\"flex-start\"\n                        spacing={0}\n                      >\n                        <Box>\n                          <Typography variant=\"caption\" color=\"text.sideSecond\">\n                            Deadline\n                          </Typography>\n                        </Box>\n                        <Box>\n                          <Typography variant=\"h6\" color=\"text.primary\">\n                            {deadline}\n                          </Typography>\n                        </Box>\n                      </Stack>\n\n                      {/* icons container     */}\n\n                      <Stack\n                        direction=\"row\"\n                        justifyContent=\"flex-end\"\n                        alignItems=\"flex-end\"\n                        spacing={1}\n                      >\n                        {isDeadline() && <Alerticon />}\n                        <Box>\n                          <IconBtn onClick={handleIconClick} iconId=\"move\" />\n                        </Box>\n\n                        <Box>\n                          <IconBtn onClick={openModalHandler} iconId=\"pencil\" />\n                        </Box>\n\n                        <Box>\n                          <IconBtn\n                            onClick={openDeleteConfirmModal}\n                            iconId=\"trash\"\n                          />\n                        </Box>\n                      </Stack>\n                    </Stack>\n                  </Box>\n                </Box>\n                <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n                  <AddCardForm\n                    onCloseModal={closeModalHandler}\n                    taskId={taskId}\n                    formTitle={'Edit card'}\n                    buttonTitle={'Edit'}\n                    taskOperation={updateTask}\n                    initData={{ title: name, description, priority, deadline }}\n                  />\n                </Modal>\n                <DeleteConfirmModal\n                  isOpenModal={ShowDeleteConfirmModal}\n                  onCloseModal={closeModalHandler}\n                  onConfirm={handleDeleteTask}\n                  message=\"Are you sure you want to delete this task?\"\n                  title=\"This action is irreversible.\"\n                />\n              </Card>\n            </Box>\n          </div>\n        );\n      }}\n    </Draggable>\n  );\n};\nexport default Task;\n","import Task from 'components/Column/Task';\nimport { Component } from 'react';\n\nclass ColumnInnerList extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks === this.props.tasks) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    return this.props.tasks?.map((task, index) => {\n      // if (!task) return null;\n      const { _id, title, description, priority, deadline } = task;\n      return (\n        <Task\n          key={_id}\n          taskId={_id}\n          name={title}\n          description={description}\n          priority={priority}\n          deadline={deadline}\n          index={index}\n        />\n      );\n    });\n  }\n}\n\nexport { ColumnInnerList };\n","import React from 'react';\nimport { DNDColumn } from '.';\n\nclass BoardInnerList extends React.PureComponent {\n  render() {\n    const { column, tasksArr, index } = this.props;\n    // console.log('BoardInnerList PROPS: ', this.props);\n    // const tasks = column.taskIds.map(taskId => taskMap[taskId]);\n    const tasks = column.taskOrder.map(taskId => {\n      const task = tasksArr.find(({ _id }) => taskId === _id);\n      return task;\n    });\n    return <DNDColumn column={column} tasks={tasks} index={index} />;\n  }\n}\n\nexport { BoardInnerList };\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { updateColumn } from 'store/boards/operations';\nimport {\n  Box,\n  Container,\n  FormControl,\n  Typography,\n  Button,\n  TextField,\n} from '@mui/material';\nimport { Icon } from 'components/Icons';\nimport { container, button, form, icon } from 'styles';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, onCloseModal }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(updateColumn({ ...values, columnId }));\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Container sx={container.cardForm}>\n      <Typography variant=\"h2\" mb={3}>\n        Edit column\n      </Typography>\n\n      <Formik\n        initialValues={{ title }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <Form onSubmit={handleSubmit}>\n            <FormControl fullWidth>\n              <TextField\n                label=\"Title\"\n                variant=\"outlined\"\n                type=\"text\"\n                id=\"text\"\n                name=\"title\"\n                sx={{ mb: 3 }}\n                value={values.title}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                name=\"Text\"\n                component=\"div\"\n                style={{ color: 'red', fontSize: 12 }}\n              />\n            </FormControl>\n\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              sx={form.button}\n              type=\"submit\"\n            >\n              <Box sx={button.boxIconPlus}>\n                <Icon id={'plus'} sx={icon.plusAdd} />\n              </Box>\n              Add\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n\nexport default EditColumnModal;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from 'store/boards/operations';\n\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from 'components/AddColumn/EditColumnModal';\nimport IconBtn from './IconBtn';\nimport { Card, Stack, Typography } from '@mui/material';\nimport { card } from 'styles';\nimport DeleteConfirmModal from 'components/DeleteConfirmModal/DeleteConfirmModal';\n\nconst ColumnHeader = ({ title, columnId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const [ShowDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setShowDeleteConfirmModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    // if (window.confirm(`Do you really want to delete column ${title}?`)) {\n    dispatch(deleteColumn(columnId));\n    setShowDeleteConfirmModal(false);\n    // }\n  };\n\n  const openDeleteConfirmModal = () => {\n    setShowDeleteConfirmModal(true);\n  };\n\n  return (\n    <>\n      <Card sx={card.header}>\n        <Stack sx={card.headerContainer}>\n          <Typography component=\"h2\" variant=\"h3\">\n            {title}\n          </Typography>\n          <Stack direction=\"row\" spacing={1}>\n            <IconBtn onClick={handleOpenModal} iconId=\"pencil\" />\n            <IconBtn onClick={openDeleteConfirmModal} iconId=\"trash\" />\n          </Stack>\n        </Stack>\n\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <EditColumnModal\n            onCloseModal={handleCloseModal}\n            columnId={columnId}\n            title={title}\n            type=\"Submit\"\n          />\n        </Modal>\n      </Card>\n\n      <DeleteConfirmModal\n        isOpenModal={ShowDeleteConfirmModal}\n        onCloseModal={handleCloseModal}\n        onConfirm={handleDeleteColumn}\n        message=\"Are you sure you want to delete this column?\"\n        title=\"All your tasks in this column will be deleted too.\"\n      />\n    </>\n  );\n};\nexport default ColumnHeader;\n","import { Stack, Box } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectPrioFilter } from 'store/filters/selectors';\nimport { ColumnInnerList } from 'components/DragAndDrop';\nimport { container } from 'styles';\n\nconst TaskList = ({ cards, placeholder }) => {\n  const prio = useSelector(selectPrioFilter);\n\n  const filteredCards =\n    prio === 'all'\n      ? cards\n      : cards.filter(card => {\n          return card?.priority === prio;\n        });\n\n  return (\n    <Box sx={container.taskListScroll}>\n      <Stack sx={container.taskList}>\n        <ColumnInnerList placeholder={placeholder} tasks={filteredCards} />\n        {placeholder}\n      </Stack>\n    </Box>\n  );\n};\nexport default TaskList;\n","import { Box, Button, Stack, SvgIcon } from '@mui/material';\nimport ColumnHeader from 'components/Column/ColumnHeader';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { container, button, card } from 'styles';\nimport { StrictModeDroppable } from './StrictModeDroppable';\nimport TaskList from 'components/Column/TaskList';\nimport sprite from 'components/Icons/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm/AddCardForm';\nimport { useState } from 'react';\nimport { addTask } from 'store/boards/operations';\n\nexport const DNDColumn = ({ column, tasks, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Draggable draggableId={column._id} index={index}>\n      {(provided, snapshot) => (\n        <div {...provided.draggableProps} ref={provided.innerRef}>\n          <Stack\n            sx={{\n              ...card.column,\n              bgcolor: snapshot.draggingOver\n                ? 'background.alphaDND'\n                : 'transparent',\n              borderRadius: snapshot.draggingOver ? '8px' : '0',\n            }}\n          >\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader title={column.title} columnId={column._id} />\n            </div>\n            <StrictModeDroppable droppableId={column._id} type=\"task\">\n              {(provided, snapshot) => (\n                <>\n                  {/* Adding Box for scrolls and for styling */}\n                  <Box\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    // sx={container.dndContainerColumn}\n                    sx={{\n                      ...container.dndContainerColumn,\n                      bgcolor: snapshot.isDraggingOver\n                        ? 'background.alphaDND'\n                        : 'transparent',\n                    }}\n                  >\n                    {/* <div\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                      isdraggingover={`${snapshot.isDraggingOver}`}\n                      style={{ minHeight: 20, maxHeight: 470 }}\n                    > */}\n                    <TaskList\n                      cards={tasks}\n                      placeholder={provided.placeholder}\n                    />\n                    {/* </div> */}\n                  </Box>\n                  <Button\n                    variant=\"contained\"\n                    sx={button.addCard}\n                    // startIcon={<AddBoxIcon />}\n                    onClick={openModalHandler}\n                  >\n                    <Box sx={button.addCardIconBox}>\n                      <SvgIcon sx={button.addCardIcon}>\n                        <svg stroke=\"currentColor\">\n                          <use href={sprite + '#icon-plus'} />\n                        </svg>\n                      </SvgIcon>\n                    </Box>\n                    Add another card\n                  </Button>\n                  <Modal\n                    isOpenModal={showModal}\n                    onCloseModal={closeModalHandler}\n                  >\n                    <AddCardForm\n                      onCloseModal={closeModalHandler}\n                      parentColumn={column._id}\n                      formTitle={'Add card'}\n                      buttonTitle={'Add'}\n                      taskOperation={addTask}\n                    />\n                  </Modal>\n                </>\n              )}\n            </StrictModeDroppable>\n          </Stack>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n","import { useSelector } from 'react-redux';\n// import Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport {\n  selectBoard,\n  selectColumns,\n  selectError,\n} from 'store/boards/selectors';\n\nimport { Box, Typography } from '@mui/material';\nimport { container, text } from 'styles';\nimport { FilterBtn } from 'components/Filter';\n\nimport bgImg from 'images/backgrounds.json';\n\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BoardInnerList, StrictModeDroppable } from 'components/DragAndDrop';\nimport { useDispatch } from 'react-redux';\nimport { handleDragEnd } from 'helpers';\nimport { selectPrioFilter } from 'store/filters/selectors';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst BoardPage = () => {\n  const dispatch = useDispatch();\n  const board = useSelector(selectBoard);\n  const columns = useSelector(selectColumns);\n  const error = useSelector(selectError);\n\n  if (error) {\n    toast.error(error, {\n      position: 'bottom-right',\n    });\n  }\n\n  // console.log('BOARD: ', board);\n  // console.log('COLUMNS: ', columns);\n\n  const filter = useSelector(selectPrioFilter);\n\n  const onDragEnd = result => {\n    if (filter !== 'all') {\n      toast.error(\n        'Please, skip priority filters to drag elements to another position.'\n      );\n      return;\n    }\n\n    handleDragEnd({ result, board, columns, dispatch });\n  };\n\n  // if (board._id === '' || columns[0]._id === '') {\n  //   return <div>Loading...</div>;\n  // } // ----- triggers bug on empty board\n\n  const bgURL =\n    board.background === 0 ? '' : bgImg.find(bg => bg.id === board.background);\n  const bgImage = {\n    background: {\n      zeroUp: `url(\"${bgURL?.retina_m}\") no-repeat 50% 50%`,\n      tablet: `url(\"${bgURL?.retina_t}\") no-repeat 50% 50%`,\n      desktop: `url(\"${bgURL?.retina_d}\") no-repeat 50% 50%`,\n    },\n    backgroundSize: 'cover',\n  };\n\n  return (\n    <>\n      <Box sx={{ ...container.board, ...bgImage }}>\n        <Box sx={container.boardInner}>\n          <Typography component=\"h2\" variant=\"h3\" sx={text.boardTitle}>\n            {board.title}\n          </Typography>\n          <FilterBtn />\n\n          <Box sx={container.columns}>\n            <Box>\n              {/* ---------------------------------------------------------------- */}\n              <DragDropContext\n                onDragStart={() => {}}\n                onDragUpdate={() => {}}\n                onDragEnd={onDragEnd}\n              >\n                <StrictModeDroppable\n                  droppableId={'all-columns'}\n                  direction=\"horizontal\"\n                  type=\"column\"\n                >\n                  {provided => (\n                    <Box\n                      // style={{ outline: '1px dashed teal', display: 'flex' }}\n                      sx={container.columnsInner}\n                      {...provided.droppableProps}\n                      ref={provided.innerRef}\n                    >\n                      {board.columnOrder.map((columnId, index) => {\n                        const column = columns.find(\n                          item => item._id === columnId\n                        );\n\n                        // console.log('COLUMN: ', column);\n\n                        // todo ///////////////////\n                        // if (!column) return null;\n                        return (\n                          <BoardInnerList\n                            key={column._id}\n                            column={column}\n                            tasksArr={column.tasks}\n                            index={index}\n                          />\n                        );\n                      })}\n\n                      {provided.placeholder}\n                    </Box>\n                  )}\n                </StrictModeDroppable>\n              </DragDropContext>\n              {/* ---------------------------------------------------------------- */}\n            </Box>\n            <AddColumnButton />\n          </Box>\n          <ToastContainer autoClose={3000} />\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default BoardPage;\n","import {\n  updateColumnOrder,\n  updateComplexDND,\n  updateSingleTaskOrder,\n} from 'store/boards/boardSlice';\nimport {\n  updateColumnOrderAsync,\n  updateComplexDNDAsync,\n  updateSingleTaskOrderAsync,\n} from 'store/boards/operations';\n\nexport const handleDragEnd = ({ result, board, columns, dispatch }) => {\n  const { destination, source, draggableId, type } = result;\n\n  if (!destination) return;\n\n  if (\n    destination.droppableId === source.droppableId &&\n    destination.index === source.index\n  )\n    return;\n\n  // Dragging columns:\n  if (type === 'column') {\n    const newColumnOrder = Array.from(board.columnOrder);\n    newColumnOrder.splice(source.index, 1);\n    newColumnOrder.splice(destination.index, 0, draggableId);\n\n    // TODO: ---------- on Redux :::\n    dispatch(updateColumnOrder({ boardId: board._id, newColumnOrder }));\n\n    dispatch(updateColumnOrderAsync({ boardId: board._id, newColumnOrder }));\n    //!   To imitate server response error:\n    // dispatch(updateColumnOrderAsync({ boardId: '123456', newColumnOrder }));\n    return;\n  }\n\n  // Dragging tasks:\n\n  // Start column:\n  const start = columns.find(column => column._id === source.droppableId);\n\n  // Finish column:\n  const finish = columns.find(column => column._id === destination.droppableId);\n\n  if (start === finish) {\n    const newTaskOrder = Array.from(start.taskOrder);\n    newTaskOrder.splice(source.index, 1);\n    newTaskOrder.splice(destination.index, 0, draggableId);\n\n    // TODO: ---------- on Redux :::\n    dispatch(updateSingleTaskOrder({ columnId: start._id, newTaskOrder }));\n\n    dispatch(\n      updateSingleTaskOrderAsync({\n        taskId: draggableId,\n        columnId: start._id,\n        newTaskOrder,\n      })\n    );\n    //!   To imitate server response error:\n    // dispatch(\n    //   updateSingleTaskOrderAsync({\n    //     taskId: '12345657',\n    //     columnId: start._id,\n    //     newTaskOrder,\n    //   })\n    // );\n    return;\n  }\n\n  // Moving from one column to another:\n\n  const draggableTask = start.tasks.find(task => task._id === draggableId);\n  const newDraggableTask = {\n    ...draggableTask,\n    parentColumn: finish._id,\n  };\n\n  const startTaskOrder = Array.from(start.taskOrder);\n  startTaskOrder.splice(source.index, 1);\n\n  const startTasksArr = Array.from(start.tasks);\n  const draggableTaskIndex = startTasksArr.findIndex(\n    item => item._id === draggableId\n  );\n  startTasksArr.splice(draggableTaskIndex, 1);\n\n  const newStart = {\n    ...start,\n    taskOrder: startTaskOrder,\n    tasks: startTasksArr,\n  };\n  // console.log('NEW START COLUMN: ', newStart);\n\n  const finishTaskOrder = Array.from(finish.taskOrder);\n  finishTaskOrder.splice(destination.index, 0, draggableId);\n\n  const finishTasksArr = Array.from(finish.tasks);\n  finishTasksArr.push(newDraggableTask);\n\n  const newFinish = {\n    ...finish,\n    taskOrder: finishTaskOrder,\n    tasks: finishTasksArr,\n  };\n  // console.log('NEW FINISH COLUMN: ', newFinish);\n\n  // TODO: ---------- on Redux :::\n  dispatch(\n    updateComplexDND({\n      // updatedTask: newDraggableTask,\n      updatedStartColumn: newStart,\n      updatedFinishColumn: newFinish,\n    })\n  );\n\n  dispatch(\n    updateComplexDNDAsync({\n      taskId: draggableId,\n      finishId: finish._id,\n      startTaskOrder,\n      finishTaskOrder,\n    })\n  );\n  //!   To imitate server response error:\n  //   dispatch(\n  //     updateComplexDNDAsync({\n  //       taskId: '12345678',\n  //       finishId: finish._id,\n  //       startTaskOrder,\n  //       finishTaskOrder,\n  //     })\n  //   );\n  return;\n};\n"],"names":["_ref","name","otherProps","_objectWithoutProperties","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","configTextfield","_objectSpread","fullWidth","variant","touched","error","helperText","_jsx","TextField","validationSchema","Yup","shape","title","required","initialValues","onCloseModal","boardId","useParams","dispatch","useDispatch","parentBoard","_jsxs","Container","sx","container","children","Typography","mb","Formik","onSubmit","values","_ref2","resetForm","console","log","addColumn","_ref3","handleChange","handleSubmit","Form","FormControl","Textfield","label","SubmitButton","_useState","useState","_useState2","showModal","setShowModal","handleCloseModal","_Fragment","Button","button","color","onClick","Box","Icon","id","icon","component","Modal","isOpenModal","AddColumnModal","type","priority","priorityColor","PrIcon","styled","borderRadius","width","height","backgroundColor","btncolor","PrCheckedIcon","border","concat","position","top","left","transform","display","content","props","priorityColorSwitcher","Radio","disableRipple","checkedIcon","StyledFormControlLabel","FormControlLabel","_","checked","userTheme","useSelector","selectTheme","CustomControlLabel","radioGroup","useRadioGroup","value","selectPrioFilter","state","filters","prio","ctrlLabelStyles","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","letterSpacing","FilterBar","currentPrio","filter","setFilter","useEffect","setPrioFilter","p","borderBottom","borderColor","paddingBottom","marginBottom","style","justifyContent","marginTop","FormLabel","RadioGroup","onChange","e","target","control","PriorityRadioBtn","textDecorationLine","textTransform","pointerEvents","textDecoration","FilterBtn","zeroUp","tablet","desktop","right","gap","alignItems","transition","cursor","SvgIcon","StrictModeDroppable","enabled","setEnabled","animation","requestAnimationFrame","cancelAnimationFrame","Droppable","IconBtnRoot","ButtonBase","theme","padding","margin","iconId","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","currentDate","Date","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","desktopModeMediaQuery","showDaysOutsideCurrentMonth","newValue","shouldDisableDate","date","isPastDate","$D","getDate","$M","getMonth","$y","getFullYear","isToday","slots","openPickerIcon","textField","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","whiteSpace","fill","borderBottomWidth","borderBottomStyle","boxSizing","background","minWidth","maxWidth","borderWidth","opacity","formatDate","param","moment","getDeadlineInfo","d","today","endOf","tomorrow","add","fromNow","determineRemainDays","$d","description","deadline","parentColumn","formTitle","buttonTitle","taskOperation","taskId","initData","now","setDeadline","_useState3","_useState4","setPriority","multiline","rows","row","defaultValue","event","ml","iconStyles","svgAlert","index","ShowDeleteConfirmModal","setShowDeleteConfirmModal","openModalHandler","closeModalHandler","handleDeleteTask","deleteTask","openDeleteConfirmModal","priorityStyles","card","bgcolor","handleIconClick","Draggable","draggableId","provided","snapshot","isDragging","draggableProps","dragHandleProps","ref","innerRef","Card","Stack","direction","spacing","marginRight","flexGrow","Alerticon","IconBtn","AddCardForm","updateTask","DeleteConfirmModal","onConfirm","message","ColumnInnerList","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","nextProps","tasks","this","_this$props$tasks","map","task","_id","Task","Component","BoardInnerList","_React$PureComponent","_this$props","column","tasksArr","taskOrder","find","DNDColumn","React","columnId","updateColumn","ErrorMessage","form","EditColumnModal","deleteColumn","cards","placeholder","filteredCards","draggingOver","ColumnHeader","droppableId","droppableProps","isDraggingOver","TaskList","stroke","href","sprite","addTask","board","selectBoard","columns","selectColumns","selectError","toast","bgURL","bgImg","bg","bgImage","retina_m","retina_t","retina_d","backgroundSize","text","DragDropContext","onDragStart","onDragUpdate","onDragEnd","result","destination","source","newColumnOrder","Array","from","columnOrder","splice","updateColumnOrder","updateColumnOrderAsync","start","finish","newTaskOrder","updateSingleTaskOrder","updateSingleTaskOrderAsync","draggableTask","newDraggableTask","startTaskOrder","startTasksArr","draggableTaskIndex","findIndex","item","newStart","finishTaskOrder","finishTasksArr","push","newFinish","updateComplexDND","updatedStartColumn","updatedFinishColumn","updateComplexDNDAsync","finishId","handleDragEnd","AddColumnButton","ToastContainer","autoClose"],"sourceRoot":""}