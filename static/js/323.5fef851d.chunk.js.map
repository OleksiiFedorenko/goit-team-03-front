{"version":3,"file":"static/js/323.5fef851d.chunk.js","mappings":"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","sources":["components/AddColumn/AddColumnModal.styled.js","components/AddColumn/EditColumnModal.jsx","components/Column/ColumnHeader.jsx","helpers/priorityColorSwitcher.js","webpack://react-homework-template/./src/components/Column/Task.module.css?558a","components/Column/Task.jsx","components/Column/TaskList.jsx","components/FormsUI/TextField/index.js","components/FormsUI/SubmitButton/index.js","components/FormsUI/RadioButtons/PriorityRadioBtn.jsx","components/FormsUI/DatePicker/DatePicker.jsx","components/AddCardForm/AddCardForm.jsx","components/Column/Column.jsx","components/AddColumn/AddColumnButton.styled.js","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","pages/BoardPage.jsx"],"sourcesContent":["\n\nimport styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: #161616;\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color:#fff;\n  border: 1px solid #5255BC;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color:#161616;\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: #161616;\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: #5255BC;\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: #fff;\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: #fff;\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616;\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\n\nimport { updateColumn } from 'store/boards/operations';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, onCloseModal }) => { \n const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(updateColumn({...values, columnId}));\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={{title}}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport { Icon } from 'components/Icons';\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from 'components/AddColumn/EditColumnModal';\nimport { deleteColumn } from 'store/boards/operations';\n\nconst ColumnHeader = ({ title, columnId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    if (window.confirm(`Do you really want to delete column ${title}?`)) {\n      dispatch(deleteColumn(columnId));\n    }\n  };\n  return (\n    <div>\n      <Card>\n        <CardHeader title={title} />\n        <IconButton onClick={handleOpenModal}>\n          <Icon id={'pencil'} />\n        </IconButton>\n        <IconButton onClick={handleDeleteColumn}>\n          <Icon id={'trash'} />\n        </IconButton>\n\n        {showModal && (\n          <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n            <EditColumnModal\n              onCloseModal={handleCloseModal}\n              columnId={columnId}\n              title={title}\n              type=\"Submit\"\n            />\n          </Modal>\n        )}\n      </Card>\n    </div>\n  );\n};\nexport default ColumnHeader;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'Low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'Medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'High':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'Without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","// extracted by mini-css-extract-plugin\nexport default {\"truncate-lines\":\"Task_truncate-lines__7UK0E\"};","import Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport CardContent from '@mui/material/CardContent';\nimport { Typography } from '@mui/material';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport { Icon } from 'components/Icons';\nimport { IconButton } from '@mui/material';\n\nimport css from './Task.module.css';\n\nconst TruncatedText = ({ text }) => (\n  <Typography className={css['truncate-lines']}>{text}</Typography>\n);\n\nconst Task = ({ name, description, priority, deadline }) => {\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyle = {\n    '&::before': {\n      content: '\"\"',\n      height: '12px',\n      width: '12px',\n      backgroundColor: `${priorityColor}`,\n      borderRadius: '50%',\n      display: 'inline-block',\n    },\n  };\n\n  return (\n    <Card\n      elevation={2}\n      sx={{\n        borderLeft: `4px solid ${priorityColor}`,\n      }}\n    >\n      <CardHeader title={name} />\n      <CardContent>\n        <TruncatedText text={description} />\n\n        <Divider variant=\"middle\" />\n\n        <Stack spacing={2} direction=\"row\">\n          <Stack>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Priority\n            </Typography>\n            <Typography sx={priorityStyle}>{priority}</Typography>\n          </Stack>\n\n          <Stack>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Deadline\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {deadline}\n            </Typography>\n          </Stack>\n          <Stack\n            direction=\"row\"\n            alignItems=\"flex-end\"\n            justifyContent=\"flex-end\"\n          >\n            <IconButton>\n              <Icon id={'alert'} />\n            </IconButton>\n\n            <IconButton>\n              <Icon id={'move'} />\n            </IconButton>\n\n            <IconButton>\n              <Icon id={'pencil'} />\n            </IconButton>\n            <IconButton>\n              <Icon id={'trash'} />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n};\nexport default Task;\n","import { Box } from '@mui/material';\nimport Task from './Task';\n\nconst TaskList = ({ cards }) => {\n  return (\n    <Box\n      sx={{\n        overflowY: 'auto',\n        overflowX: 'hidden',\n      }}\n    >\n      {cards.map(card => {\n        const { name, description, priority, deadline } = card;\n\n        return (\n          <Task\n            key={card.id}\n            name={name}\n            description={description}\n            priority={priority}\n            deadline={deadline}\n          />\n        );\n      })}\n    </Box>\n  );\n};\nexport default TaskList;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n\nconst TextFieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n\n  return <TextField {...configTextfield} />;\n};\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\n// import { Icon } from 'components/Icons';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\n\nconst SubmitButton = ({ children, ...otherProps }) => {\n  const { submitForm } = useFormikContext();\n  const handleSubmit = () => {\n    submitForm();\n  };\n  const configButton = {\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n  const typographyProps = {\n    style: {\n      textTransform: 'none',\n    },\n  };\n  const iconStyle = {\n    fill: 'white',\n    fontSize: '28px',\n  };\n  return (\n    <Button startIcon={<AddBoxIcon style={iconStyle} />} {...configButton}>\n      <span {...typographyProps}>{children}</span>\n    </Button>\n  );\n};\nexport default SubmitButton;\n","import React from 'react';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\n\nconst PrIcon = styled('span')(({ btncolor }) => ({\n  borderRadius: '50%',\n  width: 14,\n  height: 14,\n  backgroundColor: btncolor || '#BEDBB0',\n}));\n\nconst PrCheckedIcon = styled(PrIcon)(({ btncolor }) => ({\n  backgroundColor: 'transparent',\n  border: `1px solid ${btncolor || '#BEDBB0'}`,\n  position: 'relative',\n  '&:before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'block',\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: btncolor || '#BEDBB0',\n    content: '\"\"',\n  },\n}));\n\nconst PriorityRadioBtn = props => {\n  const btncolor = priorityColorSwitcher(props.priority);\n\n  return (\n    <Radio\n      disableRipple\n      icon={<PrIcon btncolor={btncolor} />}\n      checkedIcon={<PrCheckedIcon btncolor={btncolor} />}\n      {...props}\n    />\n  );\n};\nexport default PriorityRadioBtn;\n","import React from 'react';\nimport { TextField } from '@mui/material';\nimport { useField } from 'formik';\n\nconst DatePicker = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n  const configDatePicker = {\n    ...field,\n    ...otherProps,\n    type: 'date',\n    variant: 'standard',\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true,\n    },\n  };\n  if (meta && meta.touched && meta.error) {\n    configDatePicker.error = true;\n    configDatePicker.helperText = meta.error;\n  }\n  return <TextField {...configDatePicker} />;\n};\nexport default DatePicker;\n","import * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Container } from '@mui/material';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Typography, RadioGroup, FormLabel, FormControl } from '@mui/material';\nimport DatePicker from 'components/FormsUI/DatePicker/DatePicker';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  deadline: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  deadline: Yup.date().required('Required'),\n});\n\nconst handleSubmit = values => {\n  console.log(values);\n  //setSubmitting(false);\n  // resetForm();\n  //onCloseModal();\n};\n\nconst AddCardForm = () => {\n  return (\n    <Container>\n      <Formik\n        initialValues={{ ...initialValues }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Typography variant=\"h2\" component=\"h2\" mb={3}>\n            Add card\n          </Typography>\n          <Textfield\n            name=\"title\"\n            label=\"Title\"\n            sx={{\n              marginBottom: '14px',\n            }}\n          />\n          <Textfield\n            name=\"description\"\n            label=\"Description\"\n            multiline={true}\n            rows={6}\n            sx={{\n              marginBottom: '24px',\n            }}\n          />\n\n          <FormControl>\n            <FormLabel\n              id=\"priority-radios\"\n              sx={{\n                fontSize: 12,\n                lineHeight: 1.5,\n                letterSpacing: '-0.02em',\n                color: 'GrayText',\n              }}\n            >\n              Label color\n            </FormLabel>\n            <RadioGroup\n              sx={{\n                marginBottom: '14px',\n              }}\n              row\n              defaultValue=\"low\"\n              aria-labelledby=\"priority-radios\"\n              name=\"priorityBtn\"\n            >\n              <FormControlLabel\n                value=\"low\"\n                control={<PriorityRadioBtn priority=\"Low\" />}\n              />\n              <FormControlLabel\n                value=\"medium\"\n                control={\n                  <PriorityRadioBtn priority=\"Medium\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"High\"\n                control={\n                  <PriorityRadioBtn priority=\"High\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"Without\"\n                control={\n                  <PriorityRadioBtn priority=\"Without\" sx={{ ml: '-14px' }} />\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          <Typography variant=\"body2\" component=\"h4\" mb={0.5}>\n            Deadline\n          </Typography>\n          <DatePicker\n            name=\"deadline\"\n            sx={{\n              marginBottom: '40px',\n            }}\n          />\n\n          <SubmitButton>Add</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default AddCardForm;\n","import { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport ColumnHeader from './ColumnHeader';\nimport TaskList from './TaskList';\nimport { Stack } from '@mui/material';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\n\nconst Column = ({ column }) => {\n  const [showModal, setShowModal] = useState(false);\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Stack\n      sx={{\n        width: '100%',\n        maxWidth: 360,\n        height: '100vh',\n      }}\n    >\n      <ColumnHeader title={column.title} columnId={column._id} />\n      <TaskList cards={column.taskOrder} />\n      <Button\n        variant=\"contained\"\n        startIcon={<AddBoxIcon />}\n        onClick={openModalHandler}\n      >\n        Add another card\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm />\n      </Modal>\n    </Stack>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  /* position: absolute;\n  top: 80px;\n  left: 650px; */\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: #5255bc;\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconStyle = styled.svg`\n  width: 14px;\n  height: 14px;\n  color: #ffffff;\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addColumn } from 'store/boards/operations';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal }) => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n\n  const parentBoard = boardId;\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log({...values, parentBoard})\n    dispatch(addColumn({ ...values, parentBoard }));\n    resetForm();\n    onCloseModal();\n  };\n  return (\n    <Section>\n      <SectionTitle>Add column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <Icon id={'plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Add\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddColumnModal;\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Button, IconStyle, IconWrapper, Text } from './AddColumnButton.styled';\nimport AddColumnModal from './AddColumnModal';\nimport { Icon } from 'components/Icons';\n\nconst AddColumnButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <>\n      <Button type=\"button\" onClick={handleOpenModal}>\n        <IconWrapper>\n          <IconStyle>\n            <Icon id={'plus'} />\n          </IconStyle>\n        </IconWrapper>\n        <Text>Add another column</Text>\n      </Button>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <AddColumnModal\n            onCloseModal={handleCloseModal}\n            title=\"New board\"\n            type=\"Submit\"\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default AddColumnButton;\n","import { useSelector } from 'react-redux';\nimport Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport { selectBoard, selectColumns } from 'store/boards/selectors';\n\nimport { Box, Typography } from '@mui/material';\nimport { container, text } from 'styles';\n\nconst BoardPage = () => {\n  const board = useSelector(selectBoard);\n  const columns = useSelector(selectColumns);\n\n  return (\n    <Box sx={container.board}>\n      <Box sx={container.boardInner}>\n        <Typography component=\"h2\" variant=\"h3\" sx={text.boardTitle}>\n          {board.title}\n        </Typography>\n\n        <Box sx={container.columns}>\n          <Box sx={container.columnsInner}>\n            {columns.map(column => {\n              return <Column key={column._id} column={column} />;\n            })}\n          </Box>\n          <AddColumnButton />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BoardPage;\n"],"names":["Section","styled","SectionTitle","FormWrapper","TitleInput","Field","AuthFormSubmitButton","ButtonPlus","PlusIcon","ErrorSection","ErrorMessage","ModalForm","Form","validationSchema","Yup","shape","title","required","columnId","onCloseModal","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","updateColumn","name","component","type","id","placeholder","useState","showModal","setShowModal","handleCloseModal","Card","CardHeader","IconButton","onClick","window","confirm","deleteColumn","Modal","isOpenModal","priority","priorityColor","TruncatedText","text","Typography","className","css","description","deadline","priorityColorSwitcher","priorityStyle","content","height","width","backgroundColor","borderRadius","display","elevation","sx","borderLeft","CardContent","Divider","variant","Stack","spacing","direction","color","alignItems","justifyContent","cards","Box","overflowY","overflowX","map","card","otherProps","useField","field","meta","configTextfield","fullWidth","touched","error","helperText","TextField","children","submitForm","useFormikContext","configButton","Button","startIcon","AddBox","style","fill","fontSize","textTransform","PrIcon","btncolor","PrCheckedIcon","border","position","top","left","transform","props","Radio","disableRipple","icon","checkedIcon","configDatePicker","InputLabelProps","shrink","handleSubmit","console","log","Container","mb","label","marginBottom","multiline","rows","FormControl","FormLabel","lineHeight","letterSpacing","RadioGroup","row","defaultValue","FormControlLabel","value","control","ml","column","maxWidth","_id","taskOrder","IconWrapper","IconStyle","Text","boardId","useParams","parentBoard","addColumn","board","useSelector","selectBoard","columns","selectColumns","container"],"sourceRoot":""}