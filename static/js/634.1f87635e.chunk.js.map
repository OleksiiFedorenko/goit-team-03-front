{"version":3,"file":"static/js/634.1f87635e.chunk.js","mappings":"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","sources":["components/AddColumn/EditColumnModal.jsx","components/Column/IconBtn.jsx","components/Column/ColumnHeader.jsx","helpers/priorityColorSwitcher.js","components/FormsUI/TextField/index.js","components/FormsUI/SubmitButton/PlusIcon.jsx","components/FormsUI/SubmitButton/SubmitButton.jsx","components/FormsUI/RadioButtons/PriorityRadioBtn.jsx","components/FormsUI/DatePicker/DatePicker.jsx","components/AddCardForm/AddCardForm.jsx","components/Column/Task.jsx","store/filters/selectors.js","components/Column/TaskList.jsx","components/Column/Column.jsx","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","components/Filter/CustomControlLabel.jsx","components/Filter/FilterBar.jsx","components/Filter/FilterBtn.jsx","pages/BoardPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { updateColumn } from 'store/boards/operations';\nimport { Box, FormControl, Typography, Button, SvgIcon, TextField } from '@mui/material';\nimport {container, button, form} from 'styles';\nimport sprite from 'components/Icons/sprite.svg';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, onCloseModal }) => { \n const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(updateColumn({...values, columnId}));\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n        <Box sx={container.addColumnContainer}>\n        <Typography variant='h2' mb={3}>Edit column</Typography>\n\n        <Formik\n          initialValues={{title}}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n>\n          {({ values, handleChange, handleSubmit }) => (\n          <Form onSubmit={handleSubmit}>\n            <FormControl fullWidth>\n              <TextField\n                label=\"Title\"\n                variant=\"outlined\"\n                type=\"text\"\n                id=\"text\"\n                name=\"title\"\n                sx={{mb: 3}}\n                value={values.title}\n                onChange={handleChange}\n              /> \n              <ErrorMessage\n                name=\"Text\"\n                component=\"div\"\n                style={{ color: 'red',fontSize: 12 }}\n              />  \n            </FormControl>\n\n            <Button\n               color=\"primary\"\n               variant=\"contained\"\n               fullWidth\n               sx={form.button}\n               type=\"submit\">\n              <Box sx={button.boxIconPlus}>\n                <SvgIcon sx={button.svgIconPlus}>\n                  <svg stroke=\"currentColor\">\n                      <use href={sprite + '#icon-plus'} />\n                  </svg>             \n                </SvgIcon>\n              </Box>                 \n                Add\n            </Button>\n          </Form>\n          )}\n        </Formik>\n        </Box>\n  );\n};\n\nexport default EditColumnModal;","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { Icon } from 'components/Icons';\n\nconst IconBtnRoot = styled(ButtonBase)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n  '& svg': {\n    stroke: theme.palette.text.sideSecond,\n    transition: 'stroke 0.3s',\n  },\n\n  '&:hover': {\n    color: theme.palette.text.sideSecond,\n    '& svg': {\n      stroke: theme.palette.text.primary,\n    },\n  },\n  '& .MuiTouchRipple-root': {\n    display: 'none',\n  },\n}));\n\nconst IconBtn = ({ onClick, iconId }) => {\n  return (\n    <IconBtnRoot onClick={onClick}>\n      <Icon id={iconId} />\n    </IconBtnRoot>\n  );\n};\n\nexport default IconBtn;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from 'store/boards/operations';\n\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from 'components/AddColumn/EditColumnModal';\nimport IconBtn from './IconBtn';\nimport { Card, Stack, Typography } from '@mui/material';\nimport { card } from 'styles';\n\nconst ColumnHeader = ({ title, columnId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    if (window.confirm(`Do you really want to delete column ${title}?`)) {\n      dispatch(deleteColumn(columnId));\n    }\n  };\n\n  return (\n    <Card sx={card.header}>\n      <Stack sx={card.headerContainer}>\n        <Typography component=\"h2\" variant=\"h3\">\n          {title}\n        </Typography>\n        <Stack direction=\"row\" spacing={1}>\n          <IconBtn onClick={handleOpenModal} iconId=\"pencil\" />\n          <IconBtn onClick={handleDeleteColumn} iconId=\"trash\" />\n        </Stack>\n      </Stack>\n\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <EditColumnModal\n          onCloseModal={handleCloseModal}\n          columnId={columnId}\n          title={title}\n          type=\"Submit\"\n        />\n      </Modal>\n    </Card>\n  );\n};\nexport default ColumnHeader;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'high':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n\nconst TextFieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n\n  return <TextField {...configTextfield} />;\n};\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Icon } from 'components/Icons';\n\nconst StyledPlusIconContainer = styled('div')(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  background: theme.palette.background.boxPlus,\n  width: '28px',\n  height: '28px',\n  borderRadius: '4px',\n\n  '& svg': {\n    stroke: theme.palette.secondary.main,\n    '&:hover': {\n      stroke: theme.palette.secondary.main,\n    },\n  },\n}));\n\nconst PlusIcon = () => {\n  return (\n    <StyledPlusIconContainer>\n      <Icon id=\"plus\" />\n    </StyledPlusIconContainer>\n  );\n};\nexport default PlusIcon;\n","import React from 'react';\nimport { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\nimport PlusIcon from './PlusIcon';\n\nconst Testbutton = ({ children, ...otherProps }) => {\n  const { submitForm } = useFormikContext();\n  const handleSubmit = () => {\n    submitForm();\n  };\n  const configButton = {\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n  const typographyProps = {\n    style: {\n      textTransform: 'none',\n    },\n  };\n\n  return (\n    <Button startIcon={<PlusIcon />} {...configButton}>\n      <span {...typographyProps}>{children}</span>\n    </Button>\n  );\n};\nexport default Testbutton;\n","import React from 'react';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\n\nconst PrIcon = styled('span')(({ btncolor }) => ({\n  borderRadius: '50%',\n  width: 14,\n  height: 14,\n  backgroundColor: btncolor || '#BEDBB0',\n}));\n\nconst PrCheckedIcon = styled(PrIcon)(({ btncolor }) => ({\n  backgroundColor: 'transparent',\n  border: `1px solid ${btncolor || '#BEDBB0'}`,\n  position: 'relative',\n  '&:before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'block',\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: btncolor || '#BEDBB0',\n    content: '\"\"',\n  },\n}));\n\nconst PriorityRadioBtn = props => {\n  const btncolor = priorityColorSwitcher(props.priority);\n\n  return (\n    <Radio\n      disableRipple\n      icon={<PrIcon btncolor={btncolor} />}\n      checkedIcon={<PrCheckedIcon btncolor={btncolor} />}\n      {...props}\n    />\n  );\n};\nexport default PriorityRadioBtn;\n","import React from 'react';\nimport { TextField } from '@mui/material';\nimport { useField } from 'formik';\n\nconst DatePicker = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n  const configDatePicker = {\n    ...field,\n    ...otherProps,\n    type: 'date',\n    variant: 'standard',\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true,\n    },\n  };\n  if (meta && meta.touched && meta.error) {\n    configDatePicker.error = true;\n    configDatePicker.helperText = meta.error;\n  }\n  return <TextField {...configDatePicker} />;\n};\nexport default DatePicker;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Container } from '@mui/material';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Typography, RadioGroup, FormLabel, FormControl } from '@mui/material';\nimport DatePicker from 'components/FormsUI/DatePicker/DatePicker';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  deadline: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  deadline: Yup.date().required(),\n});\n\nconst AddCardForm = ({\n  parentColumn,\n  onCloseModal,\n  formTitle,\n  buttonTitle,\n  taskOperation,\n  taskId,\n  initData,\n}) => {\n  const dispatch = useDispatch();\n  const [priority, setPriority] = useState('without');\n\n  const handleChangePriority = event => {\n    setPriority(event.target.value);\n  };\n\n  const handleSubmit = values => {\n    // changing the deadline to the needed format\n    const formattedDate = values.deadline.split('-').reverse().join('-');\n\n    dispatch(\n      taskOperation({\n        ...values,\n        parentColumn,\n        priority,\n        taskId,\n        deadline: formattedDate,\n      })\n    );\n    //setSubmitting(false);\n    // resetForm();\n    onCloseModal();\n  };\n  return (\n    <Container sx={{ maxWidth: '302px', p: 0 }}>\n      <Formik\n        initialValues={initData ? initData : initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Typography variant=\"h2\" component=\"h2\" mb={3}>\n            {formTitle}\n          </Typography>\n          <Textfield\n            name=\"title\"\n            label=\"Title\"\n            sx={{\n              marginBottom: '14px',\n            }}\n          />\n          <Textfield\n            name=\"description\"\n            label=\"Description\"\n            multiline={true}\n            rows={6}\n            sx={{\n              marginBottom: '24px',\n            }}\n          />\n\n          <FormControl>\n            <FormLabel\n              id=\"priority-radios\"\n              sx={{\n                fontSize: 12,\n                lineHeight: 1.5,\n                letterSpacing: '-0.02em',\n                color: 'GrayText',\n              }}\n            >\n              Label color\n            </FormLabel>\n            <RadioGroup\n              sx={{\n                marginBottom: '14px',\n              }}\n              row\n              defaultValue=\"low\"\n              aria-labelledby=\"priority-radios\"\n              name=\"priority\"\n              value={priority}\n              onChange={handleChangePriority}\n            >\n              <FormControlLabel\n                value=\"low\"\n                control={<PriorityRadioBtn priority=\"low\" />}\n              />\n              <FormControlLabel\n                value=\"medium\"\n                control={\n                  <PriorityRadioBtn priority=\"medium\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"high\"\n                control={\n                  <PriorityRadioBtn priority=\"high\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"without\"\n                control={\n                  <PriorityRadioBtn priority=\"without\" sx={{ ml: '-14px' }} />\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          <Typography variant=\"body2\" component=\"h4\" mb={0.5}>\n            Deadline\n          </Typography>\n          <DatePicker\n            name=\"deadline\"\n            sx={{\n              marginBottom: '40px',\n            }}\n          />\n          <SubmitButton>{buttonTitle}</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default AddCardForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateTask, deleteTask } from 'store/boards/operations';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport IconBtn from './IconBtn';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\n\nimport { Card, Typography, Stack, Box } from '@mui/material';\nimport { card } from 'styles';\n\nconst Task = ({ name, description, priority, deadline, taskId }) => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteTask = () => {\n    if (window.confirm(`Do you really want to delete task ${name}?`)) {\n      dispatch(deleteTask(taskId));\n    }\n  };\n\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyles = {\n    textTransform: 'capitalize',\n    '&::before': {\n      ...card.priorityCircle,\n      bgcolor: priorityColor,\n    },\n  };\n  const handleIconClick = () => {};\n\n  return (\n    <Card\n      sx={{\n        ...card.task,\n        borderLeft: `4px solid ${priorityColor}`,\n      }}\n    >\n      <Box>\n        <Box sx={card.taskMainBox}>\n          <Typography variant=\"h5\" component=\"h3\" mb={1}>\n            {name}\n          </Typography>\n          <Typography variant=\"body2\" sx={card.taskDescription}>\n            {description}\n          </Typography>\n        </Box>\n\n        {/* components below devider       */}\n\n        <Box>\n          <Stack direction=\"row\">\n            {/* priority container      */}\n            <Stack\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-start\"\n              spacing={0}\n              sx={{ marginRight: '14px' }}\n            >\n              <Box>\n                <Typography variant=\"caption\" color=\"text.sideSecond\">\n                  Priority\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant=\"h6\" sx={priorityStyles}>\n                  {priority}\n                </Typography>\n              </Box>\n            </Stack>\n\n            {/* deadline container     */}\n            <Stack\n              flexGrow={1}\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-start\"\n              spacing={0}\n            >\n              <Box>\n                <Typography variant=\"caption\" color=\"text.sideSecond\">\n                  Deadline\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant=\"h6\" color=\"text.primary\">\n                  {deadline}\n                </Typography>\n              </Box>\n            </Stack>\n\n            {/* icons container     */}\n\n            <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-end\"\n              spacing={1}\n            >\n              <Box>\n                <IconBtn onClick={handleIconClick} iconId=\"alert\" />\n              </Box>\n              <Box>\n                <IconBtn onClick={handleIconClick} iconId=\"move\" />\n              </Box>\n\n              <Box>\n                <IconBtn onClick={openModalHandler} iconId=\"pencil\" />\n              </Box>\n\n              <Box>\n                <IconBtn onClick={handleDeleteTask} iconId=\"trash\" />\n              </Box>\n            </Stack>\n          </Stack>\n        </Box>\n      </Box>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm\n          onCloseModal={closeModalHandler}\n          taskId={taskId}\n          formTitle={'Edit card'}\n          buttonTitle={'Edit'}\n          taskOperation={updateTask}\n          initData={{ title: name, description, priority, deadline }}\n        />\n      </Modal>\n    </Card>\n  );\n};\nexport default Task;\n","export const selectPrioFilter = state => state.filters.prio;\n","import { Stack } from '@mui/material';\nimport Task from './Task';\nimport { useSelector } from 'react-redux';\nimport { selectPrioFilter } from 'store/filters/selectors';\n\nconst TaskList = ({ cards }) => {\n  const prio = useSelector(selectPrioFilter);\n  const filteredCards =\n    prio === 'all' ? cards : cards.filter(card => card.priority === prio);\n\n  return (\n    <Stack\n      sx={{\n        // overflowY: 'auto',\n        // overflowX: 'hidden',\n        gap: '8px',\n      }}\n    >\n      {filteredCards &&\n        filteredCards.map(card => {\n          return (\n            <Task\n              key={card._id}\n              taskId={card._id}\n              name={card.title}\n              description={card.description}\n              priority={card.priority}\n              deadline={card.deadline}\n            />\n          );\n        })}\n    </Stack>\n  );\n};\nexport default TaskList;\n","import { useState } from 'react';\nimport { addTask } from 'store/boards/operations';\nimport ColumnHeader from './ColumnHeader';\nimport TaskList from './TaskList';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\n\nimport sprite from 'components/Icons/sprite.svg';\nimport { Stack, Button, Box, SvgIcon } from '@mui/material';\n// import AddBoxIcon from '@mui/icons-material/AddBox';\nimport { card, button } from 'styles';\n\nconst Column = ({ column }) => {\n  const [showModal, setShowModal] = useState(false);\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Stack sx={card.column}>\n      <ColumnHeader title={column.title} columnId={column._id} />\n      <TaskList cards={column.tasks} />\n      <Button\n        variant=\"contained\"\n        sx={button.addCard}\n        // startIcon={<AddBoxIcon />}\n        onClick={openModalHandler}\n      >\n        <Box sx={button.addCardIconBox}>\n          <SvgIcon sx={button.addCardIcon}>\n            <svg stroke=\"currentColor\">\n              <use href={sprite + '#icon-plus'} />\n            </svg>\n          </SvgIcon>\n        </Box>\n        Add another card\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm\n          onCloseModal={closeModalHandler}\n          parentColumn={column._id}\n          formTitle={'Add card'}\n          buttonTitle={'Add'}\n          taskOperation={addTask}\n        />\n      </Modal>\n    </Stack>\n  );\n};\n\nexport default Column;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addColumn } from 'store/boards/operations';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, FormControl, Typography, Button, SvgIcon, TextField } from '@mui/material';\nimport {container, button, form} from 'styles';\nimport sprite from 'components/Icons/sprite.svg';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal }) => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n\n  const parentBoard = boardId;\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log({...values, parentBoard})\n    dispatch(addColumn({ ...values, parentBoard }));\n    resetForm();\n    onCloseModal();\n  };\n  return (\n    <Box sx={container.addColumnContainer}>\n      <Typography variant='h2' mb={3}>Add column</Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n      {({ values, handleChange, handleSubmit }) => (\n        <Form onSubmit={handleSubmit}>\n          <FormControl fullWidth>          \n            <TextField\n              label=\"Title\"\n              variant=\"outlined\"\n              type=\"text\"\n              id=\"text\"\n              name=\"title\"\n              sx={{mb: 3}}\n              value={values.title}\n              onChange={handleChange}\n            />\n            <ErrorMessage\n                name=\"Title\"\n                component=\"div\"\n                style={{ color: 'red',fontSize: 12 }}\n              />                  \n          </FormControl>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              sx={form.button}\n              type=\"submit\"             \n            >\n              <Box sx={button.boxIconPlus}>\n                  <SvgIcon sx={button.svgIconPlus}>\n                    <svg stroke=\"currentColor\">\n                            <use href={sprite + '#icon-plus'} />\n                    </svg>             \n                  </SvgIcon>\n              </Box>                 \n              Add\n            </Button>\n        </Form>\n      )}\n      </Formik>\n    </Box>     \n  );\n};\n\nexport default AddColumnModal;\n\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport AddColumnModal from './AddColumnModal';\nimport { Button, Typography, Box, SvgIcon } from '@mui/material';\nimport { button } from 'styles';\nimport sprite from 'components/Icons/sprite.svg';\n\nconst AddColumnButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <>\n      <Button\n        sx={button.addColumnBtn}\n        color=\"secondary\"\n        onClick={handleOpenModal}\n      >\n        <Box sx={button.addColumnIconBox}>\n          <SvgIcon sx={button.addColumnIcon}>\n            <svg stroke=\"currentColor\">\n              <use href={sprite + '#icon-plus'} />\n            </svg>\n          </SvgIcon>\n        </Box>\n        <Typography variant=\"h3\" component=\"span\">\n          Add another column\n        </Typography>\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <AddColumnModal\n          onCloseModal={handleCloseModal}\n          title=\"New board\"\n          type=\"Submit\"\n        />\n      </Modal>\n    </>\n  );\n};\nexport default AddColumnButton;\n","import { FormControlLabel, useRadioGroup } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\n\nconst StyledFormControlLabel = styled(props => <FormControlLabel {...props} />)(\n  ({ _, checked }) => {\n    const userTheme = useSelector(selectTheme);\n    const colorChecked = userTheme === 'dark' ? '#FFF' : '#161616';\n    return {\n      '.MuiFormControlLabel-label': checked && {\n        // Change color here\n        color: colorChecked,\n      },\n    };\n  }\n);\n\nexport const CustomControlLabel = props => {\n  // MUI UseRadio Group\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n};\n","import { useEffect, useState } from 'react';\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Typography,\n} from '@mui/material';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport { CustomControlLabel } from './CustomControlLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPrioFilter } from 'store/filters/filtersSlice';\nimport { selectPrioFilter } from 'store/filters/selectors';\n\nconst ctrlLabelStyles = {\n  color: 'text.filterRadio',\n  fontFamily: 'Poppins',\n  fontSize: 12,\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  letterSpacing: -0.24,\n};\n\nexport const FilterBar = () => {\n  const currentPrio = useSelector(selectPrioFilter);\n  const [filter, setFilter] = useState(currentPrio);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPrioFilter(filter));\n  }, [dispatch, filter]);\n\n  return (\n    <Container\n      sx={{\n        width: 300,\n        height: 234,\n        p: 0,\n      }}\n    >\n      <Typography\n        sx={{\n          borderBottom: 1,\n          borderColor: 'rgba(255, 255, 255, 0.50)',\n          paddingBottom: 1.75,\n          marginBottom: 1.75,\n        }}\n        variant=\"h2\"\n        component=\"h2\"\n      >\n        Filters\n      </Typography>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: 14,\n        }}\n      >\n        <FormControl>\n          <FormLabel\n            sx={{\n              color: 'text.primary',\n              fontWeight: 500,\n              fontStyle: 'normal',\n              letterSpacing: '-0.28px',\n              '&.Mui-focused': {\n                color: 'text.primary',\n              },\n            }}\n          >\n            Label color\n          </FormLabel>\n          <RadioGroup\n            value={filter}\n            onChange={e => {\n              setFilter(e.target.value);\n            }}\n          >\n            <CustomControlLabel\n              label=\"Without priority\"\n              value=\"without\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"without\" />}\n            />\n            <CustomControlLabel\n              label=\"Low\"\n              value=\"low\"\n              sx={{ ...ctrlLabelStyles }}\n              control={<PriorityRadioBtn priority=\"low\" />}\n            />\n            <CustomControlLabel\n              label=\"Medium\"\n              value=\"medium\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"medium\" />}\n            />\n            <CustomControlLabel\n              label=\"High\"\n              value=\"high\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"high\" />}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          variant=\"text\"\n          sx={{\n            ...ctrlLabelStyles,\n            textDecorationLine: 'underline',\n            textTransform: 'none',\n            height: 18,\n          }}\n          style={\n            filter === 'all'\n              ? { pointerEvents: 'none', textDecoration: 'none' }\n              : null\n          }\n          onClick={() => {\n            setFilter('all');\n          }}\n          type=\"button\"\n        >\n          <Typography>{filter === 'all' ? 'Shown all' : 'Show all'}</Typography>\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { FilterBar } from './FilterBar';\nimport { Box, Button, SvgIcon, Typography } from '@mui/material';\nimport { Icon } from 'components/Icons';\n\nexport const FilterBtn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Button\n        sx={{\n          textTransform: 'none',\n          display: 'flex',\n          gap: '8px',\n          alignItems: 'center',\n        }}\n        type=\"button\"\n        onClick={handleOpenModal}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: '8px',\n            transition: 'all 250ms linear',\n            cursor: 'pointer',\n            '&:hover': {\n              transform: 'scale(1.1)',\n            },\n          }}\n        >\n          <SvgIcon\n            sx={{\n              width: '14px',\n              height: '14px',\n              color: 'text.primary',\n            }}\n          >\n            <Icon id={'filter'} />\n          </SvgIcon>\n        </Box>\n        <Typography\n          sx={{\n            color: 'text.primary',\n          }}\n        >\n          Filters\n        </Typography>\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n        <FilterBar />\n      </Modal>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport { selectBoard, selectColumns } from 'store/boards/selectors';\n\nimport { Box, Typography } from '@mui/material';\nimport { container, text } from 'styles';\nimport { FilterBtn } from 'components/Filter';\n\nconst BoardPage = () => {\n  const board = useSelector(selectBoard);\n  const columns = useSelector(selectColumns);\n\n  return (\n    <Box sx={container.board}>\n      <Box sx={container.boardInner}>\n        <Box sx={container.boardTopBar}>\n          <Typography component=\"h2\" variant=\"h3\" sx={text.boardTitle}>\n            {board.title}\n          </Typography>\n\n          <FilterBtn />\n        </Box>\n\n        <Box sx={container.columns}>\n          <Box sx={container.columnsInner}>\n            {columns.map(column => {\n              return <Column key={column._id} column={column} />;\n            })}\n          </Box>\n          <AddColumnButton />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BoardPage;\n"],"names":["validationSchema","Yup","shape","title","required","columnId","onCloseModal","dispatch","useDispatch","Box","sx","container","Typography","variant","mb","initialValues","onSubmit","values","resetForm","updateColumn","handleChange","handleSubmit","FormControl","fullWidth","TextField","label","type","id","name","value","onChange","component","style","color","fontSize","Button","form","button","SvgIcon","stroke","href","sprite","IconBtnRoot","styled","ButtonBase","theme","padding","margin","palette","text","sideSecond","transition","primary","display","onClick","iconId","useState","showModal","setShowModal","handleCloseModal","Card","card","Stack","direction","spacing","window","confirm","deleteColumn","Modal","isOpenModal","priority","priorityColor","otherProps","useField","field","meta","configTextfield","touched","error","helperText","StyledPlusIconContainer","justifyContent","alignItems","background","boxPlus","width","height","borderRadius","secondary","main","children","submitForm","useFormikContext","configButton","startIcon","textTransform","PrIcon","backgroundColor","btncolor","PrCheckedIcon","border","position","top","left","transform","content","props","priorityColorSwitcher","Radio","disableRipple","icon","checkedIcon","configDatePicker","InputLabelProps","shrink","description","deadline","parentColumn","formTitle","buttonTitle","taskOperation","taskId","initData","setPriority","Container","maxWidth","p","formattedDate","split","reverse","join","marginBottom","multiline","rows","FormLabel","lineHeight","letterSpacing","RadioGroup","row","defaultValue","event","target","FormControlLabel","control","ml","SubmitButton","closeModalHandler","priorityStyles","bgcolor","handleIconClick","borderLeft","marginRight","flexGrow","deleteTask","updateTask","selectPrioFilter","state","filters","prio","cards","useSelector","filteredCards","filter","gap","map","_id","column","tasks","addTask","boardId","useParams","parentBoard","console","log","addColumn","StyledFormControlLabel","_","checked","userTheme","selectTheme","CustomControlLabel","radioGroup","useRadioGroup","ctrlLabelStyles","fontFamily","fontStyle","fontWeight","FilterBar","currentPrio","setFilter","useEffect","setPrioFilter","borderBottom","borderColor","paddingBottom","marginTop","e","textDecorationLine","pointerEvents","textDecoration","FilterBtn","cursor","board","selectBoard","columns","selectColumns"],"sourceRoot":""}