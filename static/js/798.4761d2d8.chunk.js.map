{"version":3,"file":"static/js/798.4761d2d8.chunk.js","mappings":"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","sources":["components/AddColumn/EditColumnModal.jsx","components/Column/ColumnHeader.jsx","helpers/priorityColorSwitcher.js","components/Column/TruncatedText.jsx","components/Column/IconBtn.jsx","components/FormsUI/TextField/index.js","components/FormsUI/SubmitButton/index.js","components/FormsUI/RadioButtons/PriorityRadioBtn.jsx","components/FormsUI/DatePicker/DatePicker.jsx","components/AddCardForm/AddCardForm.jsx","components/Column/Task.jsx","store/filters/selectors.js","components/Column/TaskList.jsx","components/Column/Column.jsx","components/AddColumn/AddColumnButton.styled.js","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","components/Filter/CustomControlLabel.jsx","components/Filter/FilterBar.jsx","components/Filter/FilterBtn.jsx","pages/BoardPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\n\nimport { updateColumn } from 'store/boards/operations';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, onCloseModal }) => { \n const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(updateColumn({...values, columnId}));\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={{title}}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from 'store/boards/operations';\n\nimport { Icon } from 'components/Icons';\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from 'components/AddColumn/EditColumnModal';\nimport { Card, CardHeader, IconButton } from '@mui/material';\n\nconst ColumnHeader = ({ title, columnId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    if (window.confirm(`Do you really want to delete column ${title}?`)) {\n      dispatch(deleteColumn(columnId));\n    }\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader\n          title={title}\n          action={\n            <div>\n              <IconButton onClick={handleOpenModal}>\n                <Icon id={'pencil'} />\n              </IconButton>\n              <IconButton onClick={handleDeleteColumn}>\n                <Icon id={'trash'} />\n              </IconButton>\n            </div>\n          }\n        />\n\n        {showModal && (\n          <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n            <EditColumnModal\n              onCloseModal={handleCloseModal}\n              columnId={columnId}\n              title={title}\n              type=\"Submit\"\n            />\n          </Modal>\n        )}\n      </Card>\n    </div>\n  );\n};\nexport default ColumnHeader;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'high':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","import { Typography } from '@mui/material';\n\nconst TruncatedText = ({ text }) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.cardSecond\"\n      sx={{\n        display: '-webkit-box',\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: 'vertical',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      }}\n    >\n      {text}\n    </Typography>\n  );\n};\nexport default TruncatedText;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { Icon } from 'components/Icons';\n\nconst IconBtnRoot = styled(ButtonBase)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n  '& svg': {\n    stroke: theme.palette.text.sideSecond,\n    transition: 'stroke 0.3s',\n  },\n\n  '&:hover': {\n    color: theme.palette.text.sideSecond,\n    '& svg': {\n      stroke: theme.palette.text.primary,\n    },\n  },\n  '& .MuiTouchRipple-root': {\n    display: 'none',\n  },\n}));\n\nconst IconBtn = ({ onClick, iconId }) => {\n  return (\n    <IconBtnRoot onClick={onClick}>\n      <Icon id={iconId} />\n    </IconBtnRoot>\n  );\n};\n\nexport default IconBtn;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n\nconst TextFieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n\n  return <TextField {...configTextfield} />;\n};\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\n// import { Icon } from 'components/Icons';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\n\nconst SubmitButton = ({ children, ...otherProps }) => {\n  const { submitForm } = useFormikContext();\n  const handleSubmit = () => {\n    submitForm();\n  };\n  const configButton = {\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n  const typographyProps = {\n    style: {\n      textTransform: 'none',\n    },\n  };\n  const iconStyle = {\n    fill: 'white',\n    fontSize: '28px',\n  };\n  return (\n    <Button startIcon={<AddBoxIcon style={iconStyle} />} {...configButton}>\n      <span {...typographyProps}>{children}</span>\n    </Button>\n  );\n};\nexport default SubmitButton;\n","import React from 'react';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\n\nconst PrIcon = styled('span')(({ btncolor }) => ({\n  borderRadius: '50%',\n  width: 14,\n  height: 14,\n  backgroundColor: btncolor || '#BEDBB0',\n}));\n\nconst PrCheckedIcon = styled(PrIcon)(({ btncolor }) => ({\n  backgroundColor: 'transparent',\n  border: `1px solid ${btncolor || '#BEDBB0'}`,\n  position: 'relative',\n  '&:before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'block',\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: btncolor || '#BEDBB0',\n    content: '\"\"',\n  },\n}));\n\nconst PriorityRadioBtn = props => {\n  const btncolor = priorityColorSwitcher(props.priority);\n\n  return (\n    <Radio\n      disableRipple\n      icon={<PrIcon btncolor={btncolor} />}\n      checkedIcon={<PrCheckedIcon btncolor={btncolor} />}\n      {...props}\n    />\n  );\n};\nexport default PriorityRadioBtn;\n","import React from 'react';\nimport { TextField } from '@mui/material';\nimport { useField } from 'formik';\n\nconst DatePicker = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n  const configDatePicker = {\n    ...field,\n    ...otherProps,\n    type: 'date',\n    variant: 'standard',\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true,\n    },\n  };\n  if (meta && meta.touched && meta.error) {\n    configDatePicker.error = true;\n    configDatePicker.helperText = meta.error;\n  }\n  return <TextField {...configDatePicker} />;\n};\nexport default DatePicker;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Container } from '@mui/material';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Typography, RadioGroup, FormLabel, FormControl } from '@mui/material';\nimport DatePicker from 'components/FormsUI/DatePicker/DatePicker';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  deadline: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  deadline: Yup.date().required(),\n});\n\nconst AddCardForm = ({\n  parentColumn,\n  onCloseModal,\n  formTitle,\n  buttonTitle,\n  taskOperation,\n  taskId,\n  initData,\n}) => {\n  const dispatch = useDispatch();\n  const [priority, setPriority] = useState('without');\n\n  const handleChangePriority = event => {\n    setPriority(event.target.value);\n  };\n\n  const handleSubmit = values => {\n    // changing the deadline to the needed format\n    const formattedDate = values.deadline.split('-').reverse().join('-');\n\n    dispatch(\n      taskOperation({\n        ...values,\n        parentColumn,\n        priority,\n        taskId,\n        deadline: formattedDate,\n      })\n    );\n    //setSubmitting(false);\n    // resetForm();\n    onCloseModal();\n  };\n  return (\n    <Container>\n      <Formik\n        initialValues={initData ? initData : initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Typography variant=\"h2\" component=\"h2\" mb={3}>\n            {formTitle}\n          </Typography>\n          <Textfield\n            name=\"title\"\n            label=\"Title\"\n            sx={{\n              marginBottom: '14px',\n            }}\n          />\n          <Textfield\n            name=\"description\"\n            label=\"Description\"\n            multiline={true}\n            rows={6}\n            sx={{\n              marginBottom: '24px',\n            }}\n          />\n\n          <FormControl>\n            <FormLabel\n              id=\"priority-radios\"\n              sx={{\n                fontSize: 12,\n                lineHeight: 1.5,\n                letterSpacing: '-0.02em',\n                color: 'GrayText',\n              }}\n            >\n              Label color\n            </FormLabel>\n            <RadioGroup\n              sx={{\n                marginBottom: '14px',\n              }}\n              row\n              defaultValue=\"low\"\n              aria-labelledby=\"priority-radios\"\n              name=\"priority\"\n              value={priority}\n              onChange={handleChangePriority}\n            >\n              <FormControlLabel\n                value=\"low\"\n                control={<PriorityRadioBtn priority=\"low\" />}\n              />\n              <FormControlLabel\n                value=\"medium\"\n                control={\n                  <PriorityRadioBtn priority=\"medium\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"high\"\n                control={\n                  <PriorityRadioBtn priority=\"high\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"without\"\n                control={\n                  <PriorityRadioBtn priority=\"without\" sx={{ ml: '-14px' }} />\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          <Typography variant=\"body2\" component=\"h4\" mb={0.5}>\n            Deadline\n          </Typography>\n          <DatePicker\n            name=\"deadline\"\n            sx={{\n              marginBottom: '40px',\n            }}\n          />\n\n          <SubmitButton>{buttonTitle}</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default AddCardForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Card from '@mui/material/Card';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport { Typography, Stack, Box, useTheme } from '@mui/material';\nimport TruncatedText from './TruncatedText';\nimport IconBtn from './IconBtn';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\nimport { updateTask, deleteTask } from 'store/boards/operations';\n\nconst Task = ({ name, description, priority, deadline, taskId }) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  const handleDeleteTask = () => {\n    if (window.confirm(`Do you really want to delete task ${name}?`)) {\n      dispatch(deleteTask(taskId));\n    }\n\n  }\n\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyle = {\n    '&::before': {\n      content: '\"\"',\n      transform: 'translateY(20%)',\n      height: '12px',\n      width: '12px',\n      backgroundColor: `${priorityColor}`,\n      borderRadius: '50%',\n      display: 'inline-block',\n      marginRight: '4px',\n    },\n  };\n  const handleIconClick = () => {};\n\n  return (\n    <Card\n      elevation={2}\n      sx={{\n        py: '14px',\n        pl: '24px',\n        pr: '20px',\n        borderLeft: `4px solid ${priorityColor}`,\n        mb: '14px',\n      }}\n    >\n      <Box>\n        <Box\n          sx={{\n            pb: '14px',\n            mb: '14px',\n            borderBottom: `1px solid ${theme.palette.side.divider}`,\n          }}\n        >\n          <Typography variant=\"h5\" component=\"h2\" color=\"text.primary\" mb={1}>\n            {name}\n          </Typography>\n          <TruncatedText text={description} />\n        </Box>\n\n        {/* components below devider       */}\n\n        <Box>\n          <Stack direction=\"row\">\n            {/* priority container      */}\n            <Stack\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-start\"\n              spacing={0}\n              sx={{ marginRight: '14px' }}\n            >\n              <Box>\n                <Typography variant=\"caption\" color=\"text.sideSecond\">\n                  Priority\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant=\"h6\" sx={priorityStyle}>\n                  {priority}\n                </Typography>\n              </Box>\n            </Stack>\n\n            {/* deadline container     */}\n            <Stack\n              flexGrow={1}\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-start\"\n              spacing={0}\n            >\n              <Box>\n                <Typography variant=\"caption\" color=\"text.sideSecond\">\n                  Deadline\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant=\"h6\" color=\"text.primary\">\n                  {deadline}\n                </Typography>\n              </Box>\n            </Stack>\n\n            {/* icons container     */}\n\n            <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-end\"\n              spacing={1}\n            >\n              <Box>\n                <IconBtn onClick={handleIconClick} iconId=\"alert\" />\n              </Box>\n              <Box>\n                <IconBtn onClick={handleIconClick} iconId=\"move\" />\n              </Box>\n\n              <Box>\n                <IconBtn onClick={openModalHandler} iconId=\"pencil\" />\n              </Box>\n\n              <Box>\n                <IconBtn onClick={handleDeleteTask} iconId=\"trash\" />\n              </Box>\n            </Stack>\n          </Stack>\n        </Box>\n      </Box>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm\n          onCloseModal={closeModalHandler}\n          taskId={taskId}\n          formTitle={\"Edit card\"}\n          buttonTitle={\"Edit\"}\n          taskOperation={updateTask}\n          initData={{ title: name, description, priority, deadline}}\n        />\n      </Modal>\n    </Card>\n  );\n};\nexport default Task;\n","export const selectPrioFilter = state => state.filters.prio;\n","import { Box } from '@mui/material';\nimport Task from './Task';\nimport { useSelector } from 'react-redux';\nimport { selectPrioFilter } from 'store/filters/selectors';\n\nconst TaskList = ({ cards }) => {\n  const prio = useSelector(selectPrioFilter);\n  const filteredCards =\n    prio === 'all' ? cards : cards.filter(card => card.priority === prio);\n\n  return (\n    <Box\n      sx={{\n        overflowY: 'auto',\n        overflowX: 'hidden',\n      }}\n    >\n      {filteredCards &&\n        filteredCards.map(card => {\n          return (\n            <Task\n              key={card._id}\n              taskId={card._id}\n              name={card.title}\n              description={card.description}\n              priority={card.priority}\n              deadline={card.deadline}\n            />\n          );\n        })}\n    </Box>\n  );\n};\nexport default TaskList;\n","import { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport ColumnHeader from './ColumnHeader';\nimport TaskList from './TaskList';\nimport { Stack } from '@mui/material';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\nimport { addTask } from 'store/boards/operations';\n\nconst Column = ({ column }) => {\n  const [showModal, setShowModal] = useState(false);\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Stack\n      sx={{\n        width: '334px',\n        maxWidth: '334px',\n        height: '100%',\n      }}\n    >\n      <ColumnHeader title={column.title} columnId={column._id} />\n      <TaskList cards={column.tasks} />\n      <Button\n        variant=\"contained\"\n        startIcon={<AddBoxIcon />}\n        onClick={openModalHandler}\n      >\n        Add another card\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm\n          onCloseModal={closeModalHandler}\n          parentColumn={column._id}\n          formTitle={\"Add card\"}\n          buttonTitle={\"Add\"}\n          taskOperation={addTask}\n        />\n      </Modal>\n    </Stack>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  /* position: absolute;\n  top: 80px;\n  left: 650px; */\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: #5255bc;\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconStyle = styled.svg`\n  width: 14px;\n  height: 14px;\n  color: #ffffff;\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addColumn } from 'store/boards/operations';\n\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n// import { Icon } from 'components/Icons';\nimport { Box, FormControl, Typography, Button, SvgIcon, TextField } from '@mui/material';\nimport {container, button, form} from 'styles';\nimport sprite from 'components/Icons/sprite.svg';\n\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal }) => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n\n  const parentBoard = boardId;\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log({...values, parentBoard})\n    dispatch(addColumn({ ...values, parentBoard }));\n    resetForm();\n    onCloseModal();\n  };\n  return (\n    <Box sx={container.addColumnContainer}>\n      <Typography variant='h2' mb={3}>Add column</Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n      {({ values, handleChange, handleSubmit }) => (\n        <Form onSubmit={handleSubmit}>\n          <FormControl fullWidth>          \n            <TextField\n              label=\"Title\"\n              variant=\"outlined\"\n              type=\"text\"\n              id=\"text\"\n              name=\"title\"\n              sx={{mb: 3}}\n              value={values.title}\n              onChange={handleChange}\n            />\n            <ErrorMessage\n                name=\"Title\"\n                component=\"div\"\n                style={{ color: 'red',fontSize: 12 }}\n              />                  \n          </FormControl>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              sx={form.button}\n              type=\"submit\"             \n            >\n              <Box sx={button.boxIconPlus}>\n                  <SvgIcon sx={button.svgIconPlus}>\n                    <svg stroke=\"currentColor\">\n                            <use href={sprite + '#icon-plus'} />\n                    </svg>             \n                  </SvgIcon>\n              </Box>                 \n              Add\n            </Button>\n        </Form>\n      )}\n      </Formik>\n    </Box>     \n  );\n};\n\nexport default AddColumnModal;\n\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Button, IconStyle, IconWrapper, Text } from './AddColumnButton.styled';\nimport AddColumnModal from './AddColumnModal';\nimport { Icon } from 'components/Icons';\n\nconst AddColumnButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <>\n      <Button type=\"button\" onClick={handleOpenModal}>\n        <IconWrapper>\n          <IconStyle>\n            <Icon id={'plus'} />\n          </IconStyle>\n        </IconWrapper>\n        <Text>Add another column</Text>\n      </Button>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <AddColumnModal\n            onCloseModal={handleCloseModal}\n            title=\"New board\"\n            type=\"Submit\"\n            \n          />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default AddColumnButton;\n","import { FormControlLabel, useRadioGroup } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'store/auth/selectors';\n\nconst StyledFormControlLabel = styled(props => <FormControlLabel {...props} />)(\n  ({ _, checked }) => {\n    const userTheme = useSelector(selectTheme);\n    const colorChecked = userTheme === 'dark' ? '#FFF' : '#161616';\n    return {\n      '.MuiFormControlLabel-label': checked && {\n        // Change color here\n        color: colorChecked,\n      },\n    };\n  }\n);\n\nexport const CustomControlLabel = props => {\n  // MUI UseRadio Group\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n};\n","import { useEffect, useState } from 'react';\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Typography,\n} from '@mui/material';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport { CustomControlLabel } from './CustomControlLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPrioFilter } from 'store/filters/filtersSlice';\nimport { selectPrioFilter } from 'store/filters/selectors';\n\nconst ctrlLabelStyles = {\n  color: 'text.filterRadio',\n  fontFamily: 'Poppins',\n  fontSize: 12,\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  letterSpacing: -0.24,\n};\n\nexport const FilterBar = () => {\n  const currentPrio = useSelector(selectPrioFilter);\n  const [filter, setFilter] = useState(currentPrio);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPrioFilter(filter));\n  }, [dispatch, filter]);\n\n  return (\n    <Container\n      sx={{\n        width: 300,\n        height: 234,\n        p: 0,\n      }}\n    >\n      <Typography\n        sx={{\n          borderBottom: 1,\n          borderColor: 'rgba(255, 255, 255, 0.50)',\n          paddingBottom: 1.75,\n          marginBottom: 1.75,\n        }}\n        variant=\"h2\"\n        component=\"h2\"\n      >\n        Filters\n      </Typography>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: 14,\n        }}\n      >\n        <FormControl>\n          <FormLabel\n            sx={{\n              color: 'text.primary',\n              fontWeight: 500,\n              fontStyle: 'normal',\n              letterSpacing: '-0.28px',\n              '&.Mui-focused': {\n                color: 'text.primary',\n              },\n            }}\n          >\n            Label color\n          </FormLabel>\n          <RadioGroup\n            value={filter}\n            onChange={e => {\n              setFilter(e.target.value);\n            }}\n          >\n            <CustomControlLabel\n              label=\"Without priority\"\n              value=\"without\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"without\" />}\n            />\n            <CustomControlLabel\n              label=\"Low\"\n              value=\"low\"\n              sx={{ ...ctrlLabelStyles }}\n              control={<PriorityRadioBtn priority=\"low\" />}\n            />\n            <CustomControlLabel\n              label=\"Medium\"\n              value=\"medium\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"medium\" />}\n            />\n            <CustomControlLabel\n              label=\"High\"\n              value=\"high\"\n              sx={ctrlLabelStyles}\n              control={<PriorityRadioBtn priority=\"high\" />}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          variant=\"text\"\n          sx={{\n            ...ctrlLabelStyles,\n            textDecorationLine: 'underline',\n            textTransform: 'none',\n            height: 18,\n          }}\n          style={\n            filter === 'all'\n              ? { pointerEvents: 'none', textDecoration: 'none' }\n              : null\n          }\n          onClick={() => {\n            setFilter('all');\n          }}\n          type=\"button\"\n        >\n          <Typography>{filter === 'all' ? 'Shown all' : 'Show all'}</Typography>\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { FilterBar } from './FilterBar';\nimport { Box, Button, SvgIcon, Typography } from '@mui/material';\nimport { Icon } from 'components/Icons';\n\nexport const FilterBtn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Button\n        sx={{\n          textTransform: 'none',\n          display: 'flex',\n          gap: '8px',\n          alignItems: 'center',\n        }}\n        type=\"button\"\n        onClick={handleOpenModal}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: '8px',\n            transition: 'all 250ms linear',\n            cursor: 'pointer',\n            '&:hover': {\n              transform: 'scale(1.1)',\n            },\n          }}\n        >\n          <SvgIcon\n            sx={{\n              width: '14px',\n              height: '14px',\n              color: 'text.primary',\n            }}\n          >\n            <Icon id={'filter'} />\n          </SvgIcon>\n        </Box>\n        <Typography\n          sx={{\n            color: 'text.primary',\n          }}\n        >\n          Filters\n        </Typography>\n      </Button>\n      {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <FilterBar />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport { selectBoard, selectColumns } from 'store/boards/selectors';\n\nimport { Box, Typography } from '@mui/material';\nimport { container, text } from 'styles';\nimport { FilterBtn } from 'components/Filter';\n\nconst BoardPage = () => {\n  const board = useSelector(selectBoard);\n  const columns = useSelector(selectColumns);\n\n  return (\n    <Box sx={container.board}>\n      <Box sx={container.boardInner}>\n        <Box sx={container.boardTopBar}>\n          <Typography component=\"h2\" variant=\"h3\" sx={text.boardTitle}>\n            {board.title}\n          </Typography>\n\n          <FilterBtn />\n        </Box>\n\n        <Box sx={container.columns}>\n          <Box sx={container.columnsInner}>\n            {columns.map(column => {\n              return <Column key={column._id} column={column} />;\n            })}\n          </Box>\n          <AddColumnButton />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BoardPage;\n"],"names":["validationSchema","Yup","shape","title","required","columnId","onCloseModal","dispatch","useDispatch","Section","SectionTitle","initialValues","onSubmit","values","resetForm","updateColumn","ModalForm","FormWrapper","ErrorSection","name","component","TitleInput","type","id","placeholder","AuthFormSubmitButton","ButtonPlus","PlusIcon","useState","showModal","setShowModal","handleCloseModal","Card","CardHeader","action","IconButton","onClick","window","confirm","deleteColumn","Modal","isOpenModal","priority","priorityColor","text","Typography","variant","color","sx","display","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","IconBtnRoot","styled","ButtonBase","theme","padding","margin","stroke","palette","sideSecond","transition","primary","iconId","otherProps","useField","field","meta","configTextfield","fullWidth","touched","error","helperText","TextField","children","submitForm","useFormikContext","configButton","Button","startIcon","AddBox","style","fill","fontSize","textTransform","PrIcon","borderRadius","width","height","backgroundColor","btncolor","PrCheckedIcon","border","position","top","left","transform","content","props","priorityColorSwitcher","Radio","disableRipple","icon","checkedIcon","configDatePicker","InputLabelProps","shrink","description","deadline","parentColumn","formTitle","buttonTitle","taskOperation","taskId","initData","setPriority","Container","formattedDate","split","reverse","join","mb","label","marginBottom","multiline","rows","FormControl","FormLabel","lineHeight","letterSpacing","RadioGroup","row","defaultValue","value","onChange","event","target","FormControlLabel","control","ml","useTheme","closeModalHandler","priorityStyle","marginRight","handleIconClick","elevation","py","pl","pr","borderLeft","Box","pb","borderBottom","side","divider","Stack","direction","justifyContent","alignItems","spacing","flexGrow","deleteTask","updateTask","selectPrioFilter","state","filters","prio","cards","useSelector","filteredCards","filter","card","overflowY","overflowX","map","_id","column","maxWidth","tasks","addTask","IconWrapper","IconStyle","Text","boardId","useParams","parentBoard","container","console","log","addColumn","handleChange","handleSubmit","form","button","SvgIcon","href","sprite","StyledFormControlLabel","_","checked","userTheme","selectTheme","CustomControlLabel","radioGroup","useRadioGroup","ctrlLabelStyles","fontFamily","fontStyle","fontWeight","FilterBar","currentPrio","setFilter","useEffect","setPrioFilter","p","borderColor","paddingBottom","marginTop","e","textDecorationLine","pointerEvents","textDecoration","FilterBtn","gap","cursor","board","selectBoard","columns","selectColumns"],"sourceRoot":""}