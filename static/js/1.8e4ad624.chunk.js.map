{"version":3,"file":"static/js/1.8e4ad624.chunk.js","mappings":"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","sources":["components/Column/ColumnHeader.jsx","helpers/priorityColorSwitcher.js","webpack://react-homework-template/./src/components/Column/Task.module.css?558a","components/Column/Task.jsx","components/Column/TaskList.jsx","components/FormsUI/TextField/index.js","components/FormsUI/SubmitButton/index.js","components/FormsUI/RadioButtons/PriorityRadioBtn.jsx","components/FormsUI/DatePicker/DatePicker.jsx","components/AddCardForm/AddCardForm.jsx","components/Column/Column.jsx","components/AddColumn/AddColumnButton.styled.js","components/AddColumn/AddColumnModal.styled.js","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","components/AddColumn/EditColumnModal.jsx","components/AddColumn/EditColumnButton.styled.js","components/AddColumn/EditColumnButton.jsx","pages/BoardPage.jsx"],"sourcesContent":["import { IconButton } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport { Icon } from 'components/Icons';\nconst ColumnHeader = ({ title }) => {\n  return (\n    <div>\n      <Card>\n        <CardHeader\n          action={\n            <div>\n              <IconButton>\n                <Icon id={'pencil'} />\n              </IconButton>\n              <IconButton>\n                <Icon id={'trash'} />\n              </IconButton>\n            </div>\n          }\n          title={title}\n        />\n      </Card>\n    </div>\n  );\n};\nexport default ColumnHeader;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'Low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'Medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'High':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'Without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","// extracted by mini-css-extract-plugin\nexport default {\"truncate-lines\":\"Task_truncate-lines__7UK0E\"};","import Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport CardContent from '@mui/material/CardContent';\nimport { Typography } from '@mui/material';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport { Icon } from 'components/Icons';\nimport { IconButton } from '@mui/material';\n\nimport css from './Task.module.css';\n\nconst TruncatedText = ({ text }) => (\n  <Typography className={css['truncate-lines']}>{text}</Typography>\n);\n\nconst Task = ({ name, description, priority, deadline }) => {\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyle = {\n    '&::before': {\n      content: '\"\"',\n      height: '12px',\n      width: '12px',\n      backgroundColor: `${priorityColor}`,\n      borderRadius: '50%',\n      display: 'inline-block',\n    },\n  };\n\n  return (\n    <Card\n      elevation={2}\n      sx={{\n        borderLeft: `4px solid ${priorityColor}`,\n      }}\n    >\n      <CardHeader title={name} />\n      <CardContent>\n        <TruncatedText text={description} />\n\n        <Divider variant=\"middle\" />\n\n        <Stack spacing={2} direction=\"row\">\n          <Stack>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Priority\n            </Typography>\n            <Typography sx={priorityStyle}>{priority}</Typography>\n          </Stack>\n\n          <Stack>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Deadline\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {deadline}\n            </Typography>\n          </Stack>\n          <Stack\n            direction=\"row\"\n            alignItems=\"flex-end\"\n            justifyContent=\"flex-end\"\n          >\n            <IconButton>\n              <Icon id={'alert'} />\n            </IconButton>\n\n            <IconButton>\n              <Icon id={'move'} />\n            </IconButton>\n\n            <IconButton>\n              <Icon id={'pencil'} />\n            </IconButton>\n            <IconButton>\n              <Icon id={'trash'} />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n};\nexport default Task;\n","import { Box } from '@mui/material';\nimport Task from './Task';\n\nconst TaskList = ({ cards }) => {\n  return (\n    <Box\n      sx={{\n        overflowY: 'auto',\n        overflowX: 'hidden',\n      }}\n    >\n      {cards.map(card => {\n        const { name, description, priority, deadline } = card;\n\n        return (\n          <Task\n            key={card.id}\n            name={name}\n            description={description}\n            priority={priority}\n            deadline={deadline}\n          />\n        );\n      })}\n    </Box>\n  );\n};\nexport default TaskList;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useField } from 'formik';\n\nconst TextFieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n\n  return <TextField {...configTextfield} />;\n};\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\n// import { Icon } from 'components/Icons';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\n\nconst SubmitButton = ({ children, ...otherProps }) => {\n  const { submitForm } = useFormikContext();\n  const handleSubmit = () => {\n    submitForm();\n  };\n  const configButton = {\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n  const typographyProps = {\n    style: {\n      textTransform: 'none',\n    },\n  };\n  const iconStyle = {\n    fill: 'white',\n    fontSize: '28px',\n  };\n  return (\n    <Button startIcon={<AddBoxIcon style={iconStyle} />} {...configButton}>\n      <span {...typographyProps}>{children}</span>\n    </Button>\n  );\n};\nexport default SubmitButton;\n","import React from 'react';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\n\nconst PrIcon = styled('span')(({ btncolor }) => ({\n  borderRadius: '50%',\n  width: 14,\n  height: 14,\n  backgroundColor: btncolor || '#BEDBB0',\n}));\n\nconst PrCheckedIcon = styled(PrIcon)(({ btncolor }) => ({\n  backgroundColor: 'transparent',\n  border: `1px solid ${btncolor || '#BEDBB0'}`,\n  position: 'relative',\n  '&:before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'block',\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: btncolor || '#BEDBB0',\n    content: '\"\"',\n  },\n}));\n\nconst PriorityRadioBtn = props => {\n  const btncolor = priorityColorSwitcher(props.priority);\n\n  return (\n    <Radio\n      disableRipple\n      icon={<PrIcon btncolor={btncolor} />}\n      checkedIcon={<PrCheckedIcon btncolor={btncolor} />}\n      {...props}\n    />\n  );\n};\nexport default PriorityRadioBtn;\n","import React from 'react';\nimport { TextField } from '@mui/material';\nimport { useField } from 'formik';\n\nconst DatePicker = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n  const configDatePicker = {\n    ...field,\n    ...otherProps,\n    type: 'date',\n    variant: 'standard',\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true,\n    },\n  };\n  if (meta && meta.touched && meta.error) {\n    configDatePicker.error = true;\n    configDatePicker.helperText = meta.error;\n  }\n  return <TextField {...configDatePicker} />;\n};\nexport default DatePicker;\n","import * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Container } from '@mui/material';\nimport Textfield from '../FormsUI/TextField';\nimport SubmitButton from 'components/FormsUI/SubmitButton';\nimport PriorityRadioBtn from 'components/FormsUI/RadioButtons/PriorityRadioBtn';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Typography, RadioGroup, FormLabel, FormControl } from '@mui/material';\nimport DatePicker from 'components/FormsUI/DatePicker/DatePicker';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  deadline: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  deadline: Yup.date().required('Required'),\n});\n\nconst handleSubmit = values => {\n  console.log(values);\n  //setSubmitting(false);\n  // resetForm();\n  //onCloseModal();\n};\n\nconst AddCardForm = () => {\n  return (\n    <Container>\n      <Formik\n        initialValues={{ ...initialValues }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Typography variant=\"h2\" component=\"h2\" mb={3}>\n            Add card\n          </Typography>\n          <Textfield\n            name=\"title\"\n            label=\"Title\"\n            sx={{\n              marginBottom: '14px',\n            }}\n          />\n          <Textfield\n            name=\"description\"\n            label=\"Description\"\n            multiline={true}\n            rows={6}\n            sx={{\n              marginBottom: '24px',\n            }}\n          />\n\n          <FormControl>\n            <FormLabel\n              id=\"priority-radios\"\n              sx={{\n                fontSize: 12,\n                lineHeight: 1.5,\n                letterSpacing: '-0.02em',\n                color: 'GrayText',\n              }}\n            >\n              Label color\n            </FormLabel>\n            <RadioGroup\n              sx={{\n                marginBottom: '14px',\n              }}\n              row\n              defaultValue=\"low\"\n              aria-labelledby=\"priority-radios\"\n              name=\"priorityBtn\"\n            >\n              <FormControlLabel\n                value=\"low\"\n                control={<PriorityRadioBtn priority=\"Low\" />}\n              />\n              <FormControlLabel\n                value=\"medium\"\n                control={\n                  <PriorityRadioBtn priority=\"Medium\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"High\"\n                control={\n                  <PriorityRadioBtn priority=\"High\" sx={{ ml: '-14px' }} />\n                }\n              />\n              <FormControlLabel\n                value=\"Without\"\n                control={\n                  <PriorityRadioBtn priority=\"Without\" sx={{ ml: '-14px' }} />\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          <Typography variant=\"body2\" component=\"h4\" mb={0.5}>\n            Deadline\n          </Typography>\n          <DatePicker\n            name=\"deadline\"\n            sx={{\n              marginBottom: '40px',\n            }}\n          />\n\n          <SubmitButton>Add</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default AddCardForm;\n","import { useState } from 'react';\nimport cards from '../../test-data/cards.json';\nimport Button from '@mui/material/Button';\nimport ColumnHeader from './ColumnHeader';\nimport TaskList from './TaskList';\nimport { Stack } from '@mui/material';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport Modal from 'components/Modal/Modal';\nimport AddCardForm from 'components/AddCardForm';\n// import SubmitButton from 'components/FormsUI/SubmitButton';\n\nconst Column = () => {\n  const [showModal, setShowModal] = useState(false);\n  const openModalHandler = () => {\n    setShowModal(true);\n  };\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n  return (\n    <Stack\n      sx={{\n        width: '100%',\n        maxWidth: 360,\n        height: '100vh',\n        marginLeft: '15px',\n      }}\n    >\n      <ColumnHeader title={'Todo'}></ColumnHeader>\n      <TaskList cards={cards}></TaskList>\n\n      <Button\n        variant=\"contained\"\n        startIcon={<AddBoxIcon />}\n        onClick={openModalHandler}\n      >\n        Add another card\n      </Button>\n      <Modal isOpenModal={showModal} onCloseModal={closeModalHandler}>\n        <AddCardForm />\n      </Modal>\n    </Stack>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 80px;\n  left: 650px;\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n \n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: #5255BC;\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconStyle = styled.svg`\n  width: 14px;\n  height: 14px;\n  color: #ffffff;\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;","\n\nimport styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: #161616;\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color:#fff;\n  border: 1px solid #5255BC;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color:#161616;\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: #161616;\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: #5255BC;\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: #fff;\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: #fff;\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616;\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;","import React from 'react';\n// import { useDispatch } from \"react-redux\";\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal}) => {\n    // const dispatch = useDispatch();\n    \n    const handleSubmit = (values, { resetForm }) => {\n        // const { title } = values;\n        resetForm();\n        onCloseModal();\n\n    }\n  return (\n    <Section>\n      <SectionTitle>Add column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Add\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddColumnModal;","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Button, IconStyle, IconWrapper, Text } from './AddColumnButton.styled';\nimport AddColumnModal from './AddColumnModal';\nimport { Icon } from 'components/Icons';\n\nconst AddColumnButton = () => {\n    const [showModal, setShowModal] = useState(false);\n    const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n      <>\n      <Button type=\"button\" onClick={handleOpenModal}>\n        <IconWrapper>\n          <IconStyle>\n            <Icon id={\"plus\"} />\n          </IconStyle>\n        </IconWrapper>\n          <Text>Add another column</Text>\n        </Button>\n        {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <AddColumnModal  onCloseModal={handleCloseModal} title=\"New board\"\n            type=\"Submit\"/>\n          </Modal>\n           )}\n      </>\n    )\n}\nexport default AddColumnButton;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, closeModal }) => {\n\n  const initialValues = {\n    title,\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;","import styled from 'styled-components';\n\nexport const Column = styled.div`\n  position: absolute;\n  top: 80px;\n  right: 50px;\n  width: 334px;\n  height: 56px;\n  padding: 14px 24px;\n \n\n  display: flex;\n justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconStyle = styled.svg`\n  width: 16px;\n  height: 16px;\n  color: #16161680;\n   cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.4;\n    transform: scale(1.4);\n  }\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 230px;\n`;","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from './EditColumnModal';\nimport {Column, IconStyle, IconWrapper, Text } from './EditColumnButton.styled';\nimport { Icon } from 'components/Icons';\n\n\nconst EditColumnButton = () => {\n    const [showModal, setShowModal] = useState(false);\n    const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    };\n     return (\n       <Column>\n         <IconWrapper>\n           <Text>In progress</Text>\n          <IconStyle onClick={handleOpenModal}>\n               <Icon id={\"pencil\"} />\n             </IconStyle>\n             <IconStyle>\n                <Icon id={\"trash\"} />\n          </IconStyle>\n         </IconWrapper>\n        {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <EditColumnModal  onCloseModal={handleCloseModal} \n            type=\"Submit\"/>\n          </Modal>\n           )}\n      </Column>\n    )\n}\nexport default EditColumnButton;","import { useParams } from 'react-router-dom';\nimport Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport EditColumnButton from 'components/AddColumn/EditColumnButton';\n\nconst BoardPage = () => {\n  const { boardId } = useParams();\n  return (\n    <div>\n      <h1>BoardPage: {boardId}</h1>\n      <AddColumnButton />\n      <EditColumnButton/>\n      <Column />\n    </div>\n  );\n};\n\nexport default BoardPage;\n"],"names":["title","Card","CardHeader","action","IconButton","id","priority","priorityColor","TruncatedText","text","Typography","className","css","name","description","deadline","priorityColorSwitcher","priorityStyle","content","height","width","backgroundColor","borderRadius","display","elevation","sx","borderLeft","CardContent","Divider","variant","Stack","spacing","direction","color","alignItems","justifyContent","cards","Box","overflowY","overflowX","map","card","otherProps","useField","field","meta","configTextfield","fullWidth","touched","error","helperText","TextField","children","submitForm","useFormikContext","configButton","onClick","Button","startIcon","AddBox","style","fill","fontSize","textTransform","PrIcon","styled","btncolor","PrCheckedIcon","border","position","top","left","transform","props","Radio","disableRipple","icon","checkedIcon","configDatePicker","type","InputLabelProps","shrink","initialValues","validationSchema","Yup","shape","required","handleSubmit","values","console","log","Container","onSubmit","component","mb","label","marginBottom","multiline","rows","FormControl","FormLabel","lineHeight","letterSpacing","RadioGroup","row","defaultValue","FormControlLabel","value","control","ml","useState","showModal","setShowModal","maxWidth","marginLeft","Modal","isOpenModal","onCloseModal","IconWrapper","IconStyle","Text","Section","SectionTitle","FormWrapper","TitleInput","Field","AuthFormSubmitButton","ButtonPlus","PlusIcon","ErrorSection","ErrorMessage","ModalForm","Form","resetForm","placeholder","handleCloseModal","closeModal","columnId","Column","boardId","useParams"],"sourceRoot":""}