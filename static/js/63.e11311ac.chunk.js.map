{"version":3,"file":"static/js/63.e11311ac.chunk.js","mappings":"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","sources":["components/Column/ColumnHeader.jsx","helpers/priorityColorSwitcher.js","webpack://react-homework-template/./src/components/Column/Task.module.css?558a","components/Column/Task.jsx","components/Column/TaskList.jsx","components/Column/Column.jsx","components/AddColumn/AddColumnButton.styled.js","components/AddColumn/AddColumnModal.styled.js","components/AddColumn/AddColumnModal.jsx","components/AddColumn/AddColumnButton.jsx","components/AddColumn/EditColumnModal.jsx","components/AddColumn/EditColumnButton.styled.js","components/AddColumn/EditColumnButton.jsx","pages/BoardPage.jsx"],"sourcesContent":["import { IconButton } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport { Icon } from 'components/Icons';\nconst ColumnHeader = ({ title }) => {\n  return (\n    <div>\n      <Card>\n        <CardHeader\n          action={\n            <div>\n              <IconButton>\n                <Icon id={'pencil'} />\n              </IconButton>\n              <IconButton>\n                <Icon id={'trash'} />\n              </IconButton>\n            </div>\n          }\n          title={title}\n        />\n      </Card>\n    </div>\n  );\n};\nexport default ColumnHeader;\n","const priorityColorSwitcher = priority => {\n  let priorityColor = '';\n\n  switch (priority) {\n    case 'Low':\n      priorityColor = '#8FA1D0';\n      break;\n    case 'Medium':\n      priorityColor = '#E09CB5';\n      break;\n    case 'High':\n      priorityColor = '#BEDBB0';\n      break;\n    case 'Without':\n      priorityColor = '#595959';\n      break;\n    default:\n      priorityColor = '#595959';\n  }\n  return priorityColor;\n};\nexport default priorityColorSwitcher;\n","// extracted by mini-css-extract-plugin\nexport default {\"truncate-lines\":\"Task_truncate-lines__7UK0E\"};","import Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport priorityColorSwitcher from 'helpers/priorityColorSwitcher';\nimport CardContent from '@mui/material/CardContent';\nimport { Typography } from '@mui/material';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport { Icon } from 'components/Icons';\nimport { IconButton } from '@mui/material';\n\nimport css from './Task.module.css';\n\nconst TruncatedText = ({ text }) => (\n  <Typography className={css['truncate-lines']}>{text}</Typography>\n);\n\nconst Task = ({ name, description, priority, deadline }) => {\n  const priorityColor = priorityColorSwitcher(priority);\n  const priorityStyle = {\n    '&::before': {\n      content: '\"\"',\n      height: '12px',\n      width: '12px',\n      backgroundColor: `${priorityColor}`,\n      borderRadius: '50%',\n      display: 'inline-block',\n    },\n  };\n\n  return (\n    <Card\n      elevation={2}\n      sx={{\n        borderLeft: `4px solid ${priorityColor}`,\n      }}\n    >\n      <CardHeader title={name} />\n      <CardContent>\n        <TruncatedText text={description} />\n\n        <Divider variant=\"middle\" />\n\n        <Stack spacing={2} direction=\"row\">\n          <Stack>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Priority\n            </Typography>\n            <Typography sx={priorityStyle}>{priority}</Typography>\n          </Stack>\n\n          <Stack>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Deadline\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {deadline}\n            </Typography>\n          </Stack>\n          <Stack\n            direction=\"row\"\n            alignItems=\"flex-end\"\n            justifyContent=\"flex-end\"\n          >\n            <IconButton>\n              <Icon id={'alert'} />\n            </IconButton>\n\n            <IconButton>\n              <Icon id={'move'} />\n            </IconButton>\n\n            <IconButton>\n              <Icon id={'pencil'} />\n            </IconButton>\n            <IconButton>\n              <Icon id={'trash'} />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n};\nexport default Task;\n","import { Box } from '@mui/material';\nimport Task from './Task';\n\nconst TaskList = ({ cards }) => {\n  return (\n    <Box\n      sx={{\n        overflowY: 'auto',\n        overflowX: 'hidden',\n      }}\n    >\n      {cards.map(card => {\n        const { name, description, priority, deadline } = card;\n\n        return (\n          <Task\n            key={card.id}\n            name={name}\n            description={description}\n            priority={priority}\n            deadline={deadline}\n          />\n        );\n      })}\n    </Box>\n  );\n};\nexport default TaskList;\n","import cards from '../../test-data/cards.json';\nimport Button from '@mui/material/Button';\nimport ColumnHeader from './ColumnHeader';\nimport TaskList from './TaskList';\nimport { Stack } from '@mui/material';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\n\nconst Column = () => {\n  return (\n    <Stack\n      sx={{\n        width: '100%',\n        maxWidth: 360,\n        height: '100vh',\n        marginLeft: '15px',\n      }}\n    >\n      <ColumnHeader title={'Todo'}></ColumnHeader>\n      <TaskList cards={cards}></TaskList>\n      <Button variant=\"contained\" startIcon={<AddBoxIcon />}>\n        Add another card\n      </Button>\n    </Stack>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 80px;\n  left: 650px;\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n \n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: #5255BC;\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const IconStyle = styled.svg`\n  width: 14px;\n  height: 14px;\n  color: #ffffff;\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;","\n\nimport styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: #161616;\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color:#fff;\n  border: 1px solid #5255BC;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color:#161616;\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: #161616;\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: #5255BC;\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: #fff;\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: #fff;\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616;\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;","import React from 'react';\n// import { useDispatch } from \"react-redux\";\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ onCloseModal}) => {\n    // const dispatch = useDispatch();\n    \n    const handleSubmit = (values, { resetForm }) => {\n        // const { title } = values;\n        resetForm();\n        onCloseModal();\n\n    }\n  return (\n    <Section>\n      <SectionTitle>Add column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Add\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddColumnModal;","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { Button, IconStyle, IconWrapper, Text } from './AddColumnButton.styled';\nimport AddColumnModal from './AddColumnModal';\nimport { Icon } from 'components/Icons';\n\nconst AddColumnButton = () => {\n    const [showModal, setShowModal] = useState(false);\n    const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return (\n      <>\n      <Button type=\"button\" onClick={handleOpenModal}>\n        <IconWrapper>\n          <IconStyle>\n            <Icon id={\"plus\"} />\n          </IconStyle>\n        </IconWrapper>\n          <Text>Add another column</Text>\n        </Button>\n        {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <AddColumnModal  onCloseModal={handleCloseModal} title=\"New board\"\n            type=\"Submit\"/>\n          </Modal>\n           )}\n      </>\n    )\n}\nexport default AddColumnButton;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icons';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from './AddColumnModal.styled';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, closeModal }) => {\n\n  const initialValues = {\n    title,\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                 <Icon id={\"plus\"} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;","import styled from 'styled-components';\n\nexport const Column = styled.div`\n  position: absolute;\n  top: 80px;\n  right: 50px;\n  width: 334px;\n  height: 56px;\n  padding: 14px 24px;\n \n\n  display: flex;\n justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: #fff;\n\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconStyle = styled.svg`\n  width: 16px;\n  height: 16px;\n  color: #16161680;\n   cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.4;\n    transform: scale(1.4);\n  }\n`;\n\nexport const Text = styled.p`\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 230px;\n`;","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport EditColumnModal from './EditColumnModal';\nimport {Column, IconStyle, IconWrapper, Text } from './EditColumnButton.styled';\nimport { Icon } from 'components/Icons';\n\n\nconst EditColumnButton = () => {\n    const [showModal, setShowModal] = useState(false);\n    const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    };\n     return (\n       <Column>\n         <IconWrapper>\n           <Text>In progress</Text>\n          <IconStyle onClick={handleOpenModal}>\n               <Icon id={\"pencil\"} />\n             </IconStyle>\n             <IconStyle>\n                <Icon id={\"trash\"} />\n          </IconStyle>\n         </IconWrapper>\n        {showModal && (\n        <Modal isOpenModal={showModal} onCloseModal={handleCloseModal}>\n          <EditColumnModal  onCloseModal={handleCloseModal} \n            type=\"Submit\"/>\n          </Modal>\n           )}\n      </Column>\n    )\n}\nexport default EditColumnButton;","import { useParams } from 'react-router-dom';\nimport Column from 'components/Column/Column';\nimport AddColumnButton from 'components/AddColumn/AddColumnButton';\nimport EditColumnButton from 'components/AddColumn/EditColumnButton';\n\nconst BoardPage = () => {\n  const { boardId } = useParams();\n  return (\n    <div>\n      <h1>BoardPage: {boardId}</h1>\n      <AddColumnButton />\n      <EditColumnButton/>\n      <Column />\n    </div>\n  );\n};\n\nexport default BoardPage;\n"],"names":["title","Card","CardHeader","action","IconButton","id","priority","priorityColor","TruncatedText","text","Typography","className","css","name","description","deadline","priorityColorSwitcher","priorityStyle","content","height","width","backgroundColor","borderRadius","display","elevation","sx","borderLeft","CardContent","Divider","variant","Stack","spacing","direction","color","alignItems","justifyContent","cards","Box","overflowY","overflowX","map","card","maxWidth","marginLeft","Button","startIcon","AddBox","styled","IconWrapper","IconStyle","Text","Section","SectionTitle","FormWrapper","TitleInput","Field","AuthFormSubmitButton","ButtonPlus","PlusIcon","ErrorSection","ErrorMessage","ModalForm","Form","validationSchema","Yup","shape","required","initialValues","onCloseModal","onSubmit","values","resetForm","component","type","placeholder","useState","showModal","setShowModal","handleCloseModal","onClick","Modal","isOpenModal","closeModal","columnId","Column","boardId","useParams"],"sourceRoot":""}